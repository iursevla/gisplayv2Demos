var GisplayLibrary =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 12);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/* unknown exports provided */
/* all exports used */
/*!************************************!*\
  !*** ./src/Gisplay/Maps/Legend.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * This class represents the Map Legend. 15/03\r\n * @see Diogo's thesis page 66/67 + 58/59 + 69(Figures)\r\n */\nvar Legend = exports.Legend = function () {\n    /**\r\n     * Creates an instance of Legend class.\r\n     * @param {number} id -  The id of the legend.\r\n     * @param {string} title - The title for the legend.\r\n     * \r\n     * @memberOf Legend\r\n     */\n    function Legend(id, title) {\n        _classCallCheck(this, Legend);\n\n        /**\r\n         * Title of the Gisplay map Legend.\r\n         * @type {string}\r\n         */\n        this.title = title;\n        /**\r\n         * The div that contains the Legend.\r\n         * @type {HTMLDivElement}\r\n         */\n        this.legendDiv = null;\n        /**\r\n         * The table element where the legend elements will be apppended.\r\n         * @type {HTMLTableElement}\r\n         */\n        this.table = null;\n        /**\r\n         * Class name for the Legend? Not used?\r\n         * @type {string}\r\n         */\n        this.className = null;\n        /**\r\n         * The last div to insert in the legend. Only for PSymbol Maps.\r\n         * @type {HTMLDivElement}\r\n         */\n        this.lastdiv = undefined;\n        /**\r\n         * If it is the first insertion or not. Only for PSymbol Maps.\r\n         * @type {boolean}\r\n         */\n        this.firstInsertion = false;\n        /**\r\n         * Constant to use when it's a Polygon.\r\n         * @constant {number} POLYGON\r\n         */\n        this.POLYGON = 1;\n        /**\r\n        * Constant to use when it's a Point.\r\n        * @constant {number} POLYGON\r\n        */\n        this.POINT = 2;\n\n        this.init(id, null);\n    }\n\n    /**\r\n     * Initialise Legend. Creates a table element and appends title, color element and value element.\r\n     * @param {number} id - The id of this Legend.\r\n     * @param {string} classname - The class name to be usde by the Legend.\r\n     * @memberOf Legend\r\n     */\n\n\n    _createClass(Legend, [{\n        key: 'init',\n        value: function init(id, classname) {\n            //const mapCanvas = document.getElementById(`mapCanvas${id}`); //@TODO: Remove\n            this.legendDiv = document.createElement('div');\n            if (classname != undefined && classname != null) this.legendDiv.className = classname;else this.legendDiv.className = '_gisplaylegendBR';\n\n            this.legendDiv.id = 'legendDiv' + id;\n\n            this.table = document.createElement('table');\n            this.table.style.zIndex = \"2000\";\n            var thvalue = document.createElement('th');\n            var thcolor = document.createElement('th');\n            thcolor.style.align = \"center\";\n\n            this.table.appendChild(thcolor);\n            this.table.appendChild(thvalue);\n\n            var titlerow = document.createElement('tr');\n            var titletd = document.createElement('td');\n            titletd.colSpan = 2;\n            titletd.style.textAlign = 'center';\n            titletd.style.width = 100;\n            var titletext = document.createTextNode(this.title);\n            titletd.appendChild(titletext);\n            titlerow.appendChild(titletd);\n            this.table.appendChild(titlerow);\n        }\n\n        /**\r\n         * Inserts one row for the Aesthetic object.\r\n         * Used in Dot Maps.\r\n         * @param {Aesthetic} currentaes - The Aesthetic object \r\n         * @param {Map} mapobj - The Map object where the point row will be added. \r\n         * @see Diogo's thesis Page 69 5.1c\r\n         * @memberOf Legend\r\n         */\n\n    }, {\n        key: 'insertPointRow',\n        value: function insertPointRow(currentaes, mapobj) {\n            this.insertRow(currentaes, mapobj, this.POINT);\n        }\n\n        /**\r\n         * Inserts one polygon row into the Legend. Used for area based Maps (Choropleth and Chorocromatic).\r\n         * @param {Aesthetic} currentaes  - The Aesthetic object \r\n         * @param {Map} mapobj - The map where to insert a polygon row.\r\n         * @see Diogo's thesis Page 69 5.1b\r\n         * @memberOf Legend\r\n         */\n\n    }, {\n        key: 'insertPolygonRow',\n        value: function insertPolygonRow(currentaes, mapobj) {\n            this.insertRow(currentaes, mapobj, this.POLYGON);\n        }\n\n        /**\r\n         * Adds one row to the Legend and attaches an on click event to said row.\r\n         * @param {Aesthetic} currentaes  - The Aesthetic object.\r\n         * @param {Map} mapobj - The map where to insert a polygon row.\r\n         * @param {number} type - The type of row to insert. 1=Polygon, 2=Point. @TODO: Should be constant\r\n         * @memberOf Legend\r\n         */\n\n    }, {\n        key: 'insertRow',\n        value: function insertRow(currentaes, mapobj, type) {\n            var row = document.createElement('tr');\n            var value = document.createElement('td');\n            var color = document.createElement('td');\n            var text = void 0;\n            if (typeof currentaes.range[0] === 'number') {\n                var mininput = currentaes.range[0] != null ? currentaes.range[0] : mapobj.min;\n                var maxinput = currentaes.range[1] != null ? currentaes.range[1] : mapobj.max;\n                if (!currentaes.isOuter()) text = document.createTextNode('[' + mininput + ', ' + maxinput + '[');else text = document.createTextNode('[' + mininput + ', ' + maxinput + ']');\n            } else text = document.createTextNode(currentaes.range[0]);\n\n            value.appendChild(text);\n            var colorDiv = document.createElement('div');\n            colorDiv.style.position = 'relative';\n\n            var _currentaes$getFillCo = currentaes.getFillColor(),\n                _currentaes$getFillCo2 = _slicedToArray(_currentaes$getFillCo, 4),\n                r = _currentaes$getFillCo2[0],\n                g = _currentaes$getFillCo2[1],\n                b = _currentaes$getFillCo2[2],\n                a = _currentaes$getFillCo2[3];\n\n            var rgba = 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n            colorDiv.style['backgroundColor'] = rgba;\n            if (type === this.POLYGON) {\n                //polygon\n                colorDiv.style.height = 25;\n                colorDiv.style.width = 80;\n                if (currentaes.getStrokeColor() != null) {\n                    //&& currentaes != undefined\n                    var _currentaes$getStroke = currentaes.getStrokeColor(),\n                        _currentaes$getStroke2 = _slicedToArray(_currentaes$getStroke, 4),\n                        _r = _currentaes$getStroke2[0],\n                        _g = _currentaes$getStroke2[1],\n                        _b = _currentaes$getStroke2[2],\n                        _a = _currentaes$getStroke2[3];\n\n                    colorDiv.style['borderColor'] = 'rgba(' + _r + ',' + _g + ',' + _b + ',' + _a + ')';\n                }\n                colorDiv.className = '_gisplayrectangle';\n            } else if (type === this.POINT) {\n                //point\n                var size = void 0;\n                if (currentaes.getPointSize() != null) size = Math.max(currentaes.getPointSize(), 5);else size = 25;\n                colorDiv.style.height = size;\n                colorDiv.style.width = size;\n                colorDiv.className = '_gisplaycircle';\n            }\n\n            color.appendChild(colorDiv);\n            row.appendChild(color);\n            row.appendChild(value);\n\n            row.onclick = function () {\n                if (mapobj.gisplayOptions.legendToggle) {\n                    var toFade = !currentaes.enableDisable();\n                    if (toFade) this.className += \" _gisplayfade\";else this.className = this.className.replace(/(?:^|\\s)_gisplayfade(?!\\S)/g, '');\n                }\n                if (mapobj.gisplayOptions.legendOnClickFunction != null && mapobj.gisplayOptions.legendOnClickFunction != undefined) mapobj.gisplayOptions.legendOnClickFunction(currentaes);\n                mapobj.draw();\n            };\n            this.table.appendChild(row);\n        }\n\n        /**\r\n         * Inserts in the Legend one gradient according to the Aesthetic object.\r\n         * Use in Change Maps. \r\n         * @param {Map} mapobj - The map where to insert the gradient row.\r\n         * @param {number} left - Left value of the Legend (minimum change).\r\n         * @param {number} middle - Value at the center of the change(aka break point).\r\n         * @param {number} right - Right value of the legend (maximum value).\r\n         * @see Diogo's thesis page 69 Figure 5.1d\r\n         * @memberOf Legend\r\n         */\n\n    }, {\n        key: 'insertGradient',\n        value: function insertGradient(mapobj, left, middle, right) {\n            var row = document.createElement('tr');\n            var value = document.createElement('td');\n            var valueDiv = document.createElement('div');\n            value.colSpan = 2;\n            value.style.textAlign = 'center';\n            var numberofAesthetics = 5;\n            if (mapobj.aesthetics.length > 5) numberofAesthetics = mapobj.aesthetics.length;\n\n            var strcolor = '';\n            for (var i = 0; i < numberofAesthetics; i++) {\n                var _mapobj$fcolor$rgb = mapobj.fcolor(i / numberofAesthetics).rgb(),\n                    _mapobj$fcolor$rgb2 = _slicedToArray(_mapobj$fcolor$rgb, 3),\n                    r = _mapobj$fcolor$rgb2[0],\n                    g = _mapobj$fcolor$rgb2[1],\n                    b = _mapobj$fcolor$rgb2[2];\n\n                var _ref = [Math.round(r), Math.round(g), Math.round(b)],\n                    roundR = _ref[0],\n                    roundG = _ref[1],\n                    roundB = _ref[2];\n\n                strcolor += ',rgba(' + roundR + ',' + roundG + ',' + roundB + ',' + mapobj.gisplayOptions.alpha + ')';\n            }\n            valueDiv.style.background = '-webkit-linear-gradient(left' + strcolor + ')';\n\n            valueDiv.style.height = 25;\n            valueDiv.style.width = 130;\n\n            var row2 = document.createElement('tr');\n            var value2 = document.createElement('td');\n            var divleft = document.createElement('div');\n\n            value2.colSpan = 2;\n            divleft.style.textAlign = 'left';\n            divleft.style.width = '33%';\n            divleft.style.display = \"inline-block\";\n            var lefttext = document.createTextNode(left);\n            var divmid = document.createElement('div');\n            divmid.style.textAlign = 'center';\n            divmid.style.width = '33%';\n            divmid.style.display = \"inline-block\";\n            var text = document.createTextNode(middle);\n            var divright = document.createElement('div');\n            divright.style.textAlign = 'right';\n            divright.style.width = '33%';\n            divright.style.display = \"inline-block\";\n            var righttext = document.createTextNode(right);\n\n            divleft.appendChild(lefttext);\n            divmid.appendChild(text);\n            divright.appendChild(righttext);\n            value2.appendChild(divleft);\n            value2.appendChild(divmid);\n            value2.appendChild(divright);\n            value.appendChild(valueDiv);\n            row2.appendChild(value2);\n            row.appendChild(value);\n            this.table.appendChild(row);\n            this.table.appendChild(row2);\n        }\n\n        /**\r\n         * Inserts one Proportional symbols legend element.\r\n         * Used by PSymbols Maps.\r\n         * @param {Aesthetic} currentaes  - The Aesthetic object.\r\n         * @param {Map} mapobj - The map where to insert the proportion symbols element.\r\n         * @param {number} numLegendItems - Number of items to be created.\r\n         * @see Diogo's thesis Page 69 5.1a\r\n         * @memberOf Legend\r\n         */\n\n    }, {\n        key: 'insertProportionalSymbols',\n        value: function insertProportionalSymbols(currentaes, mapobj, numLegendItems) {\n            if (this.lastdiv === undefined) {\n                //First insertion\n                var row = document.createElement('tr');\n                var value = document.createElement('td');\n                value.colSpan = 2;\n                value.style.textAlign = 'center';\n                this.firstInsertion = true;\n            } else this.firstInsertion = false;\n\n            var strokecolor = void 0;\n\n            var _currentaes$getStroke3 = currentaes.getStrokeColor(),\n                _currentaes$getStroke4 = _slicedToArray(_currentaes$getStroke3, 4),\n                sr = _currentaes$getStroke4[0],\n                sg = _currentaes$getStroke4[1],\n                sb = _currentaes$getStroke4[2],\n                sa = _currentaes$getStroke4[3]; //console.log(\"PropSymbols Insert >>>\", sr, sg, sb, sa);\n\n\n            var _currentaes$getFillCo3 = currentaes.getFillColor(),\n                _currentaes$getFillCo4 = _slicedToArray(_currentaes$getFillCo3, 4),\n                r = _currentaes$getFillCo4[0],\n                g = _currentaes$getFillCo4[1],\n                b = _currentaes$getFillCo4[2],\n                a = _currentaes$getFillCo4[3]; //console.log(\"PropSymbols Insert >>>\", r, g, b, a);\n\n\n            var rgba = 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')'; // const rgbc = `rgba(${currentaes.fillColor[0]},${currentaes.fillColor[1]},${currentaes.fillColor[2]},${1})`;\n\n            if (currentaes.getStrokeColor() != null && currentaes != undefined) //TODO: Remove && curr..\n                strokecolor = 'rgba(' + sr + ',' + sg + ',' + sb + ',' + sa + ')';else strokecolor = 'rgba(' + 0 + ',' + 0 + ',' + 0 + ',' + 1 + ')';\n\n            for (var i = numLegendItems - 1; i >= 0; i--) {\n                var current = document.createElement('div');\n                var propvalue = void 0;\n                if (!this.firstInsertion && i === numLegendItems - 1 || numLegendItems === 1) propvalue = currentaes.range[1];else propvalue = mapobj.min + i / (numLegendItems - 1) * (mapobj.max - mapobj.min);\n\n                var text = document.createTextNode(Math.round(propvalue)); //TODO: this.round(propValue) ?\n                current.appendChild(text);\n                var colorDiv = document.createElement('div');\n                colorDiv.style.position = 'relative';\n                colorDiv.style.backgroundColor = rgba;\n                colorDiv.className = '_gisplayproportionalcircle';\n                colorDiv.style.borderColor = strokecolor;\n                var temppointsize = (mapobj.gisplayOptions.maxPointSize - mapobj.gisplayOptions.minPointSize) / (mapobj.max - mapobj.min) * (propvalue - mapobj.min);\n                var size = Math.max(temppointsize, 7.5);\n                colorDiv.style.height = size;\n                colorDiv.style.width = size;\n                colorDiv.style.inherit = false;\n\n                colorDiv.onclick = function (e) {\n                    if (mapobj.gisplayOptions.legendToggle) {\n                        var toFade = !currentaes.enableDisable();\n                        if (toFade) this.className += \" _gisplayfade\";else this.className = this.className.replace(/(?:^|\\s)_gisplayfade(?!\\S)/g, '');\n                    }\n                    if (mapobj.gisplayOptions.legendOnClickFunction != null && mapobj.gisplayOptions.legendOnClickFunction != undefined) mapobj.gisplayOptions.legendOnClickFunction(currentaes);\n                    mapobj.draw();\n\n                    /*if (!e)\r\n                        var e = window.event; //TODO: Remove??*/\n                    e.cancelBubble = true;\n                    if (e.stopPropagation) e.stopPropagation();\n                };\n\n                current.appendChild(colorDiv);\n                if (this.lastdiv != undefined) {\n                    this.lastdiv.appendChild(current);\n                    this.lastdiv = colorDiv;\n                } else {\n                    //1st insertion\n                    value.appendChild(current);\n                    this.lastdiv = colorDiv;\n                }\n            }\n\n            if (this.firstInsertion) {\n                //1st insertion\n                row.appendChild(value);\n                this.table.appendChild(row);\n            }\n        }\n\n        /**\r\n         * Appends the legend div element to the map container. Used by all Maps.\r\n         * @param {BGMapWrapper} bgMap - The background map where the legend will be appended to. \r\n         */\n\n    }, {\n        key: 'insertLegend',\n        value: function insertLegend(bgMap) {\n            this.legendDiv.appendChild(this.table);\n            bgMap.getContainer().appendChild(this.legendDiv);\n        }\n    }]);\n\n    return Legend;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 1 */
/* unknown exports provided */
/* all exports used */
/*!*********************************!*\
  !*** ./src/Gisplay/Maps/Map.js ***!
  \*********************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Map = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _BGMapWrapper = __webpack_require__(/*! ./BGMapWrapper */ 6);\n\nvar _Aesthetic = __webpack_require__(/*! ./Aesthetic */ 2);\n\nvar _GisplayOptions = __webpack_require__(/*! ../GisplayOptions */ 5);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * This class contains the Map class which represents the current map.\r\n * Each map has a group of functions available. There is only one map yet(maybe there will be two if we want to compare two).\r\n * @see Diogo's thesis 57-60 + 64/65\r\n */\nvar Map = exports.Map = function () {\n\n    /**\r\n     * Map constructor. All Map subclasses should call this first with super(...).\r\n     * @param {BGMapWrapper|Object} bgmap - Background map.\r\n     * @param {JSON} geometry - Geometry read from the file.\r\n     * @param {Object} userOptions - The user defined options. \r\n     * @todo With the type of the map we can do an if statement inside constructor to use or not some of the variables.\r\n     */\n    function Map(bgmap, geometry, userOptions) {\n        _classCallCheck(this, Map);\n\n        //console.log(\"Map constructor called -> super()\");\n        /**\r\n          * This object holds for each point it's long, lat and associated properties. \r\n          * This points will be used by k-d Tree. And k-d Tree is used to find the closest point to where the user clicked.\r\n          * @type {Array<{lon: number, lat: number, properties: JSON}>}\r\n          */\n        this.treepoints = [];\n\n        // ####################### DOT MAP ONLY\n        /**\r\n          * Holds the points for each Aesthethic object.\r\n          * @type {Array<Array<number>>}\r\n          */\n        this.tempAestheticPoints = new Array();\n\n        // ####################### ALL MAPS\n        /**\r\n         * Aesthetic objects that were saved.\r\n         * @type {Array<Aesthetic>}\r\n         */\n        this.aesthetics = new Array();\n        /**\r\n         * JSON object with the geometry that was read from the file.\r\n         * @type {JSON}\r\n         */\n        this.geometry = geometry;\n        /**\r\n         * This map unique identifier.\r\n         * @type {number}\r\n         */\n        this.id = window.mapcount++;\n\n        /**\r\n         * KdTree object to hold that will be used to calculate the closest point to the coordinates where the user made a click.\r\n         * @type {kdTree}\r\n         * @see Diogo's thesis Page 61.\r\n         */\n        this.kdtree = undefined;\n        /**\r\n         * RBush(Rtree implementation) that is used to calculate the polygon closest to the coordinates where the user made a click.\r\n         * @type {PolygonLookup}\r\n         * @see Diogo's thesis page 61.\r\n         */\n        this.rtree = undefined;\n        /**\r\n         * Polygons do/do not exist. This is used to know if it to create a rtree or not on buildTrees method.\r\n         * @type {boolean}\r\n         */\n        this.hasPolygons = false;\n    }\n\n    /**\r\n     * M1) Loads user and default options. For each case if it isn't provided by the user, then it uses\r\n     * the default option. 1st method to be called.\r\n     * @param {Object} userOptions - Options given by the user. \r\n     * @param {Object} bgmap  - The background map provider.\r\n     */\n\n\n    _createClass(Map, [{\n        key: 'loadOptions',\n        value: function loadOptions(userOptions, bgmap) {\n            /**\r\n             * All the options available in the Gisplay API.\r\n             * @type {GisplayOptions}\r\n             */\n            this.gisplayOptions = new _GisplayOptions.GisplayOptions(userOptions);\n\n            /**\r\n             * The background map to be used. This map will  be drawn over the background map(bGMap).\r\n             * @type {BGMapWrapper}\r\n             */\n            this.bGMap = this.gisplayOptions.useCustomMapService ? bgmap : new _BGMapWrapper.BGMapWrapper(bgmap);\n            if (this.gisplayOptions.showLoader) this.showLoader();\n        }\n\n        /**\r\n         * M2) Calls the Background Map Wrapper to create the loader to be used later when the user feeds data to the API.\r\n         * @deprecated Not used anymore\r\n         */\n\n    }, {\n        key: 'showLoader',\n        value: function showLoader() {\n            this.bGMap.showLoader();\n        }\n\n        /**\r\n         * M3) Initializes the API by: creating canvas, the WebGL program and setting up all needed events.\r\n         * @return {void}\r\n         */\n\n    }, {\n        key: 'initialize',\n        value: function initialize() {\n            var _this = this;\n\n            /**\r\n             * This is the maixmum value found on the dataset. The final value for the break. E.g. [2, 37[ 37 is the max. \r\n             * Used for PSymbol Map and Change Map because on those maps it's important to take in consideration this values to define the Feature color.\r\n             * @see Diogo's thesis page 63 5.1.3 \r\n             * @type {number}\r\n             */\n            this.max = null;\n            /**\r\n             * This is the minimum value found on the dataset. The initial value for the break. E.g. [2, 37[ 2 is the min.\r\n             * Used for PSymbol Map and Change Map because on those maps it's important to take in consideration this values to define the Feature color.\r\n             * @see Diogo's thesis page 63 5.1.3\r\n             * @type {number}\r\n             */\n            this.min = null;\n            this.createCanvas();\n            this.program();\n            this.bGMap.onEvent('move', function () {\n                _this.draw();\n            });\n            this.setupFunctionOnclick(this.id);\n        }\n\n        /**\r\n         * M4) Creates a canvas element and WebGL associated information.\r\n         */\n\n    }, {\n        key: 'createCanvas',\n        value: function createCanvas() {\n            var canvas = this.bGMap.createCanvas(this.id);\n\n            /**\r\n             * @type {Object} _webgl - WebGL object.  Init webgl properties\r\n             * @property  {WebGLRenderingContext} _webgl.gl - The WebGLRenderingContext to be used.\r\n             * @property  {WebGLProgram} _webgl.program -  The WebGLProgram to be used.\r\n             * @property  {Float32Array} _webgl.projection - The projection \r\n             * @see Diogo's thesis page 64+\r\n             */\n            this._webgl = {\n                gl: null,\n                program: null,\n                projection: null\n            };\n\n            this._webgl.gl = canvas.getContext(\"webgl\");\n            this._webgl.projection = new Float32Array(16);\n            this._webgl.projection.set([2 / canvas.width, 0, 0, 0, 0, -2 / canvas.height, 0, 0, 0, 0, 0, 0, -1, 1, 0, 1]);\n\n            this._webgl.gl.viewport(0, 0, this.bGMap.getContainer().offsetWidth, this.bGMap.getContainer().offsetHeight);\n            this._webgl.gl.disable(this._webgl.gl.DEPTH_TEST);\n        }\n\n        /**\r\n         * M5) Initializes: \r\n         * 1)WebGLProgram, 2) Generates shadders, 3) Attaches shaders to the program, 4) links program, 5) uses program.\r\n         */\n\n    }, {\n        key: 'program',\n        value: function program() {\n            this._webgl.program = this._webgl.gl.createProgram();\n\n            var source_code = this.generateShadersSourceCode();\n            var vertex_shader = this.createAndCompileShader(this._webgl.gl.VERTEX_SHADER, source_code.vertexCode, this._webgl);\n            var fragment_shader = this.createAndCompileShader(this._webgl.gl.FRAGMENT_SHADER, source_code.fragmentCode, this._webgl);\n\n            this._webgl.gl.attachShader(this._webgl.program, vertex_shader);\n            this._webgl.gl.attachShader(this._webgl.program, fragment_shader);\n\n            this._webgl.gl.linkProgram(this._webgl.program);\n            this._webgl.gl.useProgram(this._webgl.program);\n        }\n\n        /**\r\n         * M6) Creates shaders(Vertex + Fragment) source code.\r\n         * @return {{vertexCode: string, fragmentCode: string}} - The code for the vertex and fragment shaders.\r\n         */\n\n    }, {\n        key: 'generateShadersSourceCode',\n        value: function generateShadersSourceCode() {\n            //Added HERE by Rui Refactor to use ES6 `` instead of +=\n            //general\n            var vertexSourceCode = '\\n         \\tuniform mat4 projection;\\n            attribute vec4 vertexCoord; \\n         \\tattribute float aPointSize; \\n         \\tattribute float a_opacity; \\n         \\tvarying float v_opacity; \\n         \\tvoid main() {\\n         \\t\\tgl_Position = (projection * vertexCoord); \\n         \\t\\tgl_PointSize = aPointSize; \\n                v_opacity = a_opacity; \\n            }\\n        ';\n\n            var fragmentSourceCode = //TODO: Remove unnecessary brackets {}\n            ' \\n            precision mediump float;\\n         \\tuniform vec4 u_color;\\n         \\tvarying float v_opacity; \\n           \\tuniform float isPoint;\\n            void main() {\\n         \\t\\tfloat border = 0.5;\\n         \\t\\tfloat radius = 0.5;\\n         \\t\\tfloat centerDist = length(gl_PointCoord - 0.5);\\n         \\t\\tfloat alpha;\\n         \\t\\tif (u_color[3] == -1.0) {   \\n         \\t\\t\\talpha =  v_opacity * step(centerDist, radius);\\n         \\t\\t}\\n         \\t\\telse {\\n         \\t\\t\\talpha =  u_color[3] * step(centerDist, radius);\\n         \\t\\t}\\n         \\t\\tif(isPoint == 1.0 ) {\\n         \\t\\t    if (alpha < 0.1) discard;\\n         \\t\\t\\t    gl_FragColor = vec4(u_color[0], u_color[1], u_color[2], alpha);\\n                }\\n           \\t\\telse\\n         \\t\\t\\tgl_FragColor = vec4(u_color[0], u_color[1], u_color[2], u_color[3]);\\n         \\t}\\n        ';\n            return { vertexCode: vertexSourceCode, fragmentCode: fragmentSourceCode };\n        }\n\n        /**\r\n         * M7?) Creates and compiles a shader.\r\n         * @param {string} type - Type of shader. Options are: VERTEX_SHADER or FRAGMENT_SHADER;\r\n         * @param {string} source_code - The shader source code.\r\n         * @param {Map#_webgl} _webgl - Webgl object that this class contains.\r\n         * @returns {WebGLShader} - The shader(vertex of fragment).\r\n         * @memberOf Map\r\n         */\n\n    }, {\n        key: 'createAndCompileShader',\n        value: function createAndCompileShader(type, source_code, _webgl) {\n            //Added HERE by Rui\n            var shader = _webgl.gl.createShader(type);\n            _webgl.gl.shaderSource(shader, source_code);\n            _webgl.gl.compileShader(shader);\n            return shader;\n        }\n\n        /**\r\n         * M7) Sets up a function to be fired when we click on this Map.\r\n         * Assigns the click event on the map to the function specified by the user options. \r\n         * If the attribute interative from the user options is != from false then fires the default function(alert).  \r\n         * Will use rtree to find the closest polygon to the where the clicked event happened.\r\n         * Will use kdtree to find the closest point to where the click event happened.\r\n         * @todo This method is doing uneccessary job if the user set interative to false and mapOnClickFunction is undefined.\r\n         * @param {number} mappos - This map id. \r\n         * @see http://stackoverflow.com/a/34349737\r\n         * @return {void}\r\n         */\n\n    }, {\n        key: 'setupFunctionOnclick',\n        value: function setupFunctionOnclick(mappos) {\n            var _this2 = this;\n\n            /*if(!this.gisplayOptions.interactive && this.gisplayOptions.mapOnClickFunction === undefined)\r\n                return;*/\n            this.bGMap.onEvent('click', function (e) {\n                var lat = e.latlng.lat;\n                var lon = e.latlng.lng;\n\n                /**\r\n                 * When dealing with polygons rtree will be used.\r\n                 * @see Diogo's thesis Page 62\r\n                 */\n                if (_this2.rtree !== undefined) {\n                    var rtreeSearchResult = _this2.rtree.search(lon, lat);\n                    if (rtreeSearchResult === undefined) return;else {\n                        var res = \"\";\n                        var showPrtOnClick = _this2.gisplayOptions.showPropertiesOnClick;\n                        if (showPrtOnClick !== null) {\n                            for (var i = 0; i < showPrtOnClick.length; i += 2) {\n                                if (i === 0) res += showPrtOnClick[i + 1] + ': ' + rtreeSearchResult.properties[showPrtOnClick[i]];else res += '\\n' + showPrtOnClick[i + 1] + ': ' + rtreeSearchResult.properties[showPrtOnClick[i]];\n                            }\n                        } else {\n                            var keys = Object.keys(rtreeSearchResult.properties);\n                            var _iteratorNormalCompletion = true;\n                            var _didIteratorError = false;\n                            var _iteratorError = undefined;\n\n                            try {\n                                for (var _iterator = keys.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                                    var _step$value = _slicedToArray(_step.value, 2),\n                                        _i = _step$value[0],\n                                        key = _step$value[1];\n\n                                    if (key !== \"_gisplayid\") _i == 0 ? res += key + ': ' + rtreeSearchResult.properties[key] : res += '\\n' + key + ': ' + rtreeSearchResult.properties[key];\n                                }\n                            } catch (err) {\n                                _didIteratorError = true;\n                                _iteratorError = err;\n                            } finally {\n                                try {\n                                    if (!_iteratorNormalCompletion && _iterator.return) {\n                                        _iterator.return();\n                                    }\n                                } finally {\n                                    if (_didIteratorError) {\n                                        throw _iteratorError;\n                                    }\n                                }\n                            }\n                        }\n\n                        if (_this2.gisplayOptions.interactive) alert(res); //todo\n                        if (_this2.gisplayOptions.mapOnClickFunction !== undefined) _this2.gisplayOptions.mapOnClickFunction(rtreeSearchResult);\n                    }\n                }\n\n                /**\r\n                 * When dealing with points kdtree will be used.\r\n                 * @see Diogo's thesis page 62\r\n                 */\n                if (_this2.kdtree !== undefined) {\n\n                    var nearest = _this2.kdtree.nearest({ lat: lat, lon: lon }, 1, 128 / 2 ** (_this2.bGMap.getZoom() * 2));\n                    if (nearest.length <= 0) return;else {\n                        var kdTreeSearchResult = nearest[0][0];\n                        var _res = \"\";\n                        var _showPrtOnClick = _this2.gisplayOptions.showPropertiesOnClick;\n                        if (_showPrtOnClick !== null) {\n                            //TODO: Remove if dentro do for e passar a começar no i=1 e passar o if para antes do for\n                            for (var _i2 = 0; _i2 < _showPrtOnClick.length; _i2 += 2) {\n                                if (_i2 === 0) _res += _showPrtOnClick[_i2 + 1] + ': ' + kdTreeSearchResult.properties[_showPrtOnClick[_i2]];else _res += '\\n' + _showPrtOnClick[_i2 + 1] + ': ' + kdTreeSearchResult.properties[_showPrtOnClick[_i2]];\n                            }\n                        } else {\n                            var _keys = Object.keys(kdTreeSearchResult.properties);\n                            var _iteratorNormalCompletion2 = true;\n                            var _didIteratorError2 = false;\n                            var _iteratorError2 = undefined;\n\n                            try {\n                                for (var _iterator2 = _keys.entries()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                                    var _step2$value = _slicedToArray(_step2.value, 2),\n                                        _i3 = _step2$value[0],\n                                        key = _step2$value[1];\n\n                                    if (key !== \"_gisplayid\") _i3 == 0 ? _res += key + ': ' + kdTreeSearchResult.properties[key] : _res += '\\n' + key + ': ' + kdTreeSearchResult.properties[key];\n                                }\n                            } catch (err) {\n                                _didIteratorError2 = true;\n                                _iteratorError2 = err;\n                            } finally {\n                                try {\n                                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                                        _iterator2.return();\n                                    }\n                                } finally {\n                                    if (_didIteratorError2) {\n                                        throw _iteratorError2;\n                                    }\n                                }\n                            }\n                        }\n\n                        if (_this2.gisplayOptions.interactive) alert(_res);\n                        if (_this2.gisplayOptions.mapOnClickFunction !== undefined) _this2.gisplayOptions.mapOnClickFunction(kdTreeSearchResult);\n                    }\n                }\n            });\n        }\n\n        /** ########################   METHOD from Gisplay.js    ######################## */\n        /**\r\n         * M8) Method that executes all the process associated with the creation of the thematic map.\r\n         * @memberOf Map\r\n         */\n\n    }, {\n        key: 'makeMap',\n        value: function makeMap() {\n            var _this3 = this;\n\n            var opts = this.gisplayOptions;\n            setTimeout(function (console) {\n                if (opts.colorScheme === undefined) opts.colorScheme = _this3.defaults(opts.colorSchemeId).colorScheme;\n                if (opts.classBreaks === undefined) {\n                    if (opts.numberOfClasses === undefined) opts.numberOfClasses = _this3.defaults(opts.colorSchemeId).numberOfClasses;\n                    _this3.preProcessData(_this3.geometry, opts.numberOfClasses, opts.classBreaksMethod, opts.colorScheme);\n                }\n\n                _this3.loadGeoJSON(_this3.geometry);\n                _this3.draw();\n\n                if (opts.showLegend) _this3.buildLegend();\n                if (opts.showLoader) //@TODO: Change this if to be the 1st thing done inside the setTimeout\n                    _this3.showLoader();\n            }, 1);\n        }\n\n        /**\r\n         * M9) Creates Aesthetic objects. If there's the need to calculate the class intervals,\r\n         * the method calcClassBreaks is called \r\n         * @param {JSON} geojson - GeoJSON object.\r\n         * @param {number} numberOfClasses - Number of classes that the Legend will contain.\r\n         * @param {string} classBreaksMethod - Algorithm to be used to calculate class breaks. Only used it class breaks are not given by the user.\r\n         * @param {string[]} colorscheme - Color scheme to be used by this map.\r\n         * \r\n         * @memberOf Map\r\n         */\n\n    }, {\n        key: 'preProcessData',\n        value: function preProcessData(geojson, numberOfClasses, classBreaksMethod, colorscheme) {\n            /**\r\n             * @type {Array<Aesthetic>}\r\n             */\n            var aesarray = []; //Array of aesthetic objects loaded from the file\n            var numberValues = []; //The attr is a number\n            var stringValues = []; //The attr is a string\n            var classBreaks = void 0; //Class Breaks given by the user or calculated by the API\n            var fcolor = void 0; //Colors to be used\n            var opts = this.gisplayOptions; //Options given by the user and defaults\n\n            var geoJsonFeaturesLength = geojson.features.length;\n            for (var i = 0; i < geoJsonFeaturesLength && i < opts.maxFeatures; i++) {\n                //@TODO?: Two fors one if attr is a string another if it a number\n                var attrValue = geojson.features[i].properties[opts.attr];\n                if (attrValue !== null && typeof attrValue === 'number') {\n                    //If \"f3\" exists and its a number\n                    numberValues.push(attrValue);\n                    this.max = Math.max(this.max, attrValue);\n                    this.min = Math.min(this.min, attrValue);\n                } else if (!stringValues.includes(attrValue)) //If its a string\n                    stringValues.push(geojson.features[i].properties[opts.attr]);\n            }\n\n            if (numberValues.length > 0) {\n                //Quantitative\n                if (opts.classBreaks === undefined) {\n                    //Not given by the user then calculate them\n                    if (numberOfClasses > 1) classBreaks = this.calcClassBreaks(numberValues, classBreaksMethod, numberOfClasses);else classBreaks = [this.min, this.max]; //Change Map\n                } else //Given by the user\n                    classBreaks = opts.classBreaks;\n\n                if (classBreaks.length > 2) {\n                    fcolor = chroma.scale(colorscheme).colors(classBreaks.length - 1);\n                    for (var _i4 = 0; _i4 < classBreaks.length - 1; _i4++) {\n                        var _chroma$rgb = chroma(fcolor[_i4]).rgb(),\n                            _chroma$rgb2 = _slicedToArray(_chroma$rgb, 3),\n                            r = _chroma$rgb2[0],\n                            g = _chroma$rgb2[1],\n                            b = _chroma$rgb2[2]; // let color = chroma(fcolor[i]).rgb();\n\n\n                        var aes = void 0;\n                        if (_i4 !== classBreaks.length - 2) aes = new _Aesthetic.Aesthetic(_i4, opts.attr, [Math.round(r), Math.round(g), Math.round(b), opts.alpha], [0, 0, 0, 1], null, [classBreaks[_i4], classBreaks[_i4 + 1]]);else {\n                            aes = new _Aesthetic.Aesthetic(_i4, opts.attr, [Math.round(r), Math.round(g), Math.round(b), opts.alpha], [0, 0, 0, 1], null, [classBreaks[_i4], classBreaks[_i4 + 1]]);\n                            aes.outer = true;\n                        }\n                        aesarray.push(aes);\n                    }\n                } else {\n                    var _chroma$rgb3 = chroma(colorscheme[0]).rgb(),\n                        _chroma$rgb4 = _slicedToArray(_chroma$rgb3, 3),\n                        r = _chroma$rgb4[0],\n                        g = _chroma$rgb4[1],\n                        b = _chroma$rgb4[2]; // let color = chroma(colorscheme[0]).rgb();\n\n\n                    var _aes = new _Aesthetic.Aesthetic(0, opts.attr, [Math.round(r), Math.round(g), Math.round(b), opts.alpha], [0, 0, 0, 1], null, [classBreaks[0], classBreaks[1]]);\n                    _aes.outer = true;\n                    aesarray.push(_aes);\n                }\n            } else {\n                //Qualitative\n                if (stringValues.length > 0) {\n                    classBreaks = stringValues;\n                    if (typeof colorscheme === 'string') //string\n                        fcolor = chroma.scale(colorscheme).colors(classBreaks.length);else //array\n                        fcolor = chroma.scale(colorscheme).colors(classBreaks.length);\n\n                    for (var _i5 = 0; _i5 < classBreaks.length; _i5++) {\n                        var _chroma$rgb5 = chroma(fcolor[_i5]).rgb(),\n                            _chroma$rgb6 = _slicedToArray(_chroma$rgb5, 3),\n                            _r = _chroma$rgb6[0],\n                            _g = _chroma$rgb6[1],\n                            _b = _chroma$rgb6[2]; // let color = chroma(fcolor[i]).rgb();\n\n\n                        var _aes2 = new _Aesthetic.Aesthetic(_i5, opts.attr, [Math.round(_r), Math.round(_g), Math.round(_b), 1], [0, 0, 0, 1], null, [stringValues[_i5]]);\n                        aesarray.push(_aes2);\n                    }\n                }\n            }\n\n            /**\r\n             * All the Aesthetics that were read from the GeoJSON file.\r\n             * @type {Array<Aesthetic>}\r\n             */\n            this.aesthetics = aesarray;\n        }\n\n        /**\r\n         * M10) Calculates the class breaks using the algorithm given(k-means, quantile or equidistant). \r\n         * There will be as many class breaks as number of classes(numberOfClasses) given as input. \r\n         * @param {number[]} numberValues - The data values that will be used to be compute the breaks. \r\n         * @param {string} classBreakMethod - The algorithm to use to calculate the class breaks.\r\n         * @param {number} numberOfClasses - Number of classes the result expects.\r\n         * @returns {number[]} - The class breaks resulting from the use of the given algorithm and the number of classes.\r\n         * @see http://gka.github.io/chroma.js/#chroma-limits\r\n         * @memberOf Map\r\n         */\n\n    }, {\n        key: 'calcClassBreaks',\n        value: function calcClassBreaks(numberValues, classBreakMethod, numberOfClasses) {\n            var classBreaks = void 0;\n            switch (classBreakMethod) {\n                case 'equidistant':\n                    classBreaks = chroma.limits(numberValues, 'e', numberOfClasses);\n                    break;\n\n                case 'quantile':\n                    classBreaks = chroma.limits(numberValues, 'q', numberOfClasses);\n                    break;\n\n                case 'k-means':\n                    classBreaks = chroma.limits(numberValues, 'k', numberOfClasses);\n                    break;\n\n                default:\n                    classBreaks = chroma.limits(numberValues, 'q', numberOfClasses);\n                    break;\n            }\n            return classBreaks;\n        }\n\n        /**\r\n         * M11) Loads GeoJSON object that came from the file uploaded by the user. \r\n         * Extracts the Features present in the geometry object and inserts them in Aesthetic object(s)\r\n         * This method will create and insert features to Aesthetic objects and build trees of relationships between points or polygons.\r\n         * @param {JSON} geojson - GeoJSON read from the file.\r\n         * @see https://www.dashingd3js.com/lessons/geojson\r\n         * @memberOf Map\r\n         */\n\n    }, {\n        key: 'loadGeoJSON',\n        value: function loadGeoJSON(geojson) {\n            for (var i = 0; i < geojson.features.length && (this.gisplayOptions.maxFeatures === undefined || i < this.gisplayOptions.maxFeatures); i++) {\n                geojson.features[i].properties['_gisplayid'] = i;\n                var geometry = geojson.features[i].geometry;\n                var properties = geojson.features[i].properties;\n                this.createAndInsertFeature(i, geometry, properties);\n            }\n            this.buildTrees(geojson); //@TODO: Only call this method if it's a low end device aka options.memorySaver is on\n        }\n\n        /**\r\n         * M12) Creates a Feature and then calls a method to insert said Feature in one or more Aesthetic objects.\r\n         * @param {number} featureId - Id of the Feature.\r\n         * @param {JSON} geometry - GeoJSON Geometry Object. \r\n         * @param {JSON} properties - GeoJSON properties Object.\r\n         * @see http://geojson.org/geojson-spec.html#geometry-objects\r\n         * @memberOf Map\r\n         */\n\n    }, {\n        key: 'createAndInsertFeature',\n        value: function createAndInsertFeature(featureId, geometry, properties) {\n            var gl = this._webgl.gl;\n            /**\r\n             * @type {GisplayOptions}\r\n             */\n            var opts = this.gisplayOptions;\n            if (opts.minuend !== undefined && opts.subtrahend !== undefined && typeof properties[opts.minuend] === 'number' && typeof properties[opts.subtrahend] === 'number' && properties[opts.minuend] !== undefined && properties[opts.subtrahend] !== undefined) {\n                properties[opts.attr] = properties[opts.minuend] - properties[opts.subtrahend]; //Used for Change map\n            }\n\n            //let isPoint = geometry.type == \"Point\";\n            if (geometry.type === \"Polygon\" || geometry.type === \"MultiPolygon\") {\n                this.hasPolygons = true;\n                var polygons = this.processPolygon({ geometry: geometry, properties: properties });\n\n                var currentTriangles = []; //Polygon Triangles vertices\n                var bufferT = []; //WebGL Buffers with  triangles\n                var currentBorders = []; //Polygon Borders vertices\n                var bufferB = []; //Buffer borders\n\n                for (var i = 0; i < polygons.length; i++) {\n                    //For each Polygon\n                    var trianglesPolygon = polygons[i].triangles;\n                    var border = polygons[i].vertices;\n                    currentTriangles[i] = new Array(); //Add This Polygon triangles\n                    currentBorders[i] = new Array(); //Add this Polygon borders\n\n                    for (var j = 0; j < trianglesPolygon.length; j++) {\n                        //Triangles\n                        var pixel = this.latLongToPixelXY(border[trianglesPolygon[j] * 2], border[trianglesPolygon[j] * 2 + 1]);\n                        currentTriangles[i].push(pixel.x, pixel.y);\n\n                        if (j === trianglesPolygon.length - 1) {\n                            bufferT.push(gl.createBuffer());\n\n                            var vertArray = new Float32Array(currentTriangles[i]);\n                            gl.fsize = vertArray.BYTES_PER_ELEMENT;\n                            gl.bindBuffer(gl.ARRAY_BUFFER, bufferT[i]);\n                            gl.bufferData(gl.ARRAY_BUFFER, vertArray, gl.STATIC_DRAW);\n\n                            bufferT[i].itemSize = 2;\n                            bufferT[i].numItems = vertArray.length / 2;\n                        }\n                    }\n\n                    for (var k = 0; k < border.length; k += 2) {\n                        //Borders\n                        var _pixel = this.latLongToPixelXY(border[k], border[k + 1]);\n                        currentBorders[i].push(_pixel.x, _pixel.y);\n\n                        if (k === border.length - 2) {\n                            bufferB.push(gl.createBuffer());\n\n                            var _vertArray = new Float32Array(currentBorders[i]);\n                            gl.fsize = _vertArray.BYTES_PER_ELEMENT;\n                            gl.bindBuffer(gl.ARRAY_BUFFER, bufferB[i]);\n                            gl.bufferData(gl.ARRAY_BUFFER, _vertArray, gl.STATIC_DRAW);\n\n                            bufferB[i].itemSize = 2;\n                            bufferB[i].numItems = _vertArray.length / 2;\n                        }\n                    }\n                }\n                this.insertFeature(featureId, properties, bufferT, bufferB, []);\n            } else if (geometry.type === \"Point\" && opts.isDynamic) {\n                //dum\n                var currentPoints = new Array(); //currentPoints[0] = new Array();\n                var _pixel2 = this.latLongToPixelXY(geometry.coordinates[0], geometry.coordinates[1]);\n                currentPoints.push(_pixel2.x, _pixel2.y);\n\n                var bufferPoints = []; //Buffer points\n                var _vertArray2 = new Float32Array(currentPoints);\n\n                bufferPoints.push(gl.createBuffer());\n                gl.fsize = _vertArray2.BYTES_PER_ELEMENT;\n                gl.bindBuffer(gl.ARRAY_BUFFER, bufferPoints[0]);\n                gl.bufferData(gl.ARRAY_BUFFER, _vertArray2, gl.STATIC_DRAW);\n\n                bufferPoints[0].itemSize = 2;\n                bufferPoints[0].numItems = _vertArray2.length / 2;\n\n                this.insertFeature(featureId, properties, [], [], bufferPoints);\n                this.treepoints.push({ lon: geometry.coordinates[0], lat: geometry.coordinates[1], properties: properties });\n            } else if (geometry.type === \"Point\" && !opts.isDynamic) {\n                var _pixel3 = this.latLongToPixelXY(geometry.coordinates[0], geometry.coordinates[1]);\n                if (this.tempAestheticPoints.length === 0) for (var _i6 = 0; _i6 < this.aesthetics.length; _i6++) {\n                    this.tempAestheticPoints[_i6] = [];\n                }var aesPositions = this.fitFeature(properties);\n                var _iteratorNormalCompletion3 = true;\n                var _didIteratorError3 = false;\n                var _iteratorError3 = undefined;\n\n                try {\n                    for (var _iterator3 = aesPositions[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                        var aesPos = _step3.value;\n\n                        this.tempAestheticPoints[aesPos].push(_pixel3.x, _pixel3.y);\n                    }\n                } catch (err) {\n                    _didIteratorError3 = true;\n                    _iteratorError3 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                            _iterator3.return();\n                        }\n                    } finally {\n                        if (_didIteratorError3) {\n                            throw _iteratorError3;\n                        }\n                    }\n                }\n\n                this.treepoints.push({ lon: geometry.coordinates[0], lat: geometry.coordinates[1], properties: properties });\n            }\n        }\n\n        /**\r\n         * M13) Deals with polygon triangulation.\r\n         * @param {{geometry: JSON, properties: JSON}} polygon - The geometry and properties of the polygon.\r\n         * @returns {{triangles: Array<number>, vertices: Array<number>}} - The triangles and vertices calculated by earcut triangulation. The vertices are the outside of the polygon, the triangles are the inside.\r\n         * @see http://www.macwright.org/2015/03/23/geojson-second-bite.html#polygons\r\n         * @memberOf Map\r\n         */\n\n    }, {\n        key: 'processPolygon',\n        value: function processPolygon(polygon) {\n            var polyarray = [];\n            if (polygon.geometry.type === \"Polygon\") {\n                //@TODO: [Demos never use this if statement.]\n                var outsidepolygon = polygon.geometry.coordinates[0];\n                var tempVerts = new Array();\n                for (var out = 0; out < outsidepolygon.length - 1; out++) {\n                    tempVerts.push(outsidepolygon[out][0], outsidepolygon[out][1]);\n                } //_vertexcount += (outsidepolygon.length + 1) / 2;\n                var triangles_vert = earcut(tempVerts); // _tricount += (triangles_vert.length / 3);\n                polyarray.push({ triangles: triangles_vert, vertices: tempVerts });\n            } else if (polygon.geometry.type === \"MultiPolygon\") {\n                var _tempVerts = new Array(); //polygon.geometry.coordinates[0][0] ->  [lat,long] , [lat,long], [lat,long] .... [lat,long]\n                var _iteratorNormalCompletion4 = true;\n                var _didIteratorError4 = false;\n                var _iteratorError4 = undefined;\n\n                try {\n                    for (var _iterator4 = polygon.geometry.coordinates[0][0][Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                        var coord = _step4.value;\n\n                        _tempVerts.push(coord[0], coord[1]);\n                    }\n                } catch (err) {\n                    _didIteratorError4 = true;\n                    _iteratorError4 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                            _iterator4.return();\n                        }\n                    } finally {\n                        if (_didIteratorError4) {\n                            throw _iteratorError4;\n                        }\n                    }\n                }\n\n                var _triangles_vert = earcut(_tempVerts);\n                /* console.log(triangles_vert);\r\n                 console.log(tempVerts)*/\n                polyarray.push({ triangles: _triangles_vert, vertices: _tempVerts });\n            }\n            return polyarray;\n        }\n\n        /**\r\n         * M14) Converts geographic coordinates(latitude, longitude) to canvas coordinate pixels.\r\n         * @param {number} longitude - The longitude.\r\n         * @param {number} latitude - The latitude.\r\n         * @returns {x: number, y: number} - canvas coordinate system pixels.\r\n         * @see http://gisgeography.com/latitude-longitude-coordinates/\r\n         * @see https://www.w3schools.com/graphics/canvas_coordinates.asp\r\n         * @memberOf Map\r\n         */\n\n    }, {\n        key: 'latLongToPixelXY',\n        value: function latLongToPixelXY(longitude, latitude) {\n            var pi_180 = Math.PI / 180.0;\n            var pi_4 = Math.PI * 4;\n            var sinLatitude = Math.sin(latitude * pi_180);\n            var pixelY = (0.5 - Math.log((1 + sinLatitude) / (1 - sinLatitude)) / pi_4) * 256;\n            var pixelX = (longitude + 180) / 360 * 256;\n\n            var pixel = { x: pixelX, y: pixelY };\n            return pixel;\n        }\n\n        /**\r\n         * M15) Inserts the Feature into one or more Aesthetic objects. If the Feature does not fit in any Aesthetic then does nothing.\r\n         * @param {number} id - The Feature id. \r\n         * @param {JSON} properties - The Feature properties. \r\n         * @param {{itemSize: number, numItems: number}} triangles - Triangles, each in one WebGLBuffer.\r\n         * @param {{itemSize: number, numItems: number}} borders - Borders, each in one WebGLBuffer.\r\n         * @param {{itemSize: number, numItems: number}} points - Points, each in one WebGLBuffer.\r\n         * @return {void}\r\n         * @memberOf Map\r\n         */\n\n    }, {\n        key: 'insertFeature',\n        value: function insertFeature(id, properties, triangles, borders, points) {\n            for (var i = 0; i < this.aesthetics.length; i++) {\n                if (this.aesthetics[i].checkProperty(properties[this.aesthetics[i].getAttr()])) this.aesthetics[i].addFeature(id, properties, triangles, borders, points);\n            }\n        }\n\n        /**\r\n         * M16) Returns an array of Aesthetic ids that tells us the objects where the Feature belongs.\r\n         * @param {JSON} properties - The Feature properties\r\n         * @returns {Array<number>} - The Aesthetic ids where the Feature belongs.\r\n         * @memberOf Map\r\n         */\n\n    }, {\n        key: 'fitFeature',\n        value: function fitFeature(properties) {\n            var res = [];\n            for (var i = 0; i < this.aesthetics.length; i++) {\n                if (this.aesthetics[i].checkProperty(properties[this.aesthetics[i].getAttr()])) res.push(i);\n            }return res;\n        }\n\n        /**\r\n         * M?) Receives the dataset as parameter. This dataset in each row contains geometry and associated properties, then it creates one tree\r\n         * either for points or polygons. This tree can be k-d Treee or RBush(RTree)\r\n         * @param {JSON} geojson \r\n         * @return {void}\r\n         * @see Diogo's thesis page 62\r\n         * @memberOf Map\r\n         */\n\n    }, {\n        key: 'buildTrees',\n        value: function buildTrees(geojson) {\n            var gl = this._webgl.gl;\n            if (this.tempAestheticPoints.length > 0) {\n                for (var i = 0; i < this.tempAestheticPoints.length; i++) {\n                    if (this.tempAestheticPoints[i].length > 0) {\n                        var vertArray = new Float32Array(this.tempAestheticPoints[i]);\n                        var bufferP = [];\n                        bufferP.push(gl.createBuffer());\n\n                        gl.fsize = vertArray.BYTES_PER_ELEMENT;\n                        gl.bindBuffer(gl.ARRAY_BUFFER, bufferP[0]);\n                        gl.bufferData(gl.ARRAY_BUFFER, vertArray, gl.STATIC_DRAW);\n                        bufferP[0].itemSize = 2;\n                        bufferP[0].numItems = vertArray.length / 2;\n                        this.insertGroupedFeature(i, [], [], bufferP);\n                    }\n                }\n            }\n            if (this.treepoints !== null) this.kdtree = new kdTree(this.treepoints, function (a, b) {\n                return (a.lon - b.lon) ** 2 + (a.lat - b.lat) ** 2;\n            }, [\"lon\", \"lat\", \"properties\"]);\n            if (this.hasPolygons) this.rtree = new PolygonLookup(geojson);\n        }\n\n        /**\r\n         * Similar to insertFeature, in this case inserts a group of Features like it was only one.\r\n         * It creates one WebGLBuffer with all the points instead of one WebGLBuffer per point.\r\n         * This method should only be used when we already grouped the Features by Aesthetic class (fitFeature() method).\r\n         * This method exists to provide one alternative less expensive in terms of memory for low end devices.\r\n         * Used only on Dot Map because on those we can easily end up with millions of different Features.\r\n         * @param {number} id - Aesthethics id. \r\n         * @param {{itemSize: number, numItems: number}} triangles - Not used ?\r\n         * @param {{itemSize: number, numItems: number}} borders - Not used ?\r\n         * @param {{itemSize: number, numItems: number}} points - All the points for the Aesthethic object in one WebGLBuffer.\r\n         * @memberOf Map\r\n         */\n\n    }, {\n        key: 'insertGroupedFeature',\n        value: function insertGroupedFeature(id, triangles, borders, points) {\n            this.aesthetics[id].addGroupedFeature(null, triangles, borders, points);\n        }\n\n        /** ########################    LEGEND METHODS    ######################## */\n        /**\r\n         * M17) Creates a Legend element suitable for polygons based on the Aesthethic objects.\r\n         * Should be overriden by subclasses.\r\n         * @return {void}\r\n         * @abstract\r\n         * @memberOf Map\r\n         */\n\n    }, {\n        key: 'buildLegend',\n        value: function buildLegend() {\n            var mapCanvas = document.getElementById('mapCanvas' + this.id);\n            var legendDiv = document.createElement('div');\n            legendDiv.id = 'legendDiv' + this.id;\n            legendDiv.style.position = 'absolute';\n            legendDiv.style.backgroundColor = 'white';\n            legendDiv.style.width = 250;\n            legendDiv.style.bottom = 20;\n            legendDiv.style.right = 0;\n            legendDiv.style.borderColor = 'black';\n            legendDiv.style.border = 'solid';\n\n            var table = document.createElement('table');\n            var thvalue = document.createElement('th');\n            var thcolor = document.createElement('th');\n            table.style.zIndex = \"2000\";\n            thcolor.style.width = 100;\n            table.appendChild(thcolor);\n            table.appendChild(thvalue);\n\n            var _iteratorNormalCompletion5 = true;\n            var _didIteratorError5 = false;\n            var _iteratorError5 = undefined;\n\n            try {\n                for (var _iterator5 = this.aesthetics[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                    var currentaes = _step5.value;\n\n                    var row = document.createElement('tr');\n                    var value = document.createElement('td');\n                    var color = document.createElement('td');\n                    var ptext = document.createElement('p');\n                    var text = void 0;\n                    if (typeof currentaes.range[0] === 'number') text = document.createTextNode('[' + currentaes.range[0] + ', ' + currentaes.range[1] + '[');else text = document.createTextNode(currentaes.range[0]);\n                    ptext.appendChild(text);\n                    value.appendChild(ptext);\n\n                    var colorDiv = document.createElement('div');\n                    colorDiv.style.position = 'relative';\n                    var rgbc = 'rgba(' + currentaes.fillColor[0] + ',' + currentaes.fillColor[1] + ',' + currentaes.fillColor[2] + ',' + currentaes.fillColor[3] + ')';\n                    colorDiv.style['backgroundColor'] = rgbc;\n                    colorDiv.style.height = 25;\n                    colorDiv.style.width = 80;\n                    color.appendChild(colorDiv);\n\n                    row.appendChild(color);\n                    row.appendChild(value);\n                    table.appendChild(row);\n                }\n            } catch (err) {\n                _didIteratorError5 = true;\n                _iteratorError5 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                        _iterator5.return();\n                    }\n                } finally {\n                    if (_didIteratorError5) {\n                        throw _iteratorError5;\n                    }\n                }\n            }\n\n            legendDiv.appendChild(table);\n            this.bGMap.getContainer().appendChild(legendDiv);\n        }\n\n        /** ########################    WEBGL METHODS    ######################## */\n        /**\r\n         * M20) Clear current buffers to preset values.\r\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/clear\r\n         * @memberOf Map\r\n         */\n\n    }, {\n        key: 'clear',\n        value: function clear() {\n            var gl = this._webgl.gl;\n            gl.clear(gl.COLOR_BUFFER_BIT);\n            gl.disable(gl.DEPTH_TEST);\n        }\n\n        /**\r\n         * M21) Receiving an Aesthetics object, draws the triangles contained in it's Features,\r\n         * using the color that the Aesthethics object has.\r\n         * @param {Aesthetic} aes - The Aesthetic object.\r\n         * @returns {void}\r\n         * @see Diogo's thesis Page 58/59\r\n         * @memberOf Map\r\n         */\n\n    }, {\n        key: 'drawTriangles',\n        value: function drawTriangles(aes) {\n            var gl = this._webgl.gl;\n            if (gl === null) return;\n\n            var matrixProjection = new Float32Array(16);\n            var fsize = Float32Array.BYTES_PER_ELEMENT;\n            var currentZoom = this.bGMap.getZoom();\n            var pointSize = Math.max(currentZoom - 5.0, 1.0);\n            var scale = 2 ** currentZoom;\n            var offset = this.latLongToPixelXY(this.bGMap.getLngBound(), this.bGMap.getLatBound());\n            var projectionLocation = gl.getUniformLocation(this._webgl.program, 'projection');\n            var vertexSizeLocation = gl.getAttribLocation(this._webgl.program, 'aPointSize');\n            var isPointLocation = gl.getUniformLocation(this._webgl.program, 'isPoint');\n            var vertexCoordLocation = gl.getAttribLocation(this._webgl.program, 'vertexCoord');\n            var vertexColorLocation = gl.getUniformLocation(this._webgl.program, \"u_color\");\n\n            var _aes$getFillColor = aes.getFillColor(),\n                _aes$getFillColor2 = _slicedToArray(_aes$getFillColor, 4),\n                r = _aes$getFillColor2[0],\n                g = _aes$getFillColor2[1],\n                b = _aes$getFillColor2[2],\n                a = _aes$getFillColor2[3];\n\n            matrixProjection.set(this._webgl.projection);\n            this.scaleProjection(matrixProjection, scale, scale);\n            this.translateProjection(matrixProjection, -offset.x, -offset.y);\n            gl.uniformMatrix4fv(projectionLocation, false, matrixProjection);\n            gl.vertexAttrib1f(vertexSizeLocation, pointSize);\n            gl.uniform1f(isPointLocation, 0.0);\n            gl.uniform4f(vertexColorLocation, r / 255, g / 255, b / 255, a); // Draw Polygons' Interior\n\n            var features = aes.getFeatures();\n            var _iteratorNormalCompletion6 = true;\n            var _didIteratorError6 = false;\n            var _iteratorError6 = undefined;\n\n            try {\n                for (var _iterator6 = features[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                    var f = _step6.value;\n                    // Draw Polygons' Interior\n                    var triangles = f.getTriangles();\n                    var _iteratorNormalCompletion7 = true;\n                    var _didIteratorError7 = false;\n                    var _iteratorError7 = undefined;\n\n                    try {\n                        for (var _iterator7 = triangles[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n                            var t = _step7.value;\n\n                            gl.bindBuffer(gl.ARRAY_BUFFER, t);\n                            gl.enableVertexAttribArray(vertexCoordLocation);\n                            gl.vertexAttribPointer(vertexCoordLocation, 2, gl.FLOAT, false, fsize * 2, 0);\n                            gl.drawArrays(gl.TRIANGLES, 0, t.numItems);\n                        }\n                    } catch (err) {\n                        _didIteratorError7 = true;\n                        _iteratorError7 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion7 && _iterator7.return) {\n                                _iterator7.return();\n                            }\n                        } finally {\n                            if (_didIteratorError7) {\n                                throw _iteratorError7;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError6 = true;\n                _iteratorError6 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                        _iterator6.return();\n                    }\n                } finally {\n                    if (_didIteratorError6) {\n                        throw _iteratorError6;\n                    }\n                }\n            }\n        }\n\n        /**\r\n         * M22) Scale matrix with the given x(scaleX) and y(scaleY) values.\r\n         * Scaling x and y, which is just scaling first two rows of matrix\r\n         * @param {Float32Array} matrix \r\n         * @param {number} scaleX - Scale in X axis.\r\n         * @param {number} scaleY - Scale in Y axis.\r\n         * @see http://www.c-jump.com/bcc/common/Talk3/Math/Matrices/const_images/applying_scaling.png\r\n         * @see http://ptgmedia.pearsoncmg.com/images/chap3_9780321902924/elementLinks/03fig27.jpg Remember WebGL is Column major\r\n         * @see http://prntscr.com/eononb\r\n         * @memberOf Map\r\n         */\n\n    }, {\n        key: 'scaleProjection',\n        value: function scaleProjection(matrix, scaleX, scaleY) {\n            for (var i = 0; i < 8; i++) {\n                i < 4 ? matrix[i] *= scaleX : matrix[i] *= scaleY;\n            }\n        }\n\n        /**\r\n         * M23) The translation is performed in the last row of the matrix. \r\n         * @param {Float32Array} matrix - The matrix to hold the result.\r\n         * @param {number} tx - Translation in X axis.  \r\n         * @param {number} ty - Translation in Y axis.\r\n         * @see http://polymathprogrammer.com/images/blog/200809/translationmatrix.png\r\n         * @see http://prntscr.com/eononb\r\n         * @memberOf Map\r\n         */\n\n    }, {\n        key: 'translateProjection',\n        value: function translateProjection(matrix, tx, ty) {\n            for (var i = 0; i < 4; i++) {\n                matrix[i + 12] += matrix[i] * tx + matrix[i + 4] * ty;\n            }\n        }\n\n        /**\r\n         * M24) Receiving an Aesthetics object, draws the borders contained in it's Features, \r\n         * aplying the color specified in the Aeshteic object for the line color(Aeshteic.strokeColor).\r\n         * @param {Aesthetic} aes - The Aesthetic object.\r\n         * @returns {void}\r\n         * @memberOf Map\r\n         */\n\n    }, {\n        key: 'drawBorders',\n        value: function drawBorders(aes) {\n            var gl = this._webgl.gl;\n            if (gl === null) return;\n\n            gl.enable(gl.BLEND);\n            gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n            var matrixProjection = new Float32Array(16);\n            var fsize = Float32Array.BYTES_PER_ELEMENT;\n            var currentZoom = this.bGMap.getZoom();\n            var pointSize = Math.max(currentZoom - 5.0, 1.0);\n            var scale = 2 ** currentZoom;\n            var offset = this.latLongToPixelXY(this.bGMap.getLngBound(), this.bGMap.getLatBound());\n            var projectionLocation = gl.getUniformLocation(this._webgl.program, 'projection');\n            var vertexSizeLocation = gl.getAttribLocation(this._webgl.program, 'aPointSize');\n            var vertexCoordLocation = gl.getAttribLocation(this._webgl.program, 'vertexCoord');\n            var vertexColorLocation = gl.getUniformLocation(this._webgl.program, \"u_color\");\n            var isPointLocation = gl.getUniformLocation(this._webgl.program, 'isPoint');\n\n            var _aes$getStrokeColor = aes.getStrokeColor(),\n                _aes$getStrokeColor2 = _slicedToArray(_aes$getStrokeColor, 4),\n                r = _aes$getStrokeColor2[0],\n                g = _aes$getStrokeColor2[1],\n                b = _aes$getStrokeColor2[2],\n                a = _aes$getStrokeColor2[3];\n\n            matrixProjection.set(this._webgl.projection);\n            this.scaleProjection(matrixProjection, scale, scale);\n            this.translateProjection(matrixProjection, -offset.x, -offset.y);\n            gl.uniformMatrix4fv(projectionLocation, false, matrixProjection);\n            gl.vertexAttrib1f(vertexSizeLocation, pointSize);\n            gl.uniform1f(isPointLocation, 0.0);\n            gl.uniform4f(vertexColorLocation, r / 255, g / 255, b / 255, a);\n\n            var features = aes.getFeatures();\n            var _iteratorNormalCompletion8 = true;\n            var _didIteratorError8 = false;\n            var _iteratorError8 = undefined;\n\n            try {\n                for (var _iterator8 = features[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n                    var f = _step8.value;\n\n                    var borders = f.getBorders();\n                    var _iteratorNormalCompletion9 = true;\n                    var _didIteratorError9 = false;\n                    var _iteratorError9 = undefined;\n\n                    try {\n                        for (var _iterator9 = borders[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n                            var _b2 = _step9.value;\n\n                            gl.bindBuffer(gl.ARRAY_BUFFER, _b2);\n                            gl.enableVertexAttribArray(vertexCoordLocation);\n                            gl.vertexAttribPointer(vertexCoordLocation, 2, gl.FLOAT, false, fsize * 2, 0);\n                            gl.drawArrays(gl.LINE_LOOP, 0, _b2.numItems);\n                        }\n                    } catch (err) {\n                        _didIteratorError9 = true;\n                        _iteratorError9 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion9 && _iterator9.return) {\n                                _iterator9.return();\n                            }\n                        } finally {\n                            if (_didIteratorError9) {\n                                throw _iteratorError9;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError8 = true;\n                _iteratorError8 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion8 && _iterator8.return) {\n                        _iterator8.return();\n                    }\n                } finally {\n                    if (_didIteratorError8) {\n                        throw _iteratorError8;\n                    }\n                }\n            }\n        }\n\n        /**\r\n         * M?) Receiving an Aesthetics object, draws the borders contained in it's Features, \r\n         * aplying the filling color calculated using the attribute and the color scheme.\r\n         * @param {Aesthetic} aes - The Aesthetic object.\r\n         * @returns {void}\r\n         * @memberOf Map\r\n         */\n\n    }, {\n        key: 'drawContinuousPolygons',\n        value: function drawContinuousPolygons(aes) {\n            var gl = this._webgl.gl;\n            if (gl === null) return;\n\n            var matrixProjection = new Float32Array(16);\n            var fsize = Float32Array.BYTES_PER_ELEMENT;\n            var currentZoom = this.bGMap.getZoom();\n            var pointSize = Math.max(currentZoom - 5.0, 1.0);\n            var scale = 2 ** currentZoom;\n            var offset = this.latLongToPixelXY(this.bGMap.getLngBound(), this.bGMap.getLatBound());\n            var projectionLocation = gl.getUniformLocation(this._webgl.program, 'projection');\n            var vertexSizeLocation = gl.getAttribLocation(this._webgl.program, 'aPointSize');\n            var isPointLocation = gl.getUniformLocation(this._webgl.program, 'isPoint');\n            var vertexCoordLocation = gl.getAttribLocation(this._webgl.program, 'vertexCoord');\n            var vertexColorLocation = gl.getUniformLocation(this._webgl.program, \"u_color\");\n\n            matrixProjection.set(this._webgl.projection);\n            this.scaleProjection(matrixProjection, scale, scale);\n            this.translateProjection(matrixProjection, -offset.x, -offset.y);\n            gl.uniformMatrix4fv(projectionLocation, false, matrixProjection);\n            gl.vertexAttrib1f(vertexSizeLocation, pointSize);\n            gl.uniform1f(isPointLocation, 0.0);\n\n            var features = aes.getFeatures();\n            var _iteratorNormalCompletion10 = true;\n            var _didIteratorError10 = false;\n            var _iteratorError10 = undefined;\n\n            try {\n                for (var _iterator10 = features[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n                    var f = _step10.value;\n\n                    var color = void 0;\n                    var diff = f.getProperties()[this.gisplayOptions.attr];\n                    if (diff === 0) color = aes.fillColor(0.5).rgb();else {\n                        if (diff > 0) color = aes.fillColor(0.5 + diff / this.max / 2).rgb();else color = aes.fillColor(0.5 - diff / this.min / 2).rgb();\n                    }\n                    var _ref = [Math.round(color[0]) / 255, Math.round(color[1]) / 255, Math.round(color[2]) / 255, this.gisplayOptions.alpha],\n                        r = _ref[0],\n                        g = _ref[1],\n                        b = _ref[2],\n                        a = _ref[3];\n\n                    gl.uniform4f(vertexColorLocation, r, g, b, a);\n\n                    var triangles = f.getTriangles();\n                    var _iteratorNormalCompletion11 = true;\n                    var _didIteratorError11 = false;\n                    var _iteratorError11 = undefined;\n\n                    try {\n                        for (var _iterator11 = triangles[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n                            var t = _step11.value;\n\n                            gl.bindBuffer(gl.ARRAY_BUFFER, t);\n                            gl.enableVertexAttribArray(vertexCoordLocation);\n                            gl.vertexAttribPointer(vertexCoordLocation, 2, gl.FLOAT, false, fsize * 2, 0); //gl.vertexAttribPointer(vertexColorLocation, 4, gl.FLOAT, false, fsize * 6, fsize * 2);\n                            gl.drawArrays(gl.TRIANGLES, 0, t.numItems);\n                        }\n                    } catch (err) {\n                        _didIteratorError11 = true;\n                        _iteratorError11 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion11 && _iterator11.return) {\n                                _iterator11.return();\n                            }\n                        } finally {\n                            if (_didIteratorError11) {\n                                throw _iteratorError11;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError10 = true;\n                _iteratorError10 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion10 && _iterator10.return) {\n                        _iterator10.return();\n                    }\n                } finally {\n                    if (_didIteratorError10) {\n                        throw _iteratorError10;\n                    }\n                }\n            }\n        }\n\n        /**\r\n         * M?) Receiving an Aesthetics object, draws the points contained in it's Features, \r\n         * aplying the values specified in that Aesthetic object visual variables (color and size).\r\n         * @param {Aesthetic} aes - The Aesthetic object.\r\n         * @returns {void}\r\n         * @memberOf Map\r\n         */\n\n    }, {\n        key: 'drawPoints',\n        value: function drawPoints(aes) {\n            var gl = this._webgl.gl;\n            if (gl === null) return;\n\n            gl.enable(gl.BLEND);\n            gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n            var matrixProjection = new Float32Array(16);\n            var fsize = Float32Array.BYTES_PER_ELEMENT;\n            var currentZoom = this.bGMap.getZoom();\n            var scale = 2 ** currentZoom;\n            var pointSize = Math.max(currentZoom - 4.0 + aes.getPointSize(), aes.getPointSize());\n            var offset = this.latLongToPixelXY(this.bGMap.getLngBound(), this.bGMap.getLatBound());\n            var projectionLocation = gl.getUniformLocation(this._webgl.program, 'projection');\n            var vertexSizeLocation = gl.getAttribLocation(this._webgl.program, 'aPointSize');\n            var vertexCoordLocation = gl.getAttribLocation(this._webgl.program, 'vertexCoord');\n            var vertexColorLocation = gl.getUniformLocation(this._webgl.program, \"u_color\");\n            var isPointLocation = gl.getUniformLocation(this._webgl.program, 'isPoint');\n\n            var _aes$getFillColor3 = aes.getFillColor(),\n                _aes$getFillColor4 = _slicedToArray(_aes$getFillColor3, 4),\n                r = _aes$getFillColor4[0],\n                g = _aes$getFillColor4[1],\n                b = _aes$getFillColor4[2],\n                a = _aes$getFillColor4[3];\n\n            matrixProjection.set(this._webgl.projection);\n            this.scaleProjection(matrixProjection, scale, scale);\n            this.translateProjection(matrixProjection, -offset.x, -offset.y);\n            gl.uniformMatrix4fv(projectionLocation, false, matrixProjection);\n            gl.vertexAttrib1f(vertexSizeLocation, pointSize);\n            gl.uniform1f(isPointLocation, 1.0);\n            gl.uniform4f(vertexColorLocation, r / 255, g / 255, b / 255, a);\n\n            var features = aes.getFeatures();\n            var allFeatures = aes.getAllFeatures();\n            if (this.gisplayOptions.isDynamic && aes.getFeatures().length > 0) {\n                var _iteratorNormalCompletion12 = true;\n                var _didIteratorError12 = false;\n                var _iteratorError12 = undefined;\n\n                try {\n                    for (var _iterator12 = features[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n                        var f = _step12.value;\n\n                        var points = f.getPoints();\n                        var _iteratorNormalCompletion13 = true;\n                        var _didIteratorError13 = false;\n                        var _iteratorError13 = undefined;\n\n                        try {\n                            for (var _iterator13 = points[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n                                var p = _step13.value;\n\n                                gl.bindBuffer(gl.ARRAY_BUFFER, p);\n                                gl.enableVertexAttribArray(vertexCoordLocation);\n                                gl.vertexAttribPointer(vertexCoordLocation, 2, gl.FLOAT, false, fsize * 2, 0);\n                                gl.drawArrays(gl.POINTS, 0, p.numItems);\n                            }\n                        } catch (err) {\n                            _didIteratorError13 = true;\n                            _iteratorError13 = err;\n                        } finally {\n                            try {\n                                if (!_iteratorNormalCompletion13 && _iterator13.return) {\n                                    _iterator13.return();\n                                }\n                            } finally {\n                                if (_didIteratorError13) {\n                                    throw _iteratorError13;\n                                }\n                            }\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError12 = true;\n                    _iteratorError12 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion12 && _iterator12.return) {\n                            _iterator12.return();\n                        }\n                    } finally {\n                        if (_didIteratorError12) {\n                            throw _iteratorError12;\n                        }\n                    }\n                }\n            } else if (allFeatures !== null && !this.gisplayOptions.isDynamic) {\n                var _iteratorNormalCompletion14 = true;\n                var _didIteratorError14 = false;\n                var _iteratorError14 = undefined;\n\n                try {\n                    for (var _iterator14 = allFeatures[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n                        var allF = _step14.value;\n\n                        var _points = allF.getPoints();\n                        var _iteratorNormalCompletion15 = true;\n                        var _didIteratorError15 = false;\n                        var _iteratorError15 = undefined;\n\n                        try {\n                            for (var _iterator15 = _points[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n                                var _p = _step15.value;\n\n                                gl.bindBuffer(gl.ARRAY_BUFFER, _p);\n                                gl.enableVertexAttribArray(vertexCoordLocation);\n                                gl.vertexAttribPointer(vertexCoordLocation, 2, gl.FLOAT, false, fsize * 2, 0);\n                                gl.drawArrays(gl.POINTS, 0, _p.numItems);\n                            }\n                        } catch (err) {\n                            _didIteratorError15 = true;\n                            _iteratorError15 = err;\n                        } finally {\n                            try {\n                                if (!_iteratorNormalCompletion15 && _iterator15.return) {\n                                    _iterator15.return();\n                                }\n                            } finally {\n                                if (_didIteratorError15) {\n                                    throw _iteratorError15;\n                                }\n                            }\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError14 = true;\n                    _iteratorError14 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion14 && _iterator14.return) {\n                            _iterator14.return();\n                        }\n                    } finally {\n                        if (_didIteratorError14) {\n                            throw _iteratorError14;\n                        }\n                    }\n                }\n            }\n        }\n\n        /**\r\n         * M?) Receiving an Aesthetics object, draws the points contained in it's Features, \r\n         * aplying the color specified in the Aeshteic object for the line color(Aeshteic.strokeColor) \r\n         * and the size of the point is based on the attribute value and the specified limits.\r\n         * @param {Aesthetic} aes - The Aesthetic object. \r\n         * @returns {void} \r\n         * @memberOf Map\r\n         */\n\n    }, {\n        key: 'drawProportionalPoints',\n        value: function drawProportionalPoints(aes) {\n            var gl = this._webgl.gl;\n            if (gl === null) return;\n\n            gl.enable(gl.BLEND);\n            gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n            var currentZoom = this.bGMap.getZoom();\n            var scale = 2 ** currentZoom;\n            var offset = this.latLongToPixelXY(this.bGMap.getLngBound(), this.bGMap.getLatBound());\n            var projectionLocation = gl.getUniformLocation(this._webgl.program, 'projection');\n            var vertexCoordLocation = gl.getAttribLocation(this._webgl.program, 'vertexCoord');\n            var vertexColorLocation = gl.getUniformLocation(this._webgl.program, \"u_color\");\n            var isPointLocation = gl.getUniformLocation(this._webgl.program, 'isPoint');\n            var matrixProjection = new Float32Array(16);\n\n            matrixProjection.set(this._webgl.projection);\n            this.scaleProjection(matrixProjection, scale, scale);\n            this.translateProjection(matrixProjection, -offset.x, -offset.y);\n            gl.uniformMatrix4fv(projectionLocation, false, matrixProjection);\n            gl.uniform1f(isPointLocation, 1.0);\n\n            var _aes$getFillColor5 = aes.getFillColor(),\n                _aes$getFillColor6 = _slicedToArray(_aes$getFillColor5, 4),\n                r = _aes$getFillColor6[0],\n                g = _aes$getFillColor6[1],\n                b = _aes$getFillColor6[2],\n                a = _aes$getFillColor6[3];\n\n            gl.uniform4f(vertexColorLocation, r / 255, g / 255, b / 255, this.gisplayOptions.alpha); //TODO: Para 2.5D usar alpha a 0?\n\n            var fsize = Float32Array.BYTES_PER_ELEMENT;\n            var opts = this.gisplayOptions;\n            if (this.gisplayOptions.isDynamic) {\n                var features = aes.getFeatures();\n                var _iteratorNormalCompletion16 = true;\n                var _didIteratorError16 = false;\n                var _iteratorError16 = undefined;\n\n                try {\n                    for (var _iterator16 = features[Symbol.iterator](), _step16; !(_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done); _iteratorNormalCompletion16 = true) {\n                        var f = _step16.value;\n\n                        var points = f.getPoints();\n                        var _iteratorNormalCompletion17 = true;\n                        var _didIteratorError17 = false;\n                        var _iteratorError17 = undefined;\n\n                        try {\n                            for (var _iterator17 = points[Symbol.iterator](), _step17; !(_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done); _iteratorNormalCompletion17 = true) {\n                                var p = _step17.value;\n\n                                gl.bindBuffer(gl.ARRAY_BUFFER, p);\n                                var propvalue = parseFloat(f.getProperties()[opts.attr]);\n                                var temppointsize = (opts.maxPointSize - opts.minPointSize) / (this.max - this.min) * (propvalue - this.min);\n                                var pointSize = Math.max(currentZoom - 4.0 + temppointsize * currentZoom / 4, 2);\n                                var vertexSizeLocation = gl.getAttribLocation(this._webgl.program, 'aPointSize');\n                                gl.vertexAttrib1f(vertexSizeLocation, pointSize);\n                                gl.enableVertexAttribArray(vertexCoordLocation);\n                                gl.vertexAttribPointer(vertexCoordLocation, 2, gl.FLOAT, false, fsize * 2, 0);\n                                gl.drawArrays(gl.POINTS, 0, p.numItems);\n                            }\n                        } catch (err) {\n                            _didIteratorError17 = true;\n                            _iteratorError17 = err;\n                        } finally {\n                            try {\n                                if (!_iteratorNormalCompletion17 && _iterator17.return) {\n                                    _iterator17.return();\n                                }\n                            } finally {\n                                if (_didIteratorError17) {\n                                    throw _iteratorError17;\n                                }\n                            }\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError16 = true;\n                    _iteratorError16 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion16 && _iterator16.return) {\n                            _iterator16.return();\n                        }\n                    } finally {\n                        if (_didIteratorError16) {\n                            throw _iteratorError16;\n                        }\n                    }\n                }\n            }\n        }\n\n        /** ########################    ABSTRACT METHODS    ######################## */\n        /**\r\n         * M19) Draw map function. Must be overriden by subclasses.\r\n         * @abstract \r\n         */\n\n    }, {\n        key: 'draw',\n        value: function draw() {\n            throw new Error(\"Draw must be implemented by subclass.\");\n        }\n\n        /**\r\n         * Defaults for each map. Subclasses should override this method.\r\n         * @param {any} defaultId \r\n         * @abstract \r\n         * @memberOf Map\r\n         */\n\n    }, {\n        key: 'defaults',\n        value: function defaults(defaultId) {\n            throw new Error(\"This map has no defaults defined.\");\n        }\n\n        /**\r\n         * This function should be implemented by any subclass that wants to use another way of processing data.\r\n         * By default it loads GeoJSON but if the user wants to load another type of data it should do so by implementing this method.\r\n         * A function similar to loadGeoJSON should also be implemented\r\n         * @param {Object|JSON} data - Dataset to be used. \r\n         * TODO: Add static to this method.\r\n         * @abstract\r\n         */\n\n    }, {\n        key: 'processData',\n        value: function processData(data) {\n            this.loadGeoJSON(geojson);\n        }\n    }]);\n\n    return Map;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvR2lzcGxheS9NYXBzL01hcC5qcz8xZDYwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJHTWFwV3JhcHBlciB9IGZyb20gJy4vQkdNYXBXcmFwcGVyJztcclxuaW1wb3J0IHsgQWVzdGhldGljIH0gZnJvbSAnLi9BZXN0aGV0aWMnO1xyXG5pbXBvcnQgeyBHaXNwbGF5T3B0aW9ucyB9IGZyb20gJy4uL0dpc3BsYXlPcHRpb25zJztcclxuXHJcbi8qKlxyXG4gKiBUaGlzIGNsYXNzIGNvbnRhaW5zIHRoZSBNYXAgY2xhc3Mgd2hpY2ggcmVwcmVzZW50cyB0aGUgY3VycmVudCBtYXAuXHJcbiAqIEVhY2ggbWFwIGhhcyBhIGdyb3VwIG9mIGZ1bmN0aW9ucyBhdmFpbGFibGUuIFRoZXJlIGlzIG9ubHkgb25lIG1hcCB5ZXQobWF5YmUgdGhlcmUgd2lsbCBiZSB0d28gaWYgd2Ugd2FudCB0byBjb21wYXJlIHR3bykuXHJcbiAqIEBzZWUgRGlvZ28ncyB0aGVzaXMgNTctNjAgKyA2NC82NVxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIE1hcCB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBNYXAgY29uc3RydWN0b3IuIEFsbCBNYXAgc3ViY2xhc3NlcyBzaG91bGQgY2FsbCB0aGlzIGZpcnN0IHdpdGggc3VwZXIoLi4uKS5cclxuICAgICAqIEBwYXJhbSB7QkdNYXBXcmFwcGVyfE9iamVjdH0gYmdtYXAgLSBCYWNrZ3JvdW5kIG1hcC5cclxuICAgICAqIEBwYXJhbSB7SlNPTn0gZ2VvbWV0cnkgLSBHZW9tZXRyeSByZWFkIGZyb20gdGhlIGZpbGUuXHJcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gdXNlck9wdGlvbnMgLSBUaGUgdXNlciBkZWZpbmVkIG9wdGlvbnMuIFxyXG4gICAgICogQHRvZG8gV2l0aCB0aGUgdHlwZSBvZiB0aGUgbWFwIHdlIGNhbiBkbyBhbiBpZiBzdGF0ZW1lbnQgaW5zaWRlIGNvbnN0cnVjdG9yIHRvIHVzZSBvciBub3Qgc29tZSBvZiB0aGUgdmFyaWFibGVzLlxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3RvcihiZ21hcCwgZ2VvbWV0cnksIHVzZXJPcHRpb25zKSB7XHJcbiAgICAgICAgLy9jb25zb2xlLmxvZyhcIk1hcCBjb25zdHJ1Y3RvciBjYWxsZWQgLT4gc3VwZXIoKVwiKTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgICogVGhpcyBvYmplY3QgaG9sZHMgZm9yIGVhY2ggcG9pbnQgaXQncyBsb25nLCBsYXQgYW5kIGFzc29jaWF0ZWQgcHJvcGVydGllcy4gXHJcbiAgICAgICAgICAqIFRoaXMgcG9pbnRzIHdpbGwgYmUgdXNlZCBieSBrLWQgVHJlZS4gQW5kIGstZCBUcmVlIGlzIHVzZWQgdG8gZmluZCB0aGUgY2xvc2VzdCBwb2ludCB0byB3aGVyZSB0aGUgdXNlciBjbGlja2VkLlxyXG4gICAgICAgICAgKiBAdHlwZSB7QXJyYXk8e2xvbjogbnVtYmVyLCBsYXQ6IG51bWJlciwgcHJvcGVydGllczogSlNPTn0+fVxyXG4gICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLnRyZWVwb2ludHMgPSBbXTtcclxuXHJcbiAgICAgICAgLy8gIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMgRE9UIE1BUCBPTkxZXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICAqIEhvbGRzIHRoZSBwb2ludHMgZm9yIGVhY2ggQWVzdGhldGhpYyBvYmplY3QuXHJcbiAgICAgICAgICAqIEB0eXBlIHtBcnJheTxBcnJheTxudW1iZXI+Pn1cclxuICAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy50ZW1wQWVzdGhldGljUG9pbnRzID0gbmV3IEFycmF5KCk7XHJcblxyXG4gICAgICAgIC8vICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIEFMTCBNQVBTXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQWVzdGhldGljIG9iamVjdHMgdGhhdCB3ZXJlIHNhdmVkLlxyXG4gICAgICAgICAqIEB0eXBlIHtBcnJheTxBZXN0aGV0aWM+fVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuYWVzdGhldGljcyA9IG5ldyBBcnJheSgpO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEpTT04gb2JqZWN0IHdpdGggdGhlIGdlb21ldHJ5IHRoYXQgd2FzIHJlYWQgZnJvbSB0aGUgZmlsZS5cclxuICAgICAgICAgKiBAdHlwZSB7SlNPTn1cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLmdlb21ldHJ5ID0gZ2VvbWV0cnk7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogVGhpcyBtYXAgdW5pcXVlIGlkZW50aWZpZXIuXHJcbiAgICAgICAgICogQHR5cGUge251bWJlcn1cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLmlkID0gd2luZG93Lm1hcGNvdW50Kys7XHJcblxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEtkVHJlZSBvYmplY3QgdG8gaG9sZCB0aGF0IHdpbGwgYmUgdXNlZCB0byBjYWxjdWxhdGUgdGhlIGNsb3Nlc3QgcG9pbnQgdG8gdGhlIGNvb3JkaW5hdGVzIHdoZXJlIHRoZSB1c2VyIG1hZGUgYSBjbGljay5cclxuICAgICAgICAgKiBAdHlwZSB7a2RUcmVlfVxyXG4gICAgICAgICAqIEBzZWUgRGlvZ28ncyB0aGVzaXMgUGFnZSA2MS5cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLmtkdHJlZSA9IHVuZGVmaW5lZDtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBSQnVzaChSdHJlZSBpbXBsZW1lbnRhdGlvbikgdGhhdCBpcyB1c2VkIHRvIGNhbGN1bGF0ZSB0aGUgcG9seWdvbiBjbG9zZXN0IHRvIHRoZSBjb29yZGluYXRlcyB3aGVyZSB0aGUgdXNlciBtYWRlIGEgY2xpY2suXHJcbiAgICAgICAgICogQHR5cGUge1BvbHlnb25Mb29rdXB9XHJcbiAgICAgICAgICogQHNlZSBEaW9nbydzIHRoZXNpcyBwYWdlIDYxLlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMucnRyZWUgPSB1bmRlZmluZWQ7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogUG9seWdvbnMgZG8vZG8gbm90IGV4aXN0LiBUaGlzIGlzIHVzZWQgdG8ga25vdyBpZiBpdCB0byBjcmVhdGUgYSBydHJlZSBvciBub3Qgb24gYnVpbGRUcmVlcyBtZXRob2QuXHJcbiAgICAgICAgICogQHR5cGUge2Jvb2xlYW59XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5oYXNQb2x5Z29ucyA9IGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogTTEpIExvYWRzIHVzZXIgYW5kIGRlZmF1bHQgb3B0aW9ucy4gRm9yIGVhY2ggY2FzZSBpZiBpdCBpc24ndCBwcm92aWRlZCBieSB0aGUgdXNlciwgdGhlbiBpdCB1c2VzXHJcbiAgICAgKiB0aGUgZGVmYXVsdCBvcHRpb24uIDFzdCBtZXRob2QgdG8gYmUgY2FsbGVkLlxyXG4gICAgICogQHBhcmFtIHtPYmplY3R9IHVzZXJPcHRpb25zIC0gT3B0aW9ucyBnaXZlbiBieSB0aGUgdXNlci4gXHJcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gYmdtYXAgIC0gVGhlIGJhY2tncm91bmQgbWFwIHByb3ZpZGVyLlxyXG4gICAgICovXHJcbiAgICBsb2FkT3B0aW9ucyh1c2VyT3B0aW9ucywgYmdtYXApIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBBbGwgdGhlIG9wdGlvbnMgYXZhaWxhYmxlIGluIHRoZSBHaXNwbGF5IEFQSS5cclxuICAgICAgICAgKiBAdHlwZSB7R2lzcGxheU9wdGlvbnN9XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5naXNwbGF5T3B0aW9ucyA9IG5ldyBHaXNwbGF5T3B0aW9ucyh1c2VyT3B0aW9ucyk7XHJcblxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFRoZSBiYWNrZ3JvdW5kIG1hcCB0byBiZSB1c2VkLiBUaGlzIG1hcCB3aWxsICBiZSBkcmF3biBvdmVyIHRoZSBiYWNrZ3JvdW5kIG1hcChiR01hcCkuXHJcbiAgICAgICAgICogQHR5cGUge0JHTWFwV3JhcHBlcn1cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLmJHTWFwID0gdGhpcy5naXNwbGF5T3B0aW9ucy51c2VDdXN0b21NYXBTZXJ2aWNlID8gYmdtYXAgOiBuZXcgQkdNYXBXcmFwcGVyKGJnbWFwKTtcclxuICAgICAgICBpZiAodGhpcy5naXNwbGF5T3B0aW9ucy5zaG93TG9hZGVyKVxyXG4gICAgICAgICAgICB0aGlzLnNob3dMb2FkZXIoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIE0yKSBDYWxscyB0aGUgQmFja2dyb3VuZCBNYXAgV3JhcHBlciB0byBjcmVhdGUgdGhlIGxvYWRlciB0byBiZSB1c2VkIGxhdGVyIHdoZW4gdGhlIHVzZXIgZmVlZHMgZGF0YSB0byB0aGUgQVBJLlxyXG4gICAgICogQGRlcHJlY2F0ZWQgTm90IHVzZWQgYW55bW9yZVxyXG4gICAgICovXHJcbiAgICBzaG93TG9hZGVyKCkge1xyXG4gICAgICAgIHRoaXMuYkdNYXAuc2hvd0xvYWRlcigpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogTTMpIEluaXRpYWxpemVzIHRoZSBBUEkgYnk6IGNyZWF0aW5nIGNhbnZhcywgdGhlIFdlYkdMIHByb2dyYW0gYW5kIHNldHRpbmcgdXAgYWxsIG5lZWRlZCBldmVudHMuXHJcbiAgICAgKiBAcmV0dXJuIHt2b2lkfVxyXG4gICAgICovXHJcbiAgICBpbml0aWFsaXplKCkge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFRoaXMgaXMgdGhlIG1haXhtdW0gdmFsdWUgZm91bmQgb24gdGhlIGRhdGFzZXQuIFRoZSBmaW5hbCB2YWx1ZSBmb3IgdGhlIGJyZWFrLiBFLmcuIFsyLCAzN1sgMzcgaXMgdGhlIG1heC4gXHJcbiAgICAgICAgICogVXNlZCBmb3IgUFN5bWJvbCBNYXAgYW5kIENoYW5nZSBNYXAgYmVjYXVzZSBvbiB0aG9zZSBtYXBzIGl0J3MgaW1wb3J0YW50IHRvIHRha2UgaW4gY29uc2lkZXJhdGlvbiB0aGlzIHZhbHVlcyB0byBkZWZpbmUgdGhlIEZlYXR1cmUgY29sb3IuXHJcbiAgICAgICAgICogQHNlZSBEaW9nbydzIHRoZXNpcyBwYWdlIDYzIDUuMS4zIFxyXG4gICAgICAgICAqIEB0eXBlIHtudW1iZXJ9XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5tYXggPSBudWxsO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFRoaXMgaXMgdGhlIG1pbmltdW0gdmFsdWUgZm91bmQgb24gdGhlIGRhdGFzZXQuIFRoZSBpbml0aWFsIHZhbHVlIGZvciB0aGUgYnJlYWsuIEUuZy4gWzIsIDM3WyAyIGlzIHRoZSBtaW4uXHJcbiAgICAgICAgICogVXNlZCBmb3IgUFN5bWJvbCBNYXAgYW5kIENoYW5nZSBNYXAgYmVjYXVzZSBvbiB0aG9zZSBtYXBzIGl0J3MgaW1wb3J0YW50IHRvIHRha2UgaW4gY29uc2lkZXJhdGlvbiB0aGlzIHZhbHVlcyB0byBkZWZpbmUgdGhlIEZlYXR1cmUgY29sb3IuXHJcbiAgICAgICAgICogQHNlZSBEaW9nbydzIHRoZXNpcyBwYWdlIDYzIDUuMS4zXHJcbiAgICAgICAgICogQHR5cGUge251bWJlcn1cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLm1pbiA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVDYW52YXMoKTtcclxuICAgICAgICB0aGlzLnByb2dyYW0oKTtcclxuICAgICAgICB0aGlzLmJHTWFwLm9uRXZlbnQoJ21vdmUnLCAoKSA9PiB7IHRoaXMuZHJhdygpOyB9KTtcclxuICAgICAgICB0aGlzLnNldHVwRnVuY3Rpb25PbmNsaWNrKHRoaXMuaWQpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogTTQpIENyZWF0ZXMgYSBjYW52YXMgZWxlbWVudCBhbmQgV2ViR0wgYXNzb2NpYXRlZCBpbmZvcm1hdGlvbi5cclxuICAgICAqL1xyXG4gICAgY3JlYXRlQ2FudmFzKCkge1xyXG4gICAgICAgIGNvbnN0IGNhbnZhcyA9IHRoaXMuYkdNYXAuY3JlYXRlQ2FudmFzKHRoaXMuaWQpO1xyXG5cclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAdHlwZSB7T2JqZWN0fSBfd2ViZ2wgLSBXZWJHTCBvYmplY3QuICBJbml0IHdlYmdsIHByb3BlcnRpZXNcclxuICAgICAgICAgKiBAcHJvcGVydHkgIHtXZWJHTFJlbmRlcmluZ0NvbnRleHR9IF93ZWJnbC5nbCAtIFRoZSBXZWJHTFJlbmRlcmluZ0NvbnRleHQgdG8gYmUgdXNlZC5cclxuICAgICAgICAgKiBAcHJvcGVydHkgIHtXZWJHTFByb2dyYW19IF93ZWJnbC5wcm9ncmFtIC0gIFRoZSBXZWJHTFByb2dyYW0gdG8gYmUgdXNlZC5cclxuICAgICAgICAgKiBAcHJvcGVydHkgIHtGbG9hdDMyQXJyYXl9IF93ZWJnbC5wcm9qZWN0aW9uIC0gVGhlIHByb2plY3Rpb24gXHJcbiAgICAgICAgICogQHNlZSBEaW9nbydzIHRoZXNpcyBwYWdlIDY0K1xyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuX3dlYmdsID0ge1xyXG4gICAgICAgICAgICBnbDogbnVsbCxcclxuICAgICAgICAgICAgcHJvZ3JhbTogbnVsbCxcclxuICAgICAgICAgICAgcHJvamVjdGlvbjogbnVsbFxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHRoaXMuX3dlYmdsLmdsID0gY2FudmFzLmdldENvbnRleHQoXCJ3ZWJnbFwiKTtcclxuICAgICAgICB0aGlzLl93ZWJnbC5wcm9qZWN0aW9uID0gbmV3IEZsb2F0MzJBcnJheSgxNik7XHJcbiAgICAgICAgdGhpcy5fd2ViZ2wucHJvamVjdGlvbi5zZXQoXHJcbiAgICAgICAgICAgIFsyIC8gY2FudmFzLndpZHRoLCAwLCAwLCAwLFxyXG4gICAgICAgICAgICAgICAgMCwgLTIgLyBjYW52YXMuaGVpZ2h0LCAwLCAwLFxyXG4gICAgICAgICAgICAgICAgMCwgMCwgMCwgMCxcclxuICAgICAgICAgICAgLTEsIDEsIDAsIDFdXHJcbiAgICAgICAgKTtcclxuXHJcbiAgICAgICAgdGhpcy5fd2ViZ2wuZ2wudmlld3BvcnQoMCwgMCwgdGhpcy5iR01hcC5nZXRDb250YWluZXIoKS5vZmZzZXRXaWR0aCwgdGhpcy5iR01hcC5nZXRDb250YWluZXIoKS5vZmZzZXRIZWlnaHQpO1xyXG4gICAgICAgIHRoaXMuX3dlYmdsLmdsLmRpc2FibGUodGhpcy5fd2ViZ2wuZ2wuREVQVEhfVEVTVCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBNNSkgSW5pdGlhbGl6ZXM6IFxyXG4gICAgICogMSlXZWJHTFByb2dyYW0sIDIpIEdlbmVyYXRlcyBzaGFkZGVycywgMykgQXR0YWNoZXMgc2hhZGVycyB0byB0aGUgcHJvZ3JhbSwgNCkgbGlua3MgcHJvZ3JhbSwgNSkgdXNlcyBwcm9ncmFtLlxyXG4gICAgICovXHJcbiAgICBwcm9ncmFtKCkge1xyXG4gICAgICAgIHRoaXMuX3dlYmdsLnByb2dyYW0gPSB0aGlzLl93ZWJnbC5nbC5jcmVhdGVQcm9ncmFtKCk7XHJcblxyXG4gICAgICAgIGNvbnN0IHNvdXJjZV9jb2RlID0gdGhpcy5nZW5lcmF0ZVNoYWRlcnNTb3VyY2VDb2RlKCk7XHJcbiAgICAgICAgY29uc3QgdmVydGV4X3NoYWRlciA9IHRoaXMuY3JlYXRlQW5kQ29tcGlsZVNoYWRlcih0aGlzLl93ZWJnbC5nbC5WRVJURVhfU0hBREVSLCBzb3VyY2VfY29kZS52ZXJ0ZXhDb2RlLCB0aGlzLl93ZWJnbCk7XHJcbiAgICAgICAgY29uc3QgZnJhZ21lbnRfc2hhZGVyID0gdGhpcy5jcmVhdGVBbmRDb21waWxlU2hhZGVyKHRoaXMuX3dlYmdsLmdsLkZSQUdNRU5UX1NIQURFUiwgc291cmNlX2NvZGUuZnJhZ21lbnRDb2RlLCB0aGlzLl93ZWJnbCk7XHJcblxyXG4gICAgICAgIHRoaXMuX3dlYmdsLmdsLmF0dGFjaFNoYWRlcih0aGlzLl93ZWJnbC5wcm9ncmFtLCB2ZXJ0ZXhfc2hhZGVyKTtcclxuICAgICAgICB0aGlzLl93ZWJnbC5nbC5hdHRhY2hTaGFkZXIodGhpcy5fd2ViZ2wucHJvZ3JhbSwgZnJhZ21lbnRfc2hhZGVyKTtcclxuXHJcbiAgICAgICAgdGhpcy5fd2ViZ2wuZ2wubGlua1Byb2dyYW0odGhpcy5fd2ViZ2wucHJvZ3JhbSk7XHJcbiAgICAgICAgdGhpcy5fd2ViZ2wuZ2wudXNlUHJvZ3JhbSh0aGlzLl93ZWJnbC5wcm9ncmFtKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIE02KSBDcmVhdGVzIHNoYWRlcnMoVmVydGV4ICsgRnJhZ21lbnQpIHNvdXJjZSBjb2RlLlxyXG4gICAgICogQHJldHVybiB7e3ZlcnRleENvZGU6IHN0cmluZywgZnJhZ21lbnRDb2RlOiBzdHJpbmd9fSAtIFRoZSBjb2RlIGZvciB0aGUgdmVydGV4IGFuZCBmcmFnbWVudCBzaGFkZXJzLlxyXG4gICAgICovXHJcbiAgICBnZW5lcmF0ZVNoYWRlcnNTb3VyY2VDb2RlKCkgeyAvL0FkZGVkIEhFUkUgYnkgUnVpIFJlZmFjdG9yIHRvIHVzZSBFUzYgYGAgaW5zdGVhZCBvZiArPVxyXG4gICAgICAgIC8vZ2VuZXJhbFxyXG4gICAgICAgIGxldCB2ZXJ0ZXhTb3VyY2VDb2RlID1cclxuICAgICAgICAgICAgYFxyXG4gICAgICAgICBcdHVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uO1xyXG4gICAgICAgICAgICBhdHRyaWJ1dGUgdmVjNCB2ZXJ0ZXhDb29yZDsgXHJcbiAgICAgICAgIFx0YXR0cmlidXRlIGZsb2F0IGFQb2ludFNpemU7IFxyXG4gICAgICAgICBcdGF0dHJpYnV0ZSBmbG9hdCBhX29wYWNpdHk7IFxyXG4gICAgICAgICBcdHZhcnlpbmcgZmxvYXQgdl9vcGFjaXR5OyBcclxuICAgICAgICAgXHR2b2lkIG1haW4oKSB7XHJcbiAgICAgICAgIFx0XHRnbF9Qb3NpdGlvbiA9IChwcm9qZWN0aW9uICogdmVydGV4Q29vcmQpOyBcclxuICAgICAgICAgXHRcdGdsX1BvaW50U2l6ZSA9IGFQb2ludFNpemU7IFxyXG4gICAgICAgICAgICAgICAgdl9vcGFjaXR5ID0gYV9vcGFjaXR5OyBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIGA7XHJcblxyXG4gICAgICAgIGxldCBmcmFnbWVudFNvdXJjZUNvZGUgPSAvL1RPRE86IFJlbW92ZSB1bm5lY2Vzc2FyeSBicmFja2V0cyB7fVxyXG4gICAgICAgICAgICBgIFxyXG4gICAgICAgICAgICBwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDtcclxuICAgICAgICAgXHR1bmlmb3JtIHZlYzQgdV9jb2xvcjtcclxuICAgICAgICAgXHR2YXJ5aW5nIGZsb2F0IHZfb3BhY2l0eTsgXHJcbiAgICAgICAgICAgXHR1bmlmb3JtIGZsb2F0IGlzUG9pbnQ7XHJcbiAgICAgICAgICAgIHZvaWQgbWFpbigpIHtcclxuICAgICAgICAgXHRcdGZsb2F0IGJvcmRlciA9IDAuNTtcclxuICAgICAgICAgXHRcdGZsb2F0IHJhZGl1cyA9IDAuNTtcclxuICAgICAgICAgXHRcdGZsb2F0IGNlbnRlckRpc3QgPSBsZW5ndGgoZ2xfUG9pbnRDb29yZCAtIDAuNSk7XHJcbiAgICAgICAgIFx0XHRmbG9hdCBhbHBoYTtcclxuICAgICAgICAgXHRcdGlmICh1X2NvbG9yWzNdID09IC0xLjApIHsgICBcclxuICAgICAgICAgXHRcdFx0YWxwaGEgPSAgdl9vcGFjaXR5ICogc3RlcChjZW50ZXJEaXN0LCByYWRpdXMpO1xyXG4gICAgICAgICBcdFx0fVxyXG4gICAgICAgICBcdFx0ZWxzZSB7XHJcbiAgICAgICAgIFx0XHRcdGFscGhhID0gIHVfY29sb3JbM10gKiBzdGVwKGNlbnRlckRpc3QsIHJhZGl1cyk7XHJcbiAgICAgICAgIFx0XHR9XHJcbiAgICAgICAgIFx0XHRpZihpc1BvaW50ID09IDEuMCApIHtcclxuICAgICAgICAgXHRcdCAgICBpZiAoYWxwaGEgPCAwLjEpIGRpc2NhcmQ7XHJcbiAgICAgICAgIFx0XHRcdCAgICBnbF9GcmFnQ29sb3IgPSB2ZWM0KHVfY29sb3JbMF0sIHVfY29sb3JbMV0sIHVfY29sb3JbMl0sIGFscGhhKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICBcdFx0ZWxzZVxyXG4gICAgICAgICBcdFx0XHRnbF9GcmFnQ29sb3IgPSB2ZWM0KHVfY29sb3JbMF0sIHVfY29sb3JbMV0sIHVfY29sb3JbMl0sIHVfY29sb3JbM10pO1xyXG4gICAgICAgICBcdH1cclxuICAgICAgICBgO1xyXG4gICAgICAgIHJldHVybiB7IHZlcnRleENvZGU6IHZlcnRleFNvdXJjZUNvZGUsIGZyYWdtZW50Q29kZTogZnJhZ21lbnRTb3VyY2VDb2RlIH07XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBNNz8pIENyZWF0ZXMgYW5kIGNvbXBpbGVzIGEgc2hhZGVyLlxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHR5cGUgLSBUeXBlIG9mIHNoYWRlci4gT3B0aW9ucyBhcmU6IFZFUlRFWF9TSEFERVIgb3IgRlJBR01FTlRfU0hBREVSO1xyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHNvdXJjZV9jb2RlIC0gVGhlIHNoYWRlciBzb3VyY2UgY29kZS5cclxuICAgICAqIEBwYXJhbSB7TWFwI193ZWJnbH0gX3dlYmdsIC0gV2ViZ2wgb2JqZWN0IHRoYXQgdGhpcyBjbGFzcyBjb250YWlucy5cclxuICAgICAqIEByZXR1cm5zIHtXZWJHTFNoYWRlcn0gLSBUaGUgc2hhZGVyKHZlcnRleCBvZiBmcmFnbWVudCkuXHJcbiAgICAgKiBAbWVtYmVyT2YgTWFwXHJcbiAgICAgKi9cclxuICAgIGNyZWF0ZUFuZENvbXBpbGVTaGFkZXIodHlwZSwgc291cmNlX2NvZGUsIF93ZWJnbCkgeyAvL0FkZGVkIEhFUkUgYnkgUnVpXHJcbiAgICAgICAgbGV0IHNoYWRlciA9IF93ZWJnbC5nbC5jcmVhdGVTaGFkZXIodHlwZSk7XHJcbiAgICAgICAgX3dlYmdsLmdsLnNoYWRlclNvdXJjZShzaGFkZXIsIHNvdXJjZV9jb2RlKTtcclxuICAgICAgICBfd2ViZ2wuZ2wuY29tcGlsZVNoYWRlcihzaGFkZXIpO1xyXG4gICAgICAgIHJldHVybiBzaGFkZXI7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBNNykgU2V0cyB1cCBhIGZ1bmN0aW9uIHRvIGJlIGZpcmVkIHdoZW4gd2UgY2xpY2sgb24gdGhpcyBNYXAuXHJcbiAgICAgKiBBc3NpZ25zIHRoZSBjbGljayBldmVudCBvbiB0aGUgbWFwIHRvIHRoZSBmdW5jdGlvbiBzcGVjaWZpZWQgYnkgdGhlIHVzZXIgb3B0aW9ucy4gXHJcbiAgICAgKiBJZiB0aGUgYXR0cmlidXRlIGludGVyYXRpdmUgZnJvbSB0aGUgdXNlciBvcHRpb25zIGlzICE9IGZyb20gZmFsc2UgdGhlbiBmaXJlcyB0aGUgZGVmYXVsdCBmdW5jdGlvbihhbGVydCkuICBcclxuICAgICAqIFdpbGwgdXNlIHJ0cmVlIHRvIGZpbmQgdGhlIGNsb3Nlc3QgcG9seWdvbiB0byB0aGUgd2hlcmUgdGhlIGNsaWNrZWQgZXZlbnQgaGFwcGVuZWQuXHJcbiAgICAgKiBXaWxsIHVzZSBrZHRyZWUgdG8gZmluZCB0aGUgY2xvc2VzdCBwb2ludCB0byB3aGVyZSB0aGUgY2xpY2sgZXZlbnQgaGFwcGVuZWQuXHJcbiAgICAgKiBAdG9kbyBUaGlzIG1ldGhvZCBpcyBkb2luZyB1bmVjY2Vzc2FyeSBqb2IgaWYgdGhlIHVzZXIgc2V0IGludGVyYXRpdmUgdG8gZmFsc2UgYW5kIG1hcE9uQ2xpY2tGdW5jdGlvbiBpcyB1bmRlZmluZWQuXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gbWFwcG9zIC0gVGhpcyBtYXAgaWQuIFxyXG4gICAgICogQHNlZSBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8zNDM0OTczN1xyXG4gICAgICogQHJldHVybiB7dm9pZH1cclxuICAgICAqL1xyXG4gICAgc2V0dXBGdW5jdGlvbk9uY2xpY2sobWFwcG9zKSB7XHJcbiAgICAgICAgLyppZighdGhpcy5naXNwbGF5T3B0aW9ucy5pbnRlcmFjdGl2ZSAmJiB0aGlzLmdpc3BsYXlPcHRpb25zLm1hcE9uQ2xpY2tGdW5jdGlvbiA9PT0gdW5kZWZpbmVkKVxyXG4gICAgICAgICAgICByZXR1cm47Ki9cclxuICAgICAgICB0aGlzLmJHTWFwLm9uRXZlbnQoJ2NsaWNrJywgZSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IGxhdCA9IGUubGF0bG5nLmxhdDtcclxuICAgICAgICAgICAgY29uc3QgbG9uID0gZS5sYXRsbmcubG5nO1xyXG5cclxuICAgICAgICAgICAgLyoqXHJcbiAgICAgICAgICAgICAqIFdoZW4gZGVhbGluZyB3aXRoIHBvbHlnb25zIHJ0cmVlIHdpbGwgYmUgdXNlZC5cclxuICAgICAgICAgICAgICogQHNlZSBEaW9nbydzIHRoZXNpcyBQYWdlIDYyXHJcbiAgICAgICAgICAgICAqL1xyXG4gICAgICAgICAgICBpZiAodGhpcy5ydHJlZSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgcnRyZWVTZWFyY2hSZXN1bHQgPSB0aGlzLnJ0cmVlLnNlYXJjaChsb24sIGxhdCk7XHJcbiAgICAgICAgICAgICAgICBpZiAocnRyZWVTZWFyY2hSZXN1bHQgPT09IHVuZGVmaW5lZClcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgcmVzID0gXCJcIjtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgc2hvd1BydE9uQ2xpY2sgPSB0aGlzLmdpc3BsYXlPcHRpb25zLnNob3dQcm9wZXJ0aWVzT25DbGljaztcclxuICAgICAgICAgICAgICAgICAgICBpZiAoc2hvd1BydE9uQ2xpY2sgIT09IG51bGwpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaG93UHJ0T25DbGljay5sZW5ndGg7IGkgKz0gMikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGkgPT09IDApXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzICs9IGAke3Nob3dQcnRPbkNsaWNrW2kgKyAxXX06ICR7cnRyZWVTZWFyY2hSZXN1bHQucHJvcGVydGllc1tzaG93UHJ0T25DbGlja1tpXV19YDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXMgKz0gYFxcbiR7c2hvd1BydE9uQ2xpY2tbaSArIDFdfTogJHtydHJlZVNlYXJjaFJlc3VsdC5wcm9wZXJ0aWVzW3Nob3dQcnRPbkNsaWNrW2ldXX1gO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQga2V5cyA9IE9iamVjdC5rZXlzKHJ0cmVlU2VhcmNoUmVzdWx0LnByb3BlcnRpZXMpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBbaSwga2V5XSBvZiBrZXlzLmVudHJpZXMoKSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChrZXkgIT09IFwiX2dpc3BsYXlpZFwiKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGkgPT0gMCA/IHJlcyArPSBgJHtrZXl9OiAke3J0cmVlU2VhcmNoUmVzdWx0LnByb3BlcnRpZXNba2V5XX1gIDogcmVzICs9IGBcXG4ke2tleX06ICR7cnRyZWVTZWFyY2hSZXN1bHQucHJvcGVydGllc1trZXldfWA7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5naXNwbGF5T3B0aW9ucy5pbnRlcmFjdGl2ZSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQocmVzKTsvL3RvZG9cclxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5naXNwbGF5T3B0aW9ucy5tYXBPbkNsaWNrRnVuY3Rpb24gIT09IHVuZGVmaW5lZClcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5naXNwbGF5T3B0aW9ucy5tYXBPbkNsaWNrRnVuY3Rpb24ocnRyZWVTZWFyY2hSZXN1bHQpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvKipcclxuICAgICAgICAgICAgICogV2hlbiBkZWFsaW5nIHdpdGggcG9pbnRzIGtkdHJlZSB3aWxsIGJlIHVzZWQuXHJcbiAgICAgICAgICAgICAqIEBzZWUgRGlvZ28ncyB0aGVzaXMgcGFnZSA2MlxyXG4gICAgICAgICAgICAgKi9cclxuICAgICAgICAgICAgaWYgKHRoaXMua2R0cmVlICE9PSB1bmRlZmluZWQpIHtcclxuXHJcbiAgICAgICAgICAgICAgICBjb25zdCBuZWFyZXN0ID0gdGhpcy5rZHRyZWUubmVhcmVzdCh7IGxhdCwgbG9uIH0sIDEsIDEyOCAvICgoMiAqKiAodGhpcy5iR01hcC5nZXRab29tKCkgKiAyKSkpKTtcclxuICAgICAgICAgICAgICAgIGlmIChuZWFyZXN0Lmxlbmd0aCA8PSAwKVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBrZFRyZWVTZWFyY2hSZXN1bHQgPSBuZWFyZXN0WzBdWzBdO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCByZXMgPSBcIlwiO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBzaG93UHJ0T25DbGljayA9IHRoaXMuZ2lzcGxheU9wdGlvbnMuc2hvd1Byb3BlcnRpZXNPbkNsaWNrO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChzaG93UHJ0T25DbGljayAhPT0gbnVsbCkgeyAvL1RPRE86IFJlbW92ZSBpZiBkZW50cm8gZG8gZm9yIGUgcGFzc2FyIGEgY29tZcOnYXIgbm8gaT0xIGUgcGFzc2FyIG8gaWYgcGFyYSBhbnRlcyBkbyBmb3JcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaG93UHJ0T25DbGljay5sZW5ndGg7IGkgKz0gMikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGkgPT09IDApXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzICs9IGAke3Nob3dQcnRPbkNsaWNrW2kgKyAxXX06ICR7a2RUcmVlU2VhcmNoUmVzdWx0LnByb3BlcnRpZXNbc2hvd1BydE9uQ2xpY2tbaV1dfWA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzICs9IGBcXG4ke3Nob3dQcnRPbkNsaWNrW2kgKyAxXX06ICR7a2RUcmVlU2VhcmNoUmVzdWx0LnByb3BlcnRpZXNbc2hvd1BydE9uQ2xpY2tbaV1dfWA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBrZXlzID0gT2JqZWN0LmtleXMoa2RUcmVlU2VhcmNoUmVzdWx0LnByb3BlcnRpZXMpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBbaSwga2V5XSBvZiBrZXlzLmVudHJpZXMoKSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChrZXkgIT09IFwiX2dpc3BsYXlpZFwiKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGkgPT0gMCA/IHJlcyArPSBgJHtrZXl9OiAke2tkVHJlZVNlYXJjaFJlc3VsdC5wcm9wZXJ0aWVzW2tleV19YCA6IHJlcyArPSBgXFxuJHtrZXl9OiAke2tkVHJlZVNlYXJjaFJlc3VsdC5wcm9wZXJ0aWVzW2tleV19YDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmdpc3BsYXlPcHRpb25zLmludGVyYWN0aXZlKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBhbGVydChyZXMpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmdpc3BsYXlPcHRpb25zLm1hcE9uQ2xpY2tGdW5jdGlvbiAhPT0gdW5kZWZpbmVkKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdpc3BsYXlPcHRpb25zLm1hcE9uQ2xpY2tGdW5jdGlvbihrZFRyZWVTZWFyY2hSZXN1bHQpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyAgIE1FVEhPRCBmcm9tIEdpc3BsYXkuanMgICAgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjICovXHJcbiAgICAvKipcclxuICAgICAqIE04KSBNZXRob2QgdGhhdCBleGVjdXRlcyBhbGwgdGhlIHByb2Nlc3MgYXNzb2NpYXRlZCB3aXRoIHRoZSBjcmVhdGlvbiBvZiB0aGUgdGhlbWF0aWMgbWFwLlxyXG4gICAgICogQG1lbWJlck9mIE1hcFxyXG4gICAgICovXHJcbiAgICBtYWtlTWFwKCkge1xyXG4gICAgICAgIGxldCBvcHRzID0gdGhpcy5naXNwbGF5T3B0aW9ucztcclxuICAgICAgICBzZXRUaW1lb3V0KGNvbnNvbGUgPT4ge1xyXG4gICAgICAgICAgICBpZiAob3B0cy5jb2xvclNjaGVtZSA9PT0gdW5kZWZpbmVkKVxyXG4gICAgICAgICAgICAgICAgb3B0cy5jb2xvclNjaGVtZSA9IHRoaXMuZGVmYXVsdHMob3B0cy5jb2xvclNjaGVtZUlkKS5jb2xvclNjaGVtZTtcclxuICAgICAgICAgICAgaWYgKG9wdHMuY2xhc3NCcmVha3MgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKG9wdHMubnVtYmVyT2ZDbGFzc2VzID09PSB1bmRlZmluZWQpXHJcbiAgICAgICAgICAgICAgICAgICAgb3B0cy5udW1iZXJPZkNsYXNzZXMgPSB0aGlzLmRlZmF1bHRzKG9wdHMuY29sb3JTY2hlbWVJZCkubnVtYmVyT2ZDbGFzc2VzO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wcmVQcm9jZXNzRGF0YSh0aGlzLmdlb21ldHJ5LCBvcHRzLm51bWJlck9mQ2xhc3Nlcywgb3B0cy5jbGFzc0JyZWFrc01ldGhvZCwgb3B0cy5jb2xvclNjaGVtZSk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHRoaXMubG9hZEdlb0pTT04odGhpcy5nZW9tZXRyeSk7XHJcbiAgICAgICAgICAgIHRoaXMuZHJhdygpO1xyXG5cclxuICAgICAgICAgICAgaWYgKG9wdHMuc2hvd0xlZ2VuZClcclxuICAgICAgICAgICAgICAgIHRoaXMuYnVpbGRMZWdlbmQoKTtcclxuICAgICAgICAgICAgaWYgKG9wdHMuc2hvd0xvYWRlcikgLy9AVE9ETzogQ2hhbmdlIHRoaXMgaWYgdG8gYmUgdGhlIDFzdCB0aGluZyBkb25lIGluc2lkZSB0aGUgc2V0VGltZW91dFxyXG4gICAgICAgICAgICAgICAgdGhpcy5zaG93TG9hZGVyKCk7XHJcbiAgICAgICAgfSwgMSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBNOSkgQ3JlYXRlcyBBZXN0aGV0aWMgb2JqZWN0cy4gSWYgdGhlcmUncyB0aGUgbmVlZCB0byBjYWxjdWxhdGUgdGhlIGNsYXNzIGludGVydmFscyxcclxuICAgICAqIHRoZSBtZXRob2QgY2FsY0NsYXNzQnJlYWtzIGlzIGNhbGxlZCBcclxuICAgICAqIEBwYXJhbSB7SlNPTn0gZ2VvanNvbiAtIEdlb0pTT04gb2JqZWN0LlxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IG51bWJlck9mQ2xhc3NlcyAtIE51bWJlciBvZiBjbGFzc2VzIHRoYXQgdGhlIExlZ2VuZCB3aWxsIGNvbnRhaW4uXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NCcmVha3NNZXRob2QgLSBBbGdvcml0aG0gdG8gYmUgdXNlZCB0byBjYWxjdWxhdGUgY2xhc3MgYnJlYWtzLiBPbmx5IHVzZWQgaXQgY2xhc3MgYnJlYWtzIGFyZSBub3QgZ2l2ZW4gYnkgdGhlIHVzZXIuXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBjb2xvcnNjaGVtZSAtIENvbG9yIHNjaGVtZSB0byBiZSB1c2VkIGJ5IHRoaXMgbWFwLlxyXG4gICAgICogXHJcbiAgICAgKiBAbWVtYmVyT2YgTWFwXHJcbiAgICAgKi9cclxuICAgIHByZVByb2Nlc3NEYXRhKGdlb2pzb24sIG51bWJlck9mQ2xhc3NlcywgY2xhc3NCcmVha3NNZXRob2QsIGNvbG9yc2NoZW1lKSB7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQHR5cGUge0FycmF5PEFlc3RoZXRpYz59XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgY29uc3QgYWVzYXJyYXkgPSBbXTsgLy9BcnJheSBvZiBhZXN0aGV0aWMgb2JqZWN0cyBsb2FkZWQgZnJvbSB0aGUgZmlsZVxyXG4gICAgICAgIGNvbnN0IG51bWJlclZhbHVlcyA9IFtdOyAvL1RoZSBhdHRyIGlzIGEgbnVtYmVyXHJcbiAgICAgICAgY29uc3Qgc3RyaW5nVmFsdWVzID0gW107IC8vVGhlIGF0dHIgaXMgYSBzdHJpbmdcclxuICAgICAgICBsZXQgY2xhc3NCcmVha3M7IC8vQ2xhc3MgQnJlYWtzIGdpdmVuIGJ5IHRoZSB1c2VyIG9yIGNhbGN1bGF0ZWQgYnkgdGhlIEFQSVxyXG4gICAgICAgIGxldCBmY29sb3I7IC8vQ29sb3JzIHRvIGJlIHVzZWRcclxuICAgICAgICBsZXQgb3B0cyA9IHRoaXMuZ2lzcGxheU9wdGlvbnM7IC8vT3B0aW9ucyBnaXZlbiBieSB0aGUgdXNlciBhbmQgZGVmYXVsdHNcclxuXHJcbiAgICAgICAgbGV0IGdlb0pzb25GZWF0dXJlc0xlbmd0aCA9IGdlb2pzb24uZmVhdHVyZXMubGVuZ3RoO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZ2VvSnNvbkZlYXR1cmVzTGVuZ3RoICYmIChpIDwgb3B0cy5tYXhGZWF0dXJlcyk7IGkrKykgeyAvL0BUT0RPPzogVHdvIGZvcnMgb25lIGlmIGF0dHIgaXMgYSBzdHJpbmcgYW5vdGhlciBpZiBpdCBhIG51bWJlclxyXG4gICAgICAgICAgICBsZXQgYXR0clZhbHVlID0gZ2VvanNvbi5mZWF0dXJlc1tpXS5wcm9wZXJ0aWVzW29wdHMuYXR0cl07XHJcbiAgICAgICAgICAgIGlmIChhdHRyVmFsdWUgIT09IG51bGwgJiYgdHlwZW9mIGF0dHJWYWx1ZSA9PT0gJ251bWJlcicpIHsgLy9JZiBcImYzXCIgZXhpc3RzIGFuZCBpdHMgYSBudW1iZXJcclxuICAgICAgICAgICAgICAgIG51bWJlclZhbHVlcy5wdXNoKGF0dHJWYWx1ZSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm1heCA9IE1hdGgubWF4KHRoaXMubWF4LCBhdHRyVmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5taW4gPSBNYXRoLm1pbih0aGlzLm1pbiwgYXR0clZhbHVlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmICghc3RyaW5nVmFsdWVzLmluY2x1ZGVzKGF0dHJWYWx1ZSkpIC8vSWYgaXRzIGEgc3RyaW5nXHJcbiAgICAgICAgICAgICAgICBzdHJpbmdWYWx1ZXMucHVzaChnZW9qc29uLmZlYXR1cmVzW2ldLnByb3BlcnRpZXNbb3B0cy5hdHRyXSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAobnVtYmVyVmFsdWVzLmxlbmd0aCA+IDApIHsgLy9RdWFudGl0YXRpdmVcclxuICAgICAgICAgICAgaWYgKG9wdHMuY2xhc3NCcmVha3MgPT09IHVuZGVmaW5lZCkgeyAvL05vdCBnaXZlbiBieSB0aGUgdXNlciB0aGVuIGNhbGN1bGF0ZSB0aGVtXHJcbiAgICAgICAgICAgICAgICBpZiAobnVtYmVyT2ZDbGFzc2VzID4gMSlcclxuICAgICAgICAgICAgICAgICAgICBjbGFzc0JyZWFrcyA9IHRoaXMuY2FsY0NsYXNzQnJlYWtzKG51bWJlclZhbHVlcywgY2xhc3NCcmVha3NNZXRob2QsIG51bWJlck9mQ2xhc3Nlcyk7XHJcbiAgICAgICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NCcmVha3MgPSBbdGhpcy5taW4sIHRoaXMubWF4XTsgLy9DaGFuZ2UgTWFwXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSAvL0dpdmVuIGJ5IHRoZSB1c2VyXHJcbiAgICAgICAgICAgICAgICBjbGFzc0JyZWFrcyA9IG9wdHMuY2xhc3NCcmVha3M7XHJcblxyXG4gICAgICAgICAgICBpZiAoY2xhc3NCcmVha3MubGVuZ3RoID4gMikge1xyXG4gICAgICAgICAgICAgICAgZmNvbG9yID0gY2hyb21hLnNjYWxlKGNvbG9yc2NoZW1lKS5jb2xvcnMoY2xhc3NCcmVha3MubGVuZ3RoIC0gMSk7XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNsYXNzQnJlYWtzLmxlbmd0aCAtIDE7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBbciwgZywgYl0gPSBjaHJvbWEoZmNvbG9yW2ldKS5yZ2IoKTsgLy8gbGV0IGNvbG9yID0gY2hyb21hKGZjb2xvcltpXSkucmdiKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGFlcztcclxuICAgICAgICAgICAgICAgICAgICBpZiAoaSAhPT0gY2xhc3NCcmVha3MubGVuZ3RoIC0gMilcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWVzID0gbmV3IEFlc3RoZXRpYyhpLCBvcHRzLmF0dHIsIFtNYXRoLnJvdW5kKHIpLCBNYXRoLnJvdW5kKGcpLCBNYXRoLnJvdW5kKGIpLCBvcHRzLmFscGhhXSwgWzAsIDAsIDAsIDFdLCBudWxsLCBbY2xhc3NCcmVha3NbaV0sIGNsYXNzQnJlYWtzW2kgKyAxXV0pO1xyXG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhZXMgPSBuZXcgQWVzdGhldGljKGksIG9wdHMuYXR0ciwgW01hdGgucm91bmQociksIE1hdGgucm91bmQoZyksIE1hdGgucm91bmQoYiksIG9wdHMuYWxwaGFdLCBbMCwgMCwgMCwgMV0sIG51bGwsIFtjbGFzc0JyZWFrc1tpXSwgY2xhc3NCcmVha3NbaSArIDFdXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFlcy5vdXRlciA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGFlc2FycmF5LnB1c2goYWVzKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGxldCBbciwgZywgYl0gPSBjaHJvbWEoY29sb3JzY2hlbWVbMF0pLnJnYigpOy8vIGxldCBjb2xvciA9IGNocm9tYShjb2xvcnNjaGVtZVswXSkucmdiKCk7XHJcbiAgICAgICAgICAgICAgICBsZXQgYWVzID0gbmV3IEFlc3RoZXRpYygwLCBvcHRzLmF0dHIsIFtNYXRoLnJvdW5kKHIpLCBNYXRoLnJvdW5kKGcpLCBNYXRoLnJvdW5kKGIpLCBvcHRzLmFscGhhXSwgWzAsIDAsIDAsIDFdLCBudWxsLCBbY2xhc3NCcmVha3NbMF0sIGNsYXNzQnJlYWtzWzFdXSk7XHJcbiAgICAgICAgICAgICAgICBhZXMub3V0ZXIgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgYWVzYXJyYXkucHVzaChhZXMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgeyAvL1F1YWxpdGF0aXZlXHJcbiAgICAgICAgICAgIGlmIChzdHJpbmdWYWx1ZXMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgY2xhc3NCcmVha3MgPSBzdHJpbmdWYWx1ZXM7XHJcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGNvbG9yc2NoZW1lID09PSAnc3RyaW5nJykgLy9zdHJpbmdcclxuICAgICAgICAgICAgICAgICAgICBmY29sb3IgPSBjaHJvbWEuc2NhbGUoY29sb3JzY2hlbWUpLmNvbG9ycyhjbGFzc0JyZWFrcy5sZW5ndGgpO1xyXG4gICAgICAgICAgICAgICAgZWxzZSAgLy9hcnJheVxyXG4gICAgICAgICAgICAgICAgICAgIGZjb2xvciA9IGNocm9tYS5zY2FsZShjb2xvcnNjaGVtZSkuY29sb3JzKGNsYXNzQnJlYWtzLmxlbmd0aCk7XHJcblxyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjbGFzc0JyZWFrcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBbciwgZywgYl0gPSBjaHJvbWEoZmNvbG9yW2ldKS5yZ2IoKTsvLyBsZXQgY29sb3IgPSBjaHJvbWEoZmNvbG9yW2ldKS5yZ2IoKTtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgYWVzID0gbmV3IEFlc3RoZXRpYyhpLCBvcHRzLmF0dHIsIFtNYXRoLnJvdW5kKHIpLCBNYXRoLnJvdW5kKGcpLCBNYXRoLnJvdW5kKGIpLCAxXSwgWzAsIDAsIDAsIDFdLCBudWxsLCBbc3RyaW5nVmFsdWVzW2ldXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgYWVzYXJyYXkucHVzaChhZXMpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBBbGwgdGhlIEFlc3RoZXRpY3MgdGhhdCB3ZXJlIHJlYWQgZnJvbSB0aGUgR2VvSlNPTiBmaWxlLlxyXG4gICAgICAgICAqIEB0eXBlIHtBcnJheTxBZXN0aGV0aWM+fVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuYWVzdGhldGljcyA9IGFlc2FycmF5O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogTTEwKSBDYWxjdWxhdGVzIHRoZSBjbGFzcyBicmVha3MgdXNpbmcgdGhlIGFsZ29yaXRobSBnaXZlbihrLW1lYW5zLCBxdWFudGlsZSBvciBlcXVpZGlzdGFudCkuIFxyXG4gICAgICogVGhlcmUgd2lsbCBiZSBhcyBtYW55IGNsYXNzIGJyZWFrcyBhcyBudW1iZXIgb2YgY2xhc3NlcyhudW1iZXJPZkNsYXNzZXMpIGdpdmVuIGFzIGlucHV0LiBcclxuICAgICAqIEBwYXJhbSB7bnVtYmVyW119IG51bWJlclZhbHVlcyAtIFRoZSBkYXRhIHZhbHVlcyB0aGF0IHdpbGwgYmUgdXNlZCB0byBiZSBjb21wdXRlIHRoZSBicmVha3MuIFxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGNsYXNzQnJlYWtNZXRob2QgLSBUaGUgYWxnb3JpdGhtIHRvIHVzZSB0byBjYWxjdWxhdGUgdGhlIGNsYXNzIGJyZWFrcy5cclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBudW1iZXJPZkNsYXNzZXMgLSBOdW1iZXIgb2YgY2xhc3NlcyB0aGUgcmVzdWx0IGV4cGVjdHMuXHJcbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyW119IC0gVGhlIGNsYXNzIGJyZWFrcyByZXN1bHRpbmcgZnJvbSB0aGUgdXNlIG9mIHRoZSBnaXZlbiBhbGdvcml0aG0gYW5kIHRoZSBudW1iZXIgb2YgY2xhc3Nlcy5cclxuICAgICAqIEBzZWUgaHR0cDovL2drYS5naXRodWIuaW8vY2hyb21hLmpzLyNjaHJvbWEtbGltaXRzXHJcbiAgICAgKiBAbWVtYmVyT2YgTWFwXHJcbiAgICAgKi9cclxuICAgIGNhbGNDbGFzc0JyZWFrcyhudW1iZXJWYWx1ZXMsIGNsYXNzQnJlYWtNZXRob2QsIG51bWJlck9mQ2xhc3Nlcykge1xyXG4gICAgICAgIGxldCBjbGFzc0JyZWFrcztcclxuICAgICAgICBzd2l0Y2ggKGNsYXNzQnJlYWtNZXRob2QpIHtcclxuICAgICAgICAgICAgY2FzZSAnZXF1aWRpc3RhbnQnOlxyXG4gICAgICAgICAgICAgICAgY2xhc3NCcmVha3MgPSBjaHJvbWEubGltaXRzKG51bWJlclZhbHVlcywgJ2UnLCBudW1iZXJPZkNsYXNzZXMpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICBjYXNlICdxdWFudGlsZSc6XHJcbiAgICAgICAgICAgICAgICBjbGFzc0JyZWFrcyA9IGNocm9tYS5saW1pdHMobnVtYmVyVmFsdWVzLCAncScsIG51bWJlck9mQ2xhc3Nlcyk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICAgIGNhc2UgJ2stbWVhbnMnOlxyXG4gICAgICAgICAgICAgICAgY2xhc3NCcmVha3MgPSBjaHJvbWEubGltaXRzKG51bWJlclZhbHVlcywgJ2snLCBudW1iZXJPZkNsYXNzZXMpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgY2xhc3NCcmVha3MgPSBjaHJvbWEubGltaXRzKG51bWJlclZhbHVlcywgJ3EnLCBudW1iZXJPZkNsYXNzZXMpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBjbGFzc0JyZWFrcztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIE0xMSkgTG9hZHMgR2VvSlNPTiBvYmplY3QgdGhhdCBjYW1lIGZyb20gdGhlIGZpbGUgdXBsb2FkZWQgYnkgdGhlIHVzZXIuIFxyXG4gICAgICogRXh0cmFjdHMgdGhlIEZlYXR1cmVzIHByZXNlbnQgaW4gdGhlIGdlb21ldHJ5IG9iamVjdCBhbmQgaW5zZXJ0cyB0aGVtIGluIEFlc3RoZXRpYyBvYmplY3QocylcclxuICAgICAqIFRoaXMgbWV0aG9kIHdpbGwgY3JlYXRlIGFuZCBpbnNlcnQgZmVhdHVyZXMgdG8gQWVzdGhldGljIG9iamVjdHMgYW5kIGJ1aWxkIHRyZWVzIG9mIHJlbGF0aW9uc2hpcHMgYmV0d2VlbiBwb2ludHMgb3IgcG9seWdvbnMuXHJcbiAgICAgKiBAcGFyYW0ge0pTT059IGdlb2pzb24gLSBHZW9KU09OIHJlYWQgZnJvbSB0aGUgZmlsZS5cclxuICAgICAqIEBzZWUgaHR0cHM6Ly93d3cuZGFzaGluZ2QzanMuY29tL2xlc3NvbnMvZ2VvanNvblxyXG4gICAgICogQG1lbWJlck9mIE1hcFxyXG4gICAgICovXHJcbiAgICBsb2FkR2VvSlNPTihnZW9qc29uKSB7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBnZW9qc29uLmZlYXR1cmVzLmxlbmd0aCAmJiAodGhpcy5naXNwbGF5T3B0aW9ucy5tYXhGZWF0dXJlcyA9PT0gdW5kZWZpbmVkIHx8IGkgPCB0aGlzLmdpc3BsYXlPcHRpb25zLm1heEZlYXR1cmVzKTsgaSsrKSB7XHJcbiAgICAgICAgICAgIGdlb2pzb24uZmVhdHVyZXNbaV0ucHJvcGVydGllc1snX2dpc3BsYXlpZCddID0gaTtcclxuICAgICAgICAgICAgY29uc3QgZ2VvbWV0cnkgPSBnZW9qc29uLmZlYXR1cmVzW2ldLmdlb21ldHJ5O1xyXG4gICAgICAgICAgICBjb25zdCBwcm9wZXJ0aWVzID0gZ2VvanNvbi5mZWF0dXJlc1tpXS5wcm9wZXJ0aWVzO1xyXG4gICAgICAgICAgICB0aGlzLmNyZWF0ZUFuZEluc2VydEZlYXR1cmUoaSwgZ2VvbWV0cnksIHByb3BlcnRpZXMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmJ1aWxkVHJlZXMoZ2VvanNvbik7IC8vQFRPRE86IE9ubHkgY2FsbCB0aGlzIG1ldGhvZCBpZiBpdCdzIGEgbG93IGVuZCBkZXZpY2UgYWthIG9wdGlvbnMubWVtb3J5U2F2ZXIgaXMgb25cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIE0xMikgQ3JlYXRlcyBhIEZlYXR1cmUgYW5kIHRoZW4gY2FsbHMgYSBtZXRob2QgdG8gaW5zZXJ0IHNhaWQgRmVhdHVyZSBpbiBvbmUgb3IgbW9yZSBBZXN0aGV0aWMgb2JqZWN0cy5cclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBmZWF0dXJlSWQgLSBJZCBvZiB0aGUgRmVhdHVyZS5cclxuICAgICAqIEBwYXJhbSB7SlNPTn0gZ2VvbWV0cnkgLSBHZW9KU09OIEdlb21ldHJ5IE9iamVjdC4gXHJcbiAgICAgKiBAcGFyYW0ge0pTT059IHByb3BlcnRpZXMgLSBHZW9KU09OIHByb3BlcnRpZXMgT2JqZWN0LlxyXG4gICAgICogQHNlZSBodHRwOi8vZ2VvanNvbi5vcmcvZ2VvanNvbi1zcGVjLmh0bWwjZ2VvbWV0cnktb2JqZWN0c1xyXG4gICAgICogQG1lbWJlck9mIE1hcFxyXG4gICAgICovXHJcbiAgICBjcmVhdGVBbmRJbnNlcnRGZWF0dXJlKGZlYXR1cmVJZCwgZ2VvbWV0cnksIHByb3BlcnRpZXMpIHtcclxuICAgICAgICBjb25zdCBnbCA9IHRoaXMuX3dlYmdsLmdsO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEB0eXBlIHtHaXNwbGF5T3B0aW9uc31cclxuICAgICAgICAgKi9cclxuICAgICAgICBsZXQgb3B0cyA9IHRoaXMuZ2lzcGxheU9wdGlvbnM7XHJcbiAgICAgICAgaWYgKG9wdHMubWludWVuZCAhPT0gdW5kZWZpbmVkICYmIG9wdHMuc3VidHJhaGVuZCAhPT0gdW5kZWZpbmVkXHJcbiAgICAgICAgICAgICYmIHR5cGVvZiBwcm9wZXJ0aWVzW29wdHMubWludWVuZF0gPT09ICdudW1iZXInICYmIHR5cGVvZiBwcm9wZXJ0aWVzW29wdHMuc3VidHJhaGVuZF0gPT09ICdudW1iZXInXHJcbiAgICAgICAgICAgICYmIHByb3BlcnRpZXNbb3B0cy5taW51ZW5kXSAhPT0gdW5kZWZpbmVkICYmIHByb3BlcnRpZXNbb3B0cy5zdWJ0cmFoZW5kXSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIHByb3BlcnRpZXNbb3B0cy5hdHRyXSA9IHByb3BlcnRpZXNbb3B0cy5taW51ZW5kXSAtIHByb3BlcnRpZXNbb3B0cy5zdWJ0cmFoZW5kXTsgLy9Vc2VkIGZvciBDaGFuZ2UgbWFwXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvL2xldCBpc1BvaW50ID0gZ2VvbWV0cnkudHlwZSA9PSBcIlBvaW50XCI7XHJcbiAgICAgICAgaWYgKGdlb21ldHJ5LnR5cGUgPT09IFwiUG9seWdvblwiIHx8IGdlb21ldHJ5LnR5cGUgPT09IFwiTXVsdGlQb2x5Z29uXCIpIHtcclxuICAgICAgICAgICAgdGhpcy5oYXNQb2x5Z29ucyA9IHRydWU7XHJcbiAgICAgICAgICAgIGNvbnN0IHBvbHlnb25zID0gdGhpcy5wcm9jZXNzUG9seWdvbih7IGdlb21ldHJ5LCBwcm9wZXJ0aWVzIH0pO1xyXG5cclxuICAgICAgICAgICAgY29uc3QgY3VycmVudFRyaWFuZ2xlcyA9IFtdOyAvL1BvbHlnb24gVHJpYW5nbGVzIHZlcnRpY2VzXHJcbiAgICAgICAgICAgIGNvbnN0IGJ1ZmZlclQgPSBbXTsgLy9XZWJHTCBCdWZmZXJzIHdpdGggIHRyaWFuZ2xlc1xyXG4gICAgICAgICAgICBjb25zdCBjdXJyZW50Qm9yZGVycyA9IFtdOyAvL1BvbHlnb24gQm9yZGVycyB2ZXJ0aWNlc1xyXG4gICAgICAgICAgICBjb25zdCBidWZmZXJCID0gW107IC8vQnVmZmVyIGJvcmRlcnNcclxuXHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcG9seWdvbnMubGVuZ3RoOyBpKyspIHsgLy9Gb3IgZWFjaCBQb2x5Z29uXHJcbiAgICAgICAgICAgICAgICBjb25zdCB0cmlhbmdsZXNQb2x5Z29uID0gcG9seWdvbnNbaV0udHJpYW5nbGVzO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgYm9yZGVyID0gcG9seWdvbnNbaV0udmVydGljZXM7XHJcbiAgICAgICAgICAgICAgICBjdXJyZW50VHJpYW5nbGVzW2ldID0gbmV3IEFycmF5KCk7IC8vQWRkIFRoaXMgUG9seWdvbiB0cmlhbmdsZXNcclxuICAgICAgICAgICAgICAgIGN1cnJlbnRCb3JkZXJzW2ldID0gbmV3IEFycmF5KCk7IC8vQWRkIHRoaXMgUG9seWdvbiBib3JkZXJzXHJcblxyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCB0cmlhbmdsZXNQb2x5Z29uLmxlbmd0aDsgaisrKSB7IC8vVHJpYW5nbGVzXHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHBpeGVsID0gdGhpcy5sYXRMb25nVG9QaXhlbFhZKGJvcmRlclt0cmlhbmdsZXNQb2x5Z29uW2pdICogMl0sIGJvcmRlclt0cmlhbmdsZXNQb2x5Z29uW2pdICogMiArIDFdKTtcclxuICAgICAgICAgICAgICAgICAgICBjdXJyZW50VHJpYW5nbGVzW2ldLnB1c2gocGl4ZWwueCwgcGl4ZWwueSk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChqID09PSB0cmlhbmdsZXNQb2x5Z29uLmxlbmd0aCAtIDEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnVmZmVyVC5wdXNoKGdsLmNyZWF0ZUJ1ZmZlcigpKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCB2ZXJ0QXJyYXkgPSBuZXcgRmxvYXQzMkFycmF5KGN1cnJlbnRUcmlhbmdsZXNbaV0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBnbC5mc2l6ZSA9IHZlcnRBcnJheS5CWVRFU19QRVJfRUxFTUVOVDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZ2wuYmluZEJ1ZmZlcihnbC5BUlJBWV9CVUZGRVIsIGJ1ZmZlclRbaV0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBnbC5idWZmZXJEYXRhKGdsLkFSUkFZX0JVRkZFUiwgdmVydEFycmF5LCBnbC5TVEFUSUNfRFJBVyk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBidWZmZXJUW2ldLml0ZW1TaXplID0gMjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnVmZmVyVFtpXS5udW1JdGVtcyA9IHZlcnRBcnJheS5sZW5ndGggLyAyO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBrID0gMDsgayA8IGJvcmRlci5sZW5ndGg7IGsgKz0gMikgeyAvL0JvcmRlcnNcclxuICAgICAgICAgICAgICAgICAgICBsZXQgcGl4ZWwgPSB0aGlzLmxhdExvbmdUb1BpeGVsWFkoYm9yZGVyW2tdLCBib3JkZXJbayArIDFdKTtcclxuICAgICAgICAgICAgICAgICAgICBjdXJyZW50Qm9yZGVyc1tpXS5wdXNoKHBpeGVsLngsIHBpeGVsLnkpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBpZiAoayA9PT0gYm9yZGVyLmxlbmd0aCAtIDIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnVmZmVyQi5wdXNoKGdsLmNyZWF0ZUJ1ZmZlcigpKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCB2ZXJ0QXJyYXkgPSBuZXcgRmxvYXQzMkFycmF5KGN1cnJlbnRCb3JkZXJzW2ldKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZ2wuZnNpemUgPSB2ZXJ0QXJyYXkuQllURVNfUEVSX0VMRU1FTlQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGdsLmJpbmRCdWZmZXIoZ2wuQVJSQVlfQlVGRkVSLCBidWZmZXJCW2ldKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZ2wuYnVmZmVyRGF0YShnbC5BUlJBWV9CVUZGRVIsIHZlcnRBcnJheSwgZ2wuU1RBVElDX0RSQVcpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgYnVmZmVyQltpXS5pdGVtU2l6ZSA9IDI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJ1ZmZlckJbaV0ubnVtSXRlbXMgPSB2ZXJ0QXJyYXkubGVuZ3RoIC8gMjtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5pbnNlcnRGZWF0dXJlKGZlYXR1cmVJZCwgcHJvcGVydGllcywgYnVmZmVyVCwgYnVmZmVyQiwgW10pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZWxzZSBpZiAoZ2VvbWV0cnkudHlwZSA9PT0gXCJQb2ludFwiICYmIG9wdHMuaXNEeW5hbWljKSB7Ly9kdW1cclxuICAgICAgICAgICAgY29uc3QgY3VycmVudFBvaW50cyA9IG5ldyBBcnJheSgpOyAvL2N1cnJlbnRQb2ludHNbMF0gPSBuZXcgQXJyYXkoKTtcclxuICAgICAgICAgICAgbGV0IHBpeGVsID0gdGhpcy5sYXRMb25nVG9QaXhlbFhZKGdlb21ldHJ5LmNvb3JkaW5hdGVzWzBdLCBnZW9tZXRyeS5jb29yZGluYXRlc1sxXSk7XHJcbiAgICAgICAgICAgIGN1cnJlbnRQb2ludHMucHVzaChwaXhlbC54LCBwaXhlbC55KTtcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IGJ1ZmZlclBvaW50cyA9IFtdOy8vQnVmZmVyIHBvaW50c1xyXG4gICAgICAgICAgICBsZXQgdmVydEFycmF5ID0gbmV3IEZsb2F0MzJBcnJheShjdXJyZW50UG9pbnRzKTtcclxuXHJcbiAgICAgICAgICAgIGJ1ZmZlclBvaW50cy5wdXNoKGdsLmNyZWF0ZUJ1ZmZlcigpKTtcclxuICAgICAgICAgICAgZ2wuZnNpemUgPSB2ZXJ0QXJyYXkuQllURVNfUEVSX0VMRU1FTlQ7XHJcbiAgICAgICAgICAgIGdsLmJpbmRCdWZmZXIoZ2wuQVJSQVlfQlVGRkVSLCBidWZmZXJQb2ludHNbMF0pO1xyXG4gICAgICAgICAgICBnbC5idWZmZXJEYXRhKGdsLkFSUkFZX0JVRkZFUiwgdmVydEFycmF5LCBnbC5TVEFUSUNfRFJBVyk7XHJcblxyXG4gICAgICAgICAgICBidWZmZXJQb2ludHNbMF0uaXRlbVNpemUgPSAyO1xyXG4gICAgICAgICAgICBidWZmZXJQb2ludHNbMF0ubnVtSXRlbXMgPSB2ZXJ0QXJyYXkubGVuZ3RoIC8gMjtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuaW5zZXJ0RmVhdHVyZShmZWF0dXJlSWQsIHByb3BlcnRpZXMsIFtdLCBbXSwgYnVmZmVyUG9pbnRzKTtcclxuICAgICAgICAgICAgdGhpcy50cmVlcG9pbnRzLnB1c2goeyBsb246IGdlb21ldHJ5LmNvb3JkaW5hdGVzWzBdLCBsYXQ6IGdlb21ldHJ5LmNvb3JkaW5hdGVzWzFdLCBwcm9wZXJ0aWVzIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZWxzZSBpZiAoZ2VvbWV0cnkudHlwZSA9PT0gXCJQb2ludFwiICYmICFvcHRzLmlzRHluYW1pYykge1xyXG4gICAgICAgICAgICBsZXQgcGl4ZWwgPSB0aGlzLmxhdExvbmdUb1BpeGVsWFkoZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMF0sIGdlb21ldHJ5LmNvb3JkaW5hdGVzWzFdKTtcclxuICAgICAgICAgICAgaWYgKHRoaXMudGVtcEFlc3RoZXRpY1BvaW50cy5sZW5ndGggPT09IDApXHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuYWVzdGhldGljcy5sZW5ndGg7IGkrKylcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnRlbXBBZXN0aGV0aWNQb2ludHNbaV0gPSBbXTtcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IGFlc1Bvc2l0aW9ucyA9IHRoaXMuZml0RmVhdHVyZShwcm9wZXJ0aWVzKTtcclxuICAgICAgICAgICAgZm9yIChjb25zdCBhZXNQb3Mgb2YgYWVzUG9zaXRpb25zKVxyXG4gICAgICAgICAgICAgICAgdGhpcy50ZW1wQWVzdGhldGljUG9pbnRzW2Flc1Bvc10ucHVzaChwaXhlbC54LCBwaXhlbC55KTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMudHJlZXBvaW50cy5wdXNoKHsgbG9uOiBnZW9tZXRyeS5jb29yZGluYXRlc1swXSwgbGF0OiBnZW9tZXRyeS5jb29yZGluYXRlc1sxXSwgcHJvcGVydGllcyB9KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBNMTMpIERlYWxzIHdpdGggcG9seWdvbiB0cmlhbmd1bGF0aW9uLlxyXG4gICAgICogQHBhcmFtIHt7Z2VvbWV0cnk6IEpTT04sIHByb3BlcnRpZXM6IEpTT059fSBwb2x5Z29uIC0gVGhlIGdlb21ldHJ5IGFuZCBwcm9wZXJ0aWVzIG9mIHRoZSBwb2x5Z29uLlxyXG4gICAgICogQHJldHVybnMge3t0cmlhbmdsZXM6IEFycmF5PG51bWJlcj4sIHZlcnRpY2VzOiBBcnJheTxudW1iZXI+fX0gLSBUaGUgdHJpYW5nbGVzIGFuZCB2ZXJ0aWNlcyBjYWxjdWxhdGVkIGJ5IGVhcmN1dCB0cmlhbmd1bGF0aW9uLiBUaGUgdmVydGljZXMgYXJlIHRoZSBvdXRzaWRlIG9mIHRoZSBwb2x5Z29uLCB0aGUgdHJpYW5nbGVzIGFyZSB0aGUgaW5zaWRlLlxyXG4gICAgICogQHNlZSBodHRwOi8vd3d3Lm1hY3dyaWdodC5vcmcvMjAxNS8wMy8yMy9nZW9qc29uLXNlY29uZC1iaXRlLmh0bWwjcG9seWdvbnNcclxuICAgICAqIEBtZW1iZXJPZiBNYXBcclxuICAgICAqL1xyXG4gICAgcHJvY2Vzc1BvbHlnb24ocG9seWdvbikge1xyXG4gICAgICAgIGxldCBwb2x5YXJyYXkgPSBbXTtcclxuICAgICAgICBpZiAocG9seWdvbi5nZW9tZXRyeS50eXBlID09PSBcIlBvbHlnb25cIikgeyAvL0BUT0RPOiBbRGVtb3MgbmV2ZXIgdXNlIHRoaXMgaWYgc3RhdGVtZW50Ll1cclxuICAgICAgICAgICAgbGV0IG91dHNpZGVwb2x5Z29uID0gcG9seWdvbi5nZW9tZXRyeS5jb29yZGluYXRlc1swXTtcclxuICAgICAgICAgICAgbGV0IHRlbXBWZXJ0cyA9IG5ldyBBcnJheSgpO1xyXG4gICAgICAgICAgICBmb3IgKGxldCBvdXQgPSAwOyBvdXQgPCBvdXRzaWRlcG9seWdvbi5sZW5ndGggLSAxOyBvdXQrKylcclxuICAgICAgICAgICAgICAgIHRlbXBWZXJ0cy5wdXNoKG91dHNpZGVwb2x5Z29uW291dF1bMF0sIG91dHNpZGVwb2x5Z29uW291dF1bMV0pOy8vX3ZlcnRleGNvdW50ICs9IChvdXRzaWRlcG9seWdvbi5sZW5ndGggKyAxKSAvIDI7XHJcbiAgICAgICAgICAgIGxldCB0cmlhbmdsZXNfdmVydCA9IGVhcmN1dCh0ZW1wVmVydHMpOyAvLyBfdHJpY291bnQgKz0gKHRyaWFuZ2xlc192ZXJ0Lmxlbmd0aCAvIDMpO1xyXG4gICAgICAgICAgICBwb2x5YXJyYXkucHVzaCh7IHRyaWFuZ2xlczogdHJpYW5nbGVzX3ZlcnQsIHZlcnRpY2VzOiB0ZW1wVmVydHMgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHBvbHlnb24uZ2VvbWV0cnkudHlwZSA9PT0gXCJNdWx0aVBvbHlnb25cIikge1xyXG4gICAgICAgICAgICBsZXQgdGVtcFZlcnRzID0gbmV3IEFycmF5KCk7IC8vcG9seWdvbi5nZW9tZXRyeS5jb29yZGluYXRlc1swXVswXSAtPiAgW2xhdCxsb25nXSAsIFtsYXQsbG9uZ10sIFtsYXQsbG9uZ10gLi4uLiBbbGF0LGxvbmddXHJcbiAgICAgICAgICAgIGZvciAoY29uc3QgY29vcmQgb2YgcG9seWdvbi5nZW9tZXRyeS5jb29yZGluYXRlc1swXVswXSlcclxuICAgICAgICAgICAgICAgIHRlbXBWZXJ0cy5wdXNoKGNvb3JkWzBdLCBjb29yZFsxXSk7XHJcbiAgICAgICAgICAgIGxldCB0cmlhbmdsZXNfdmVydCA9IGVhcmN1dCh0ZW1wVmVydHMpO1xyXG4gICAgICAgICAgICAvKiBjb25zb2xlLmxvZyh0cmlhbmdsZXNfdmVydCk7XHJcbiAgICAgICAgICAgICBjb25zb2xlLmxvZyh0ZW1wVmVydHMpKi9cclxuICAgICAgICAgICAgcG9seWFycmF5LnB1c2goeyB0cmlhbmdsZXM6IHRyaWFuZ2xlc192ZXJ0LCB2ZXJ0aWNlczogdGVtcFZlcnRzIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcG9seWFycmF5O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogTTE0KSBDb252ZXJ0cyBnZW9ncmFwaGljIGNvb3JkaW5hdGVzKGxhdGl0dWRlLCBsb25naXR1ZGUpIHRvIGNhbnZhcyBjb29yZGluYXRlIHBpeGVscy5cclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBsb25naXR1ZGUgLSBUaGUgbG9uZ2l0dWRlLlxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGxhdGl0dWRlIC0gVGhlIGxhdGl0dWRlLlxyXG4gICAgICogQHJldHVybnMge3g6IG51bWJlciwgeTogbnVtYmVyfSAtIGNhbnZhcyBjb29yZGluYXRlIHN5c3RlbSBwaXhlbHMuXHJcbiAgICAgKiBAc2VlIGh0dHA6Ly9naXNnZW9ncmFwaHkuY29tL2xhdGl0dWRlLWxvbmdpdHVkZS1jb29yZGluYXRlcy9cclxuICAgICAqIEBzZWUgaHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9ncmFwaGljcy9jYW52YXNfY29vcmRpbmF0ZXMuYXNwXHJcbiAgICAgKiBAbWVtYmVyT2YgTWFwXHJcbiAgICAgKi9cclxuICAgIGxhdExvbmdUb1BpeGVsWFkobG9uZ2l0dWRlLCBsYXRpdHVkZSkge1xyXG4gICAgICAgIGNvbnN0IHBpXzE4MCA9IE1hdGguUEkgLyAxODAuMDtcclxuICAgICAgICBjb25zdCBwaV80ID0gTWF0aC5QSSAqIDQ7XHJcbiAgICAgICAgY29uc3Qgc2luTGF0aXR1ZGUgPSBNYXRoLnNpbihsYXRpdHVkZSAqIHBpXzE4MCk7XHJcbiAgICAgICAgY29uc3QgcGl4ZWxZID0gKDAuNSAtIE1hdGgubG9nKCgxICsgc2luTGF0aXR1ZGUpIC8gKDEgLSBzaW5MYXRpdHVkZSkpIC8gKHBpXzQpKSAqIDI1NjtcclxuICAgICAgICBjb25zdCBwaXhlbFggPSAoKGxvbmdpdHVkZSArIDE4MCkgLyAzNjApICogMjU2O1xyXG5cclxuICAgICAgICBjb25zdCBwaXhlbCA9IHsgeDogcGl4ZWxYLCB5OiBwaXhlbFkgfTtcclxuICAgICAgICByZXR1cm4gcGl4ZWw7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBNMTUpIEluc2VydHMgdGhlIEZlYXR1cmUgaW50byBvbmUgb3IgbW9yZSBBZXN0aGV0aWMgb2JqZWN0cy4gSWYgdGhlIEZlYXR1cmUgZG9lcyBub3QgZml0IGluIGFueSBBZXN0aGV0aWMgdGhlbiBkb2VzIG5vdGhpbmcuXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gaWQgLSBUaGUgRmVhdHVyZSBpZC4gXHJcbiAgICAgKiBAcGFyYW0ge0pTT059IHByb3BlcnRpZXMgLSBUaGUgRmVhdHVyZSBwcm9wZXJ0aWVzLiBcclxuICAgICAqIEBwYXJhbSB7e2l0ZW1TaXplOiBudW1iZXIsIG51bUl0ZW1zOiBudW1iZXJ9fSB0cmlhbmdsZXMgLSBUcmlhbmdsZXMsIGVhY2ggaW4gb25lIFdlYkdMQnVmZmVyLlxyXG4gICAgICogQHBhcmFtIHt7aXRlbVNpemU6IG51bWJlciwgbnVtSXRlbXM6IG51bWJlcn19IGJvcmRlcnMgLSBCb3JkZXJzLCBlYWNoIGluIG9uZSBXZWJHTEJ1ZmZlci5cclxuICAgICAqIEBwYXJhbSB7e2l0ZW1TaXplOiBudW1iZXIsIG51bUl0ZW1zOiBudW1iZXJ9fSBwb2ludHMgLSBQb2ludHMsIGVhY2ggaW4gb25lIFdlYkdMQnVmZmVyLlxyXG4gICAgICogQHJldHVybiB7dm9pZH1cclxuICAgICAqIEBtZW1iZXJPZiBNYXBcclxuICAgICAqL1xyXG4gICAgaW5zZXJ0RmVhdHVyZShpZCwgcHJvcGVydGllcywgdHJpYW5nbGVzLCBib3JkZXJzLCBwb2ludHMpIHtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuYWVzdGhldGljcy5sZW5ndGg7IGkrKylcclxuICAgICAgICAgICAgaWYgKHRoaXMuYWVzdGhldGljc1tpXS5jaGVja1Byb3BlcnR5KHByb3BlcnRpZXNbdGhpcy5hZXN0aGV0aWNzW2ldLmdldEF0dHIoKV0pKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5hZXN0aGV0aWNzW2ldLmFkZEZlYXR1cmUoaWQsIHByb3BlcnRpZXMsIHRyaWFuZ2xlcywgYm9yZGVycywgcG9pbnRzKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIE0xNikgUmV0dXJucyBhbiBhcnJheSBvZiBBZXN0aGV0aWMgaWRzIHRoYXQgdGVsbHMgdXMgdGhlIG9iamVjdHMgd2hlcmUgdGhlIEZlYXR1cmUgYmVsb25ncy5cclxuICAgICAqIEBwYXJhbSB7SlNPTn0gcHJvcGVydGllcyAtIFRoZSBGZWF0dXJlIHByb3BlcnRpZXNcclxuICAgICAqIEByZXR1cm5zIHtBcnJheTxudW1iZXI+fSAtIFRoZSBBZXN0aGV0aWMgaWRzIHdoZXJlIHRoZSBGZWF0dXJlIGJlbG9uZ3MuXHJcbiAgICAgKiBAbWVtYmVyT2YgTWFwXHJcbiAgICAgKi9cclxuICAgIGZpdEZlYXR1cmUocHJvcGVydGllcykge1xyXG4gICAgICAgIGNvbnN0IHJlcyA9IFtdO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5hZXN0aGV0aWNzLmxlbmd0aDsgaSsrKVxyXG4gICAgICAgICAgICBpZiAodGhpcy5hZXN0aGV0aWNzW2ldLmNoZWNrUHJvcGVydHkocHJvcGVydGllc1t0aGlzLmFlc3RoZXRpY3NbaV0uZ2V0QXR0cigpXSkpXHJcbiAgICAgICAgICAgICAgICByZXMucHVzaChpKTtcclxuICAgICAgICByZXR1cm4gcmVzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogTT8pIFJlY2VpdmVzIHRoZSBkYXRhc2V0IGFzIHBhcmFtZXRlci4gVGhpcyBkYXRhc2V0IGluIGVhY2ggcm93IGNvbnRhaW5zIGdlb21ldHJ5IGFuZCBhc3NvY2lhdGVkIHByb3BlcnRpZXMsIHRoZW4gaXQgY3JlYXRlcyBvbmUgdHJlZVxyXG4gICAgICogZWl0aGVyIGZvciBwb2ludHMgb3IgcG9seWdvbnMuIFRoaXMgdHJlZSBjYW4gYmUgay1kIFRyZWVlIG9yIFJCdXNoKFJUcmVlKVxyXG4gICAgICogQHBhcmFtIHtKU09OfSBnZW9qc29uIFxyXG4gICAgICogQHJldHVybiB7dm9pZH1cclxuICAgICAqIEBzZWUgRGlvZ28ncyB0aGVzaXMgcGFnZSA2MlxyXG4gICAgICogQG1lbWJlck9mIE1hcFxyXG4gICAgICovXHJcbiAgICBidWlsZFRyZWVzKGdlb2pzb24pIHtcclxuICAgICAgICBjb25zdCBnbCA9IHRoaXMuX3dlYmdsLmdsO1xyXG4gICAgICAgIGlmICh0aGlzLnRlbXBBZXN0aGV0aWNQb2ludHMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMudGVtcEFlc3RoZXRpY1BvaW50cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMudGVtcEFlc3RoZXRpY1BvaW50c1tpXS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdmVydEFycmF5ID0gbmV3IEZsb2F0MzJBcnJheSh0aGlzLnRlbXBBZXN0aGV0aWNQb2ludHNbaV0pO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGJ1ZmZlclAgPSBbXTtcclxuICAgICAgICAgICAgICAgICAgICBidWZmZXJQLnB1c2goZ2wuY3JlYXRlQnVmZmVyKCkpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBnbC5mc2l6ZSA9IHZlcnRBcnJheS5CWVRFU19QRVJfRUxFTUVOVDtcclxuICAgICAgICAgICAgICAgICAgICBnbC5iaW5kQnVmZmVyKGdsLkFSUkFZX0JVRkZFUiwgYnVmZmVyUFswXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgZ2wuYnVmZmVyRGF0YShnbC5BUlJBWV9CVUZGRVIsIHZlcnRBcnJheSwgZ2wuU1RBVElDX0RSQVcpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJ1ZmZlclBbMF0uaXRlbVNpemUgPSAyO1xyXG4gICAgICAgICAgICAgICAgICAgIGJ1ZmZlclBbMF0ubnVtSXRlbXMgPSB2ZXJ0QXJyYXkubGVuZ3RoIC8gMjtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmluc2VydEdyb3VwZWRGZWF0dXJlKGksIFtdLCBbXSwgYnVmZmVyUCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMudHJlZXBvaW50cyAhPT0gbnVsbClcclxuICAgICAgICAgICAgdGhpcy5rZHRyZWUgPSBuZXcga2RUcmVlKHRoaXMudHJlZXBvaW50cywgKGEsIGIpID0+IChhLmxvbiAtIGIubG9uKSAqKiAyICsgKGEubGF0IC0gYi5sYXQpICoqIDIsIFtcImxvblwiLCBcImxhdFwiLCBcInByb3BlcnRpZXNcIl0pO1xyXG4gICAgICAgIGlmICh0aGlzLmhhc1BvbHlnb25zKVxyXG4gICAgICAgICAgICB0aGlzLnJ0cmVlID0gbmV3IFBvbHlnb25Mb29rdXAoZ2VvanNvbik7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTaW1pbGFyIHRvIGluc2VydEZlYXR1cmUsIGluIHRoaXMgY2FzZSBpbnNlcnRzIGEgZ3JvdXAgb2YgRmVhdHVyZXMgbGlrZSBpdCB3YXMgb25seSBvbmUuXHJcbiAgICAgKiBJdCBjcmVhdGVzIG9uZSBXZWJHTEJ1ZmZlciB3aXRoIGFsbCB0aGUgcG9pbnRzIGluc3RlYWQgb2Ygb25lIFdlYkdMQnVmZmVyIHBlciBwb2ludC5cclxuICAgICAqIFRoaXMgbWV0aG9kIHNob3VsZCBvbmx5IGJlIHVzZWQgd2hlbiB3ZSBhbHJlYWR5IGdyb3VwZWQgdGhlIEZlYXR1cmVzIGJ5IEFlc3RoZXRpYyBjbGFzcyAoZml0RmVhdHVyZSgpIG1ldGhvZCkuXHJcbiAgICAgKiBUaGlzIG1ldGhvZCBleGlzdHMgdG8gcHJvdmlkZSBvbmUgYWx0ZXJuYXRpdmUgbGVzcyBleHBlbnNpdmUgaW4gdGVybXMgb2YgbWVtb3J5IGZvciBsb3cgZW5kIGRldmljZXMuXHJcbiAgICAgKiBVc2VkIG9ubHkgb24gRG90IE1hcCBiZWNhdXNlIG9uIHRob3NlIHdlIGNhbiBlYXNpbHkgZW5kIHVwIHdpdGggbWlsbGlvbnMgb2YgZGlmZmVyZW50IEZlYXR1cmVzLlxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGlkIC0gQWVzdGhldGhpY3MgaWQuIFxyXG4gICAgICogQHBhcmFtIHt7aXRlbVNpemU6IG51bWJlciwgbnVtSXRlbXM6IG51bWJlcn19IHRyaWFuZ2xlcyAtIE5vdCB1c2VkID9cclxuICAgICAqIEBwYXJhbSB7e2l0ZW1TaXplOiBudW1iZXIsIG51bUl0ZW1zOiBudW1iZXJ9fSBib3JkZXJzIC0gTm90IHVzZWQgP1xyXG4gICAgICogQHBhcmFtIHt7aXRlbVNpemU6IG51bWJlciwgbnVtSXRlbXM6IG51bWJlcn19IHBvaW50cyAtIEFsbCB0aGUgcG9pbnRzIGZvciB0aGUgQWVzdGhldGhpYyBvYmplY3QgaW4gb25lIFdlYkdMQnVmZmVyLlxyXG4gICAgICogQG1lbWJlck9mIE1hcFxyXG4gICAgICovXHJcbiAgICBpbnNlcnRHcm91cGVkRmVhdHVyZShpZCwgdHJpYW5nbGVzLCBib3JkZXJzLCBwb2ludHMpIHtcclxuICAgICAgICB0aGlzLmFlc3RoZXRpY3NbaWRdLmFkZEdyb3VwZWRGZWF0dXJlKG51bGwsIHRyaWFuZ2xlcywgYm9yZGVycywgcG9pbnRzKTtcclxuICAgIH1cclxuXHJcbiAgICAvKiogIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjICAgIExFR0VORCBNRVRIT0RTICAgICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyAqL1xyXG4gICAgLyoqXHJcbiAgICAgKiBNMTcpIENyZWF0ZXMgYSBMZWdlbmQgZWxlbWVudCBzdWl0YWJsZSBmb3IgcG9seWdvbnMgYmFzZWQgb24gdGhlIEFlc3RoZXRoaWMgb2JqZWN0cy5cclxuICAgICAqIFNob3VsZCBiZSBvdmVycmlkZW4gYnkgc3ViY2xhc3Nlcy5cclxuICAgICAqIEByZXR1cm4ge3ZvaWR9XHJcbiAgICAgKiBAYWJzdHJhY3RcclxuICAgICAqIEBtZW1iZXJPZiBNYXBcclxuICAgICAqL1xyXG4gICAgYnVpbGRMZWdlbmQoKSB7XHJcbiAgICAgICAgY29uc3QgbWFwQ2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYG1hcENhbnZhcyR7dGhpcy5pZH1gKTtcclxuICAgICAgICBjb25zdCBsZWdlbmREaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICBsZWdlbmREaXYuaWQgPSBgbGVnZW5kRGl2JHt0aGlzLmlkfWA7XHJcbiAgICAgICAgbGVnZW5kRGl2LnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcclxuICAgICAgICBsZWdlbmREaXYuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJ3doaXRlJztcclxuICAgICAgICBsZWdlbmREaXYuc3R5bGUud2lkdGggPSAyNTA7XHJcbiAgICAgICAgbGVnZW5kRGl2LnN0eWxlLmJvdHRvbSA9IDIwO1xyXG4gICAgICAgIGxlZ2VuZERpdi5zdHlsZS5yaWdodCA9IDA7XHJcbiAgICAgICAgbGVnZW5kRGl2LnN0eWxlLmJvcmRlckNvbG9yID0gJ2JsYWNrJztcclxuICAgICAgICBsZWdlbmREaXYuc3R5bGUuYm9yZGVyID0gJ3NvbGlkJztcclxuXHJcbiAgICAgICAgY29uc3QgdGFibGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0YWJsZScpO1xyXG4gICAgICAgIGNvbnN0IHRodmFsdWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0aCcpO1xyXG4gICAgICAgIGNvbnN0IHRoY29sb3IgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0aCcpO1xyXG4gICAgICAgIHRhYmxlLnN0eWxlLnpJbmRleCA9IFwiMjAwMFwiO1xyXG4gICAgICAgIHRoY29sb3Iuc3R5bGUud2lkdGggPSAxMDA7XHJcbiAgICAgICAgdGFibGUuYXBwZW5kQ2hpbGQodGhjb2xvcik7XHJcbiAgICAgICAgdGFibGUuYXBwZW5kQ2hpbGQodGh2YWx1ZSk7XHJcblxyXG4gICAgICAgIGZvciAoY29uc3QgY3VycmVudGFlcyBvZiB0aGlzLmFlc3RoZXRpY3MpIHtcclxuICAgICAgICAgICAgY29uc3Qgcm93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndHInKTtcclxuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZCcpO1xyXG4gICAgICAgICAgICBjb25zdCBjb2xvciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RkJyk7XHJcbiAgICAgICAgICAgIGNvbnN0IHB0ZXh0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xyXG4gICAgICAgICAgICBsZXQgdGV4dDtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjdXJyZW50YWVzLnJhbmdlWzBdID09PSAnbnVtYmVyJylcclxuICAgICAgICAgICAgICAgIHRleHQgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShgWyR7Y3VycmVudGFlcy5yYW5nZVswXX0sICR7Y3VycmVudGFlcy5yYW5nZVsxXX1bYCk7XHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgIHRleHQgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjdXJyZW50YWVzLnJhbmdlWzBdKTtcclxuICAgICAgICAgICAgcHRleHQuYXBwZW5kQ2hpbGQodGV4dCk7XHJcbiAgICAgICAgICAgIHZhbHVlLmFwcGVuZENoaWxkKHB0ZXh0KTtcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IGNvbG9yRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgICAgIGNvbG9yRGl2LnN0eWxlLnBvc2l0aW9uID0gJ3JlbGF0aXZlJztcclxuICAgICAgICAgICAgY29uc3QgcmdiYyA9IGByZ2JhKCR7Y3VycmVudGFlcy5maWxsQ29sb3JbMF19LCR7Y3VycmVudGFlcy5maWxsQ29sb3JbMV19LCR7Y3VycmVudGFlcy5maWxsQ29sb3JbMl19LCR7Y3VycmVudGFlcy5maWxsQ29sb3JbM119KWA7XHJcbiAgICAgICAgICAgIGNvbG9yRGl2LnN0eWxlWydiYWNrZ3JvdW5kQ29sb3InXSA9IHJnYmM7XHJcbiAgICAgICAgICAgIGNvbG9yRGl2LnN0eWxlLmhlaWdodCA9IDI1O1xyXG4gICAgICAgICAgICBjb2xvckRpdi5zdHlsZS53aWR0aCA9IDgwO1xyXG4gICAgICAgICAgICBjb2xvci5hcHBlbmRDaGlsZChjb2xvckRpdik7XHJcblxyXG4gICAgICAgICAgICByb3cuYXBwZW5kQ2hpbGQoY29sb3IpO1xyXG4gICAgICAgICAgICByb3cuYXBwZW5kQ2hpbGQodmFsdWUpO1xyXG4gICAgICAgICAgICB0YWJsZS5hcHBlbmRDaGlsZChyb3cpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbGVnZW5kRGl2LmFwcGVuZENoaWxkKHRhYmxlKTtcclxuICAgICAgICB0aGlzLmJHTWFwLmdldENvbnRhaW5lcigpLmFwcGVuZENoaWxkKGxlZ2VuZERpdik7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyAgICBXRUJHTCBNRVRIT0RTICAgICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyAqL1xyXG4gICAgLyoqXHJcbiAgICAgKiBNMjApIENsZWFyIGN1cnJlbnQgYnVmZmVycyB0byBwcmVzZXQgdmFsdWVzLlxyXG4gICAgICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvV2ViR0xSZW5kZXJpbmdDb250ZXh0L2NsZWFyXHJcbiAgICAgKiBAbWVtYmVyT2YgTWFwXHJcbiAgICAgKi9cclxuICAgIGNsZWFyKCkge1xyXG4gICAgICAgIGNvbnN0IGdsID0gdGhpcy5fd2ViZ2wuZ2w7XHJcbiAgICAgICAgZ2wuY2xlYXIoZ2wuQ09MT1JfQlVGRkVSX0JJVCk7XHJcbiAgICAgICAgZ2wuZGlzYWJsZShnbC5ERVBUSF9URVNUKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIE0yMSkgUmVjZWl2aW5nIGFuIEFlc3RoZXRpY3Mgb2JqZWN0LCBkcmF3cyB0aGUgdHJpYW5nbGVzIGNvbnRhaW5lZCBpbiBpdCdzIEZlYXR1cmVzLFxyXG4gICAgICogdXNpbmcgdGhlIGNvbG9yIHRoYXQgdGhlIEFlc3RoZXRoaWNzIG9iamVjdCBoYXMuXHJcbiAgICAgKiBAcGFyYW0ge0Flc3RoZXRpY30gYWVzIC0gVGhlIEFlc3RoZXRpYyBvYmplY3QuXHJcbiAgICAgKiBAcmV0dXJucyB7dm9pZH1cclxuICAgICAqIEBzZWUgRGlvZ28ncyB0aGVzaXMgUGFnZSA1OC81OVxyXG4gICAgICogQG1lbWJlck9mIE1hcFxyXG4gICAgICovXHJcbiAgICBkcmF3VHJpYW5nbGVzKGFlcykge1xyXG4gICAgICAgIGNvbnN0IGdsID0gdGhpcy5fd2ViZ2wuZ2w7XHJcbiAgICAgICAgaWYgKGdsID09PSBudWxsKVxyXG4gICAgICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICAgIGNvbnN0IG1hdHJpeFByb2plY3Rpb24gPSBuZXcgRmxvYXQzMkFycmF5KDE2KTtcclxuICAgICAgICBjb25zdCBmc2l6ZSA9IEZsb2F0MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVDtcclxuICAgICAgICBjb25zdCBjdXJyZW50Wm9vbSA9IHRoaXMuYkdNYXAuZ2V0Wm9vbSgpO1xyXG4gICAgICAgIGNvbnN0IHBvaW50U2l6ZSA9IE1hdGgubWF4KGN1cnJlbnRab29tIC0gNS4wLCAxLjApO1xyXG4gICAgICAgIGNvbnN0IHNjYWxlID0gMiAqKiBjdXJyZW50Wm9vbTtcclxuICAgICAgICBjb25zdCBvZmZzZXQgPSB0aGlzLmxhdExvbmdUb1BpeGVsWFkodGhpcy5iR01hcC5nZXRMbmdCb3VuZCgpLCB0aGlzLmJHTWFwLmdldExhdEJvdW5kKCkpO1xyXG4gICAgICAgIGNvbnN0IHByb2plY3Rpb25Mb2NhdGlvbiA9IGdsLmdldFVuaWZvcm1Mb2NhdGlvbih0aGlzLl93ZWJnbC5wcm9ncmFtLCAncHJvamVjdGlvbicpO1xyXG4gICAgICAgIGNvbnN0IHZlcnRleFNpemVMb2NhdGlvbiA9IGdsLmdldEF0dHJpYkxvY2F0aW9uKHRoaXMuX3dlYmdsLnByb2dyYW0sICdhUG9pbnRTaXplJyk7XHJcbiAgICAgICAgY29uc3QgaXNQb2ludExvY2F0aW9uID0gZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHRoaXMuX3dlYmdsLnByb2dyYW0sICdpc1BvaW50Jyk7XHJcbiAgICAgICAgY29uc3QgdmVydGV4Q29vcmRMb2NhdGlvbiA9IGdsLmdldEF0dHJpYkxvY2F0aW9uKHRoaXMuX3dlYmdsLnByb2dyYW0sICd2ZXJ0ZXhDb29yZCcpO1xyXG4gICAgICAgIGNvbnN0IHZlcnRleENvbG9yTG9jYXRpb24gPSBnbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5fd2ViZ2wucHJvZ3JhbSwgXCJ1X2NvbG9yXCIpO1xyXG4gICAgICAgIGxldCBbciwgZywgYiwgYV0gPSBhZXMuZ2V0RmlsbENvbG9yKCk7XHJcblxyXG4gICAgICAgIG1hdHJpeFByb2plY3Rpb24uc2V0KHRoaXMuX3dlYmdsLnByb2plY3Rpb24pO1xyXG4gICAgICAgIHRoaXMuc2NhbGVQcm9qZWN0aW9uKG1hdHJpeFByb2plY3Rpb24sIHNjYWxlLCBzY2FsZSk7XHJcbiAgICAgICAgdGhpcy50cmFuc2xhdGVQcm9qZWN0aW9uKG1hdHJpeFByb2plY3Rpb24sIC1vZmZzZXQueCwgLW9mZnNldC55KTtcclxuICAgICAgICBnbC51bmlmb3JtTWF0cml4NGZ2KHByb2plY3Rpb25Mb2NhdGlvbiwgZmFsc2UsIG1hdHJpeFByb2plY3Rpb24pO1xyXG4gICAgICAgIGdsLnZlcnRleEF0dHJpYjFmKHZlcnRleFNpemVMb2NhdGlvbiwgcG9pbnRTaXplKTtcclxuICAgICAgICBnbC51bmlmb3JtMWYoaXNQb2ludExvY2F0aW9uLCAwLjApO1xyXG4gICAgICAgIGdsLnVuaWZvcm00Zih2ZXJ0ZXhDb2xvckxvY2F0aW9uLCByIC8gMjU1LCBnIC8gMjU1LCBiIC8gMjU1LCBhKTsvLyBEcmF3IFBvbHlnb25zJyBJbnRlcmlvclxyXG5cclxuICAgICAgICBsZXQgZmVhdHVyZXMgPSBhZXMuZ2V0RmVhdHVyZXMoKTtcclxuICAgICAgICBmb3IgKGNvbnN0IGYgb2YgZmVhdHVyZXMpIHsgLy8gRHJhdyBQb2x5Z29ucycgSW50ZXJpb3JcclxuICAgICAgICAgICAgbGV0IHRyaWFuZ2xlcyA9IGYuZ2V0VHJpYW5nbGVzKCk7XHJcbiAgICAgICAgICAgIGZvciAoY29uc3QgdCBvZiB0cmlhbmdsZXMpIHtcclxuICAgICAgICAgICAgICAgIGdsLmJpbmRCdWZmZXIoZ2wuQVJSQVlfQlVGRkVSLCB0KTtcclxuICAgICAgICAgICAgICAgIGdsLmVuYWJsZVZlcnRleEF0dHJpYkFycmF5KHZlcnRleENvb3JkTG9jYXRpb24pO1xyXG4gICAgICAgICAgICAgICAgZ2wudmVydGV4QXR0cmliUG9pbnRlcih2ZXJ0ZXhDb29yZExvY2F0aW9uLCAyLCBnbC5GTE9BVCwgZmFsc2UsIGZzaXplICogMiwgMCk7XHJcbiAgICAgICAgICAgICAgICBnbC5kcmF3QXJyYXlzKGdsLlRSSUFOR0xFUywgMCwgdC5udW1JdGVtcyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBNMjIpIFNjYWxlIG1hdHJpeCB3aXRoIHRoZSBnaXZlbiB4KHNjYWxlWCkgYW5kIHkoc2NhbGVZKSB2YWx1ZXMuXHJcbiAgICAgKiBTY2FsaW5nIHggYW5kIHksIHdoaWNoIGlzIGp1c3Qgc2NhbGluZyBmaXJzdCB0d28gcm93cyBvZiBtYXRyaXhcclxuICAgICAqIEBwYXJhbSB7RmxvYXQzMkFycmF5fSBtYXRyaXggXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gc2NhbGVYIC0gU2NhbGUgaW4gWCBheGlzLlxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHNjYWxlWSAtIFNjYWxlIGluIFkgYXhpcy5cclxuICAgICAqIEBzZWUgaHR0cDovL3d3dy5jLWp1bXAuY29tL2JjYy9jb21tb24vVGFsazMvTWF0aC9NYXRyaWNlcy9jb25zdF9pbWFnZXMvYXBwbHlpbmdfc2NhbGluZy5wbmdcclxuICAgICAqIEBzZWUgaHR0cDovL3B0Z21lZGlhLnBlYXJzb25jbWcuY29tL2ltYWdlcy9jaGFwM185NzgwMzIxOTAyOTI0L2VsZW1lbnRMaW5rcy8wM2ZpZzI3LmpwZyBSZW1lbWJlciBXZWJHTCBpcyBDb2x1bW4gbWFqb3JcclxuICAgICAqIEBzZWUgaHR0cDovL3BybnRzY3IuY29tL2Vvbm9uYlxyXG4gICAgICogQG1lbWJlck9mIE1hcFxyXG4gICAgICovXHJcbiAgICBzY2FsZVByb2plY3Rpb24obWF0cml4LCBzY2FsZVgsIHNjYWxlWSkge1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgODsgaSsrKVxyXG4gICAgICAgICAgICBpIDwgNCA/IChtYXRyaXhbaV0gKj0gc2NhbGVYKSA6IChtYXRyaXhbaV0gKj0gc2NhbGVZKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIE0yMykgVGhlIHRyYW5zbGF0aW9uIGlzIHBlcmZvcm1lZCBpbiB0aGUgbGFzdCByb3cgb2YgdGhlIG1hdHJpeC4gXHJcbiAgICAgKiBAcGFyYW0ge0Zsb2F0MzJBcnJheX0gbWF0cml4IC0gVGhlIG1hdHJpeCB0byBob2xkIHRoZSByZXN1bHQuXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gdHggLSBUcmFuc2xhdGlvbiBpbiBYIGF4aXMuICBcclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB0eSAtIFRyYW5zbGF0aW9uIGluIFkgYXhpcy5cclxuICAgICAqIEBzZWUgaHR0cDovL3BvbHltYXRocHJvZ3JhbW1lci5jb20vaW1hZ2VzL2Jsb2cvMjAwODA5L3RyYW5zbGF0aW9ubWF0cml4LnBuZ1xyXG4gICAgICogQHNlZSBodHRwOi8vcHJudHNjci5jb20vZW9ub25iXHJcbiAgICAgKiBAbWVtYmVyT2YgTWFwXHJcbiAgICAgKi9cclxuICAgIHRyYW5zbGF0ZVByb2plY3Rpb24obWF0cml4LCB0eCwgdHkpIHtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDQ7IGkrKylcclxuICAgICAgICAgICAgbWF0cml4W2kgKyAxMl0gKz0gKG1hdHJpeFtpXSAqIHR4KSArIChtYXRyaXhbaSArIDRdICogdHkpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogTTI0KSBSZWNlaXZpbmcgYW4gQWVzdGhldGljcyBvYmplY3QsIGRyYXdzIHRoZSBib3JkZXJzIGNvbnRhaW5lZCBpbiBpdCdzIEZlYXR1cmVzLCBcclxuICAgICAqIGFwbHlpbmcgdGhlIGNvbG9yIHNwZWNpZmllZCBpbiB0aGUgQWVzaHRlaWMgb2JqZWN0IGZvciB0aGUgbGluZSBjb2xvcihBZXNodGVpYy5zdHJva2VDb2xvcikuXHJcbiAgICAgKiBAcGFyYW0ge0Flc3RoZXRpY30gYWVzIC0gVGhlIEFlc3RoZXRpYyBvYmplY3QuXHJcbiAgICAgKiBAcmV0dXJucyB7dm9pZH1cclxuICAgICAqIEBtZW1iZXJPZiBNYXBcclxuICAgICAqL1xyXG4gICAgZHJhd0JvcmRlcnMoYWVzKSB7XHJcbiAgICAgICAgY29uc3QgZ2wgPSB0aGlzLl93ZWJnbC5nbDtcclxuICAgICAgICBpZiAoZ2wgPT09IG51bGwpXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuXHJcbiAgICAgICAgZ2wuZW5hYmxlKGdsLkJMRU5EKTtcclxuICAgICAgICBnbC5ibGVuZEZ1bmMoZ2wuT05FLCBnbC5PTkVfTUlOVVNfU1JDX0FMUEhBKTtcclxuXHJcbiAgICAgICAgY29uc3QgbWF0cml4UHJvamVjdGlvbiA9IG5ldyBGbG9hdDMyQXJyYXkoMTYpO1xyXG4gICAgICAgIGNvbnN0IGZzaXplID0gRmxvYXQzMkFycmF5LkJZVEVTX1BFUl9FTEVNRU5UO1xyXG4gICAgICAgIGNvbnN0IGN1cnJlbnRab29tID0gdGhpcy5iR01hcC5nZXRab29tKCk7XHJcbiAgICAgICAgY29uc3QgcG9pbnRTaXplID0gTWF0aC5tYXgoY3VycmVudFpvb20gLSA1LjAsIDEuMCk7XHJcbiAgICAgICAgY29uc3Qgc2NhbGUgPSAyICoqIGN1cnJlbnRab29tO1xyXG4gICAgICAgIGNvbnN0IG9mZnNldCA9IHRoaXMubGF0TG9uZ1RvUGl4ZWxYWSh0aGlzLmJHTWFwLmdldExuZ0JvdW5kKCksIHRoaXMuYkdNYXAuZ2V0TGF0Qm91bmQoKSk7XHJcbiAgICAgICAgY29uc3QgcHJvamVjdGlvbkxvY2F0aW9uID0gZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHRoaXMuX3dlYmdsLnByb2dyYW0sICdwcm9qZWN0aW9uJyk7XHJcbiAgICAgICAgY29uc3QgdmVydGV4U2l6ZUxvY2F0aW9uID0gZ2wuZ2V0QXR0cmliTG9jYXRpb24odGhpcy5fd2ViZ2wucHJvZ3JhbSwgJ2FQb2ludFNpemUnKTtcclxuICAgICAgICBjb25zdCB2ZXJ0ZXhDb29yZExvY2F0aW9uID0gZ2wuZ2V0QXR0cmliTG9jYXRpb24odGhpcy5fd2ViZ2wucHJvZ3JhbSwgJ3ZlcnRleENvb3JkJyk7XHJcbiAgICAgICAgY29uc3QgdmVydGV4Q29sb3JMb2NhdGlvbiA9IGdsLmdldFVuaWZvcm1Mb2NhdGlvbih0aGlzLl93ZWJnbC5wcm9ncmFtLCBcInVfY29sb3JcIik7XHJcbiAgICAgICAgY29uc3QgaXNQb2ludExvY2F0aW9uID0gZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHRoaXMuX3dlYmdsLnByb2dyYW0sICdpc1BvaW50Jyk7XHJcbiAgICAgICAgbGV0IFtyLCBnLCBiLCBhXSA9IGFlcy5nZXRTdHJva2VDb2xvcigpO1xyXG5cclxuICAgICAgICBtYXRyaXhQcm9qZWN0aW9uLnNldCh0aGlzLl93ZWJnbC5wcm9qZWN0aW9uKTtcclxuICAgICAgICB0aGlzLnNjYWxlUHJvamVjdGlvbihtYXRyaXhQcm9qZWN0aW9uLCBzY2FsZSwgc2NhbGUpO1xyXG4gICAgICAgIHRoaXMudHJhbnNsYXRlUHJvamVjdGlvbihtYXRyaXhQcm9qZWN0aW9uLCAtb2Zmc2V0LngsIC1vZmZzZXQueSk7XHJcbiAgICAgICAgZ2wudW5pZm9ybU1hdHJpeDRmdihwcm9qZWN0aW9uTG9jYXRpb24sIGZhbHNlLCBtYXRyaXhQcm9qZWN0aW9uKTtcclxuICAgICAgICBnbC52ZXJ0ZXhBdHRyaWIxZih2ZXJ0ZXhTaXplTG9jYXRpb24sIHBvaW50U2l6ZSk7XHJcbiAgICAgICAgZ2wudW5pZm9ybTFmKGlzUG9pbnRMb2NhdGlvbiwgMC4wKTtcclxuICAgICAgICBnbC51bmlmb3JtNGYodmVydGV4Q29sb3JMb2NhdGlvbiwgciAvIDI1NSwgZyAvIDI1NSwgYiAvIDI1NSwgYSk7XHJcblxyXG4gICAgICAgIGxldCBmZWF0dXJlcyA9IGFlcy5nZXRGZWF0dXJlcygpO1xyXG4gICAgICAgIGZvciAoY29uc3QgZiBvZiBmZWF0dXJlcykge1xyXG4gICAgICAgICAgICBsZXQgYm9yZGVycyA9IGYuZ2V0Qm9yZGVycygpO1xyXG4gICAgICAgICAgICBmb3IgKGNvbnN0IGIgb2YgYm9yZGVycykge1xyXG4gICAgICAgICAgICAgICAgZ2wuYmluZEJ1ZmZlcihnbC5BUlJBWV9CVUZGRVIsIGIpO1xyXG4gICAgICAgICAgICAgICAgZ2wuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkodmVydGV4Q29vcmRMb2NhdGlvbik7XHJcbiAgICAgICAgICAgICAgICBnbC52ZXJ0ZXhBdHRyaWJQb2ludGVyKHZlcnRleENvb3JkTG9jYXRpb24sIDIsIGdsLkZMT0FULCBmYWxzZSwgZnNpemUgKiAyLCAwKTtcclxuICAgICAgICAgICAgICAgIGdsLmRyYXdBcnJheXMoZ2wuTElORV9MT09QLCAwLCBiLm51bUl0ZW1zKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIE0/KSBSZWNlaXZpbmcgYW4gQWVzdGhldGljcyBvYmplY3QsIGRyYXdzIHRoZSBib3JkZXJzIGNvbnRhaW5lZCBpbiBpdCdzIEZlYXR1cmVzLCBcclxuICAgICAqIGFwbHlpbmcgdGhlIGZpbGxpbmcgY29sb3IgY2FsY3VsYXRlZCB1c2luZyB0aGUgYXR0cmlidXRlIGFuZCB0aGUgY29sb3Igc2NoZW1lLlxyXG4gICAgICogQHBhcmFtIHtBZXN0aGV0aWN9IGFlcyAtIFRoZSBBZXN0aGV0aWMgb2JqZWN0LlxyXG4gICAgICogQHJldHVybnMge3ZvaWR9XHJcbiAgICAgKiBAbWVtYmVyT2YgTWFwXHJcbiAgICAgKi9cclxuICAgIGRyYXdDb250aW51b3VzUG9seWdvbnMoYWVzKSB7XHJcbiAgICAgICAgY29uc3QgZ2wgPSB0aGlzLl93ZWJnbC5nbDtcclxuICAgICAgICBpZiAoZ2wgPT09IG51bGwpXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuXHJcbiAgICAgICAgY29uc3QgbWF0cml4UHJvamVjdGlvbiA9IG5ldyBGbG9hdDMyQXJyYXkoMTYpO1xyXG4gICAgICAgIGNvbnN0IGZzaXplID0gRmxvYXQzMkFycmF5LkJZVEVTX1BFUl9FTEVNRU5UO1xyXG4gICAgICAgIGNvbnN0IGN1cnJlbnRab29tID0gdGhpcy5iR01hcC5nZXRab29tKCk7XHJcbiAgICAgICAgY29uc3QgcG9pbnRTaXplID0gTWF0aC5tYXgoY3VycmVudFpvb20gLSA1LjAsIDEuMCk7XHJcbiAgICAgICAgY29uc3Qgc2NhbGUgPSAyICoqIGN1cnJlbnRab29tO1xyXG4gICAgICAgIGNvbnN0IG9mZnNldCA9IHRoaXMubGF0TG9uZ1RvUGl4ZWxYWSh0aGlzLmJHTWFwLmdldExuZ0JvdW5kKCksIHRoaXMuYkdNYXAuZ2V0TGF0Qm91bmQoKSk7XHJcbiAgICAgICAgY29uc3QgcHJvamVjdGlvbkxvY2F0aW9uID0gZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHRoaXMuX3dlYmdsLnByb2dyYW0sICdwcm9qZWN0aW9uJyk7XHJcbiAgICAgICAgY29uc3QgdmVydGV4U2l6ZUxvY2F0aW9uID0gZ2wuZ2V0QXR0cmliTG9jYXRpb24odGhpcy5fd2ViZ2wucHJvZ3JhbSwgJ2FQb2ludFNpemUnKTtcclxuICAgICAgICBjb25zdCBpc1BvaW50TG9jYXRpb24gPSBnbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5fd2ViZ2wucHJvZ3JhbSwgJ2lzUG9pbnQnKTtcclxuICAgICAgICBjb25zdCB2ZXJ0ZXhDb29yZExvY2F0aW9uID0gZ2wuZ2V0QXR0cmliTG9jYXRpb24odGhpcy5fd2ViZ2wucHJvZ3JhbSwgJ3ZlcnRleENvb3JkJyk7XHJcbiAgICAgICAgY29uc3QgdmVydGV4Q29sb3JMb2NhdGlvbiA9IGdsLmdldFVuaWZvcm1Mb2NhdGlvbih0aGlzLl93ZWJnbC5wcm9ncmFtLCBcInVfY29sb3JcIik7XHJcblxyXG4gICAgICAgIG1hdHJpeFByb2plY3Rpb24uc2V0KHRoaXMuX3dlYmdsLnByb2plY3Rpb24pO1xyXG4gICAgICAgIHRoaXMuc2NhbGVQcm9qZWN0aW9uKG1hdHJpeFByb2plY3Rpb24sIHNjYWxlLCBzY2FsZSk7XHJcbiAgICAgICAgdGhpcy50cmFuc2xhdGVQcm9qZWN0aW9uKG1hdHJpeFByb2plY3Rpb24sIC1vZmZzZXQueCwgLW9mZnNldC55KTtcclxuICAgICAgICBnbC51bmlmb3JtTWF0cml4NGZ2KHByb2plY3Rpb25Mb2NhdGlvbiwgZmFsc2UsIG1hdHJpeFByb2plY3Rpb24pO1xyXG4gICAgICAgIGdsLnZlcnRleEF0dHJpYjFmKHZlcnRleFNpemVMb2NhdGlvbiwgcG9pbnRTaXplKTtcclxuICAgICAgICBnbC51bmlmb3JtMWYoaXNQb2ludExvY2F0aW9uLCAwLjApO1xyXG5cclxuICAgICAgICBsZXQgZmVhdHVyZXMgPSBhZXMuZ2V0RmVhdHVyZXMoKTtcclxuICAgICAgICBmb3IgKGNvbnN0IGYgb2YgZmVhdHVyZXMpIHtcclxuICAgICAgICAgICAgbGV0IGNvbG9yO1xyXG4gICAgICAgICAgICBjb25zdCBkaWZmID0gZi5nZXRQcm9wZXJ0aWVzKClbdGhpcy5naXNwbGF5T3B0aW9ucy5hdHRyXTtcclxuICAgICAgICAgICAgaWYgKGRpZmYgPT09IDApXHJcbiAgICAgICAgICAgICAgICBjb2xvciA9IGFlcy5maWxsQ29sb3IoMC41KS5yZ2IoKTtcclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZGlmZiA+IDApXHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3IgPSBhZXMuZmlsbENvbG9yKDAuNSArIGRpZmYgLyB0aGlzLm1heCAvIDIpLnJnYigpO1xyXG4gICAgICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yID0gYWVzLmZpbGxDb2xvcigwLjUgLSBkaWZmIC8gdGhpcy5taW4gLyAyKS5yZ2IoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBsZXQgW3IsIGcsIGIsIGFdID0gW01hdGgucm91bmQoY29sb3JbMF0pIC8gMjU1LCBNYXRoLnJvdW5kKGNvbG9yWzFdKSAvIDI1NSwgTWF0aC5yb3VuZChjb2xvclsyXSkgLyAyNTUsIHRoaXMuZ2lzcGxheU9wdGlvbnMuYWxwaGFdO1xyXG4gICAgICAgICAgICBnbC51bmlmb3JtNGYodmVydGV4Q29sb3JMb2NhdGlvbiwgciwgZywgYiwgYSk7XHJcblxyXG4gICAgICAgICAgICBsZXQgdHJpYW5nbGVzID0gZi5nZXRUcmlhbmdsZXMoKTtcclxuICAgICAgICAgICAgZm9yIChjb25zdCB0IG9mIHRyaWFuZ2xlcykge1xyXG4gICAgICAgICAgICAgICAgZ2wuYmluZEJ1ZmZlcihnbC5BUlJBWV9CVUZGRVIsIHQpO1xyXG4gICAgICAgICAgICAgICAgZ2wuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkodmVydGV4Q29vcmRMb2NhdGlvbik7XHJcbiAgICAgICAgICAgICAgICBnbC52ZXJ0ZXhBdHRyaWJQb2ludGVyKHZlcnRleENvb3JkTG9jYXRpb24sIDIsIGdsLkZMT0FULCBmYWxzZSwgZnNpemUgKiAyLCAwKTsvL2dsLnZlcnRleEF0dHJpYlBvaW50ZXIodmVydGV4Q29sb3JMb2NhdGlvbiwgNCwgZ2wuRkxPQVQsIGZhbHNlLCBmc2l6ZSAqIDYsIGZzaXplICogMik7XHJcbiAgICAgICAgICAgICAgICBnbC5kcmF3QXJyYXlzKGdsLlRSSUFOR0xFUywgMCwgdC5udW1JdGVtcyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBNPykgUmVjZWl2aW5nIGFuIEFlc3RoZXRpY3Mgb2JqZWN0LCBkcmF3cyB0aGUgcG9pbnRzIGNvbnRhaW5lZCBpbiBpdCdzIEZlYXR1cmVzLCBcclxuICAgICAqIGFwbHlpbmcgdGhlIHZhbHVlcyBzcGVjaWZpZWQgaW4gdGhhdCBBZXN0aGV0aWMgb2JqZWN0IHZpc3VhbCB2YXJpYWJsZXMgKGNvbG9yIGFuZCBzaXplKS5cclxuICAgICAqIEBwYXJhbSB7QWVzdGhldGljfSBhZXMgLSBUaGUgQWVzdGhldGljIG9iamVjdC5cclxuICAgICAqIEByZXR1cm5zIHt2b2lkfVxyXG4gICAgICogQG1lbWJlck9mIE1hcFxyXG4gICAgICovXHJcbiAgICBkcmF3UG9pbnRzKGFlcykge1xyXG4gICAgICAgIGNvbnN0IGdsID0gdGhpcy5fd2ViZ2wuZ2w7XHJcbiAgICAgICAgaWYgKGdsID09PSBudWxsKVxyXG4gICAgICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICAgIGdsLmVuYWJsZShnbC5CTEVORCk7XHJcbiAgICAgICAgZ2wuYmxlbmRGdW5jKGdsLk9ORSwgZ2wuT05FX01JTlVTX1NSQ19BTFBIQSk7XHJcblxyXG4gICAgICAgIGNvbnN0IG1hdHJpeFByb2plY3Rpb24gPSBuZXcgRmxvYXQzMkFycmF5KDE2KTtcclxuICAgICAgICBjb25zdCBmc2l6ZSA9IEZsb2F0MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVDtcclxuICAgICAgICBjb25zdCBjdXJyZW50Wm9vbSA9IHRoaXMuYkdNYXAuZ2V0Wm9vbSgpO1xyXG4gICAgICAgIGNvbnN0IHNjYWxlID0gMiAqKiBjdXJyZW50Wm9vbTtcclxuICAgICAgICBjb25zdCBwb2ludFNpemUgPSBNYXRoLm1heChjdXJyZW50Wm9vbSAtIDQuMCArIGFlcy5nZXRQb2ludFNpemUoKSwgYWVzLmdldFBvaW50U2l6ZSgpKTtcclxuICAgICAgICBjb25zdCBvZmZzZXQgPSB0aGlzLmxhdExvbmdUb1BpeGVsWFkodGhpcy5iR01hcC5nZXRMbmdCb3VuZCgpLCB0aGlzLmJHTWFwLmdldExhdEJvdW5kKCkpO1xyXG4gICAgICAgIGNvbnN0IHByb2plY3Rpb25Mb2NhdGlvbiA9IGdsLmdldFVuaWZvcm1Mb2NhdGlvbih0aGlzLl93ZWJnbC5wcm9ncmFtLCAncHJvamVjdGlvbicpO1xyXG4gICAgICAgIGNvbnN0IHZlcnRleFNpemVMb2NhdGlvbiA9IGdsLmdldEF0dHJpYkxvY2F0aW9uKHRoaXMuX3dlYmdsLnByb2dyYW0sICdhUG9pbnRTaXplJyk7XHJcbiAgICAgICAgY29uc3QgdmVydGV4Q29vcmRMb2NhdGlvbiA9IGdsLmdldEF0dHJpYkxvY2F0aW9uKHRoaXMuX3dlYmdsLnByb2dyYW0sICd2ZXJ0ZXhDb29yZCcpO1xyXG4gICAgICAgIGNvbnN0IHZlcnRleENvbG9yTG9jYXRpb24gPSBnbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5fd2ViZ2wucHJvZ3JhbSwgXCJ1X2NvbG9yXCIpO1xyXG4gICAgICAgIGNvbnN0IGlzUG9pbnRMb2NhdGlvbiA9IGdsLmdldFVuaWZvcm1Mb2NhdGlvbih0aGlzLl93ZWJnbC5wcm9ncmFtLCAnaXNQb2ludCcpO1xyXG4gICAgICAgIGxldCBbciwgZywgYiwgYV0gPSBhZXMuZ2V0RmlsbENvbG9yKCk7XHJcblxyXG4gICAgICAgIG1hdHJpeFByb2plY3Rpb24uc2V0KHRoaXMuX3dlYmdsLnByb2plY3Rpb24pO1xyXG4gICAgICAgIHRoaXMuc2NhbGVQcm9qZWN0aW9uKG1hdHJpeFByb2plY3Rpb24sIHNjYWxlLCBzY2FsZSk7XHJcbiAgICAgICAgdGhpcy50cmFuc2xhdGVQcm9qZWN0aW9uKG1hdHJpeFByb2plY3Rpb24sIC1vZmZzZXQueCwgLW9mZnNldC55KTtcclxuICAgICAgICBnbC51bmlmb3JtTWF0cml4NGZ2KHByb2plY3Rpb25Mb2NhdGlvbiwgZmFsc2UsIG1hdHJpeFByb2plY3Rpb24pO1xyXG4gICAgICAgIGdsLnZlcnRleEF0dHJpYjFmKHZlcnRleFNpemVMb2NhdGlvbiwgcG9pbnRTaXplKTtcclxuICAgICAgICBnbC51bmlmb3JtMWYoaXNQb2ludExvY2F0aW9uLCAxLjApO1xyXG4gICAgICAgIGdsLnVuaWZvcm00Zih2ZXJ0ZXhDb2xvckxvY2F0aW9uLCByIC8gMjU1LCBnIC8gMjU1LCBiIC8gMjU1LCBhKTtcclxuXHJcbiAgICAgICAgbGV0IGZlYXR1cmVzID0gYWVzLmdldEZlYXR1cmVzKCk7XHJcbiAgICAgICAgbGV0IGFsbEZlYXR1cmVzID0gYWVzLmdldEFsbEZlYXR1cmVzKCk7XHJcbiAgICAgICAgaWYgKHRoaXMuZ2lzcGxheU9wdGlvbnMuaXNEeW5hbWljICYmIGFlcy5nZXRGZWF0dXJlcygpLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgZm9yIChjb25zdCBmIG9mIGZlYXR1cmVzKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgcG9pbnRzID0gZi5nZXRQb2ludHMoKTtcclxuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgcCBvZiBwb2ludHMpIHtcclxuICAgICAgICAgICAgICAgICAgICBnbC5iaW5kQnVmZmVyKGdsLkFSUkFZX0JVRkZFUiwgcCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZ2wuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkodmVydGV4Q29vcmRMb2NhdGlvbik7XHJcbiAgICAgICAgICAgICAgICAgICAgZ2wudmVydGV4QXR0cmliUG9pbnRlcih2ZXJ0ZXhDb29yZExvY2F0aW9uLCAyLCBnbC5GTE9BVCwgZmFsc2UsIGZzaXplICogMiwgMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZ2wuZHJhd0FycmF5cyhnbC5QT0lOVFMsIDAsIHAubnVtSXRlbXMpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKGFsbEZlYXR1cmVzICE9PSBudWxsICYmICF0aGlzLmdpc3BsYXlPcHRpb25zLmlzRHluYW1pYykge1xyXG4gICAgICAgICAgICBmb3IgKGNvbnN0IGFsbEYgb2YgYWxsRmVhdHVyZXMpIHtcclxuICAgICAgICAgICAgICAgIGxldCBwb2ludHMgPSBhbGxGLmdldFBvaW50cygpO1xyXG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBwIG9mIHBvaW50cykge1xyXG4gICAgICAgICAgICAgICAgICAgIGdsLmJpbmRCdWZmZXIoZ2wuQVJSQVlfQlVGRkVSLCBwKTtcclxuICAgICAgICAgICAgICAgICAgICBnbC5lbmFibGVWZXJ0ZXhBdHRyaWJBcnJheSh2ZXJ0ZXhDb29yZExvY2F0aW9uKTtcclxuICAgICAgICAgICAgICAgICAgICBnbC52ZXJ0ZXhBdHRyaWJQb2ludGVyKHZlcnRleENvb3JkTG9jYXRpb24sIDIsIGdsLkZMT0FULCBmYWxzZSwgZnNpemUgKiAyLCAwKTtcclxuICAgICAgICAgICAgICAgICAgICBnbC5kcmF3QXJyYXlzKGdsLlBPSU5UUywgMCwgcC5udW1JdGVtcyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBNPykgUmVjZWl2aW5nIGFuIEFlc3RoZXRpY3Mgb2JqZWN0LCBkcmF3cyB0aGUgcG9pbnRzIGNvbnRhaW5lZCBpbiBpdCdzIEZlYXR1cmVzLCBcclxuICAgICAqIGFwbHlpbmcgdGhlIGNvbG9yIHNwZWNpZmllZCBpbiB0aGUgQWVzaHRlaWMgb2JqZWN0IGZvciB0aGUgbGluZSBjb2xvcihBZXNodGVpYy5zdHJva2VDb2xvcikgXHJcbiAgICAgKiBhbmQgdGhlIHNpemUgb2YgdGhlIHBvaW50IGlzIGJhc2VkIG9uIHRoZSBhdHRyaWJ1dGUgdmFsdWUgYW5kIHRoZSBzcGVjaWZpZWQgbGltaXRzLlxyXG4gICAgICogQHBhcmFtIHtBZXN0aGV0aWN9IGFlcyAtIFRoZSBBZXN0aGV0aWMgb2JqZWN0LiBcclxuICAgICAqIEByZXR1cm5zIHt2b2lkfSBcclxuICAgICAqIEBtZW1iZXJPZiBNYXBcclxuICAgICAqL1xyXG4gICAgZHJhd1Byb3BvcnRpb25hbFBvaW50cyhhZXMpIHtcclxuICAgICAgICBjb25zdCBnbCA9IHRoaXMuX3dlYmdsLmdsO1xyXG4gICAgICAgIGlmIChnbCA9PT0gbnVsbClcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG5cclxuICAgICAgICBnbC5lbmFibGUoZ2wuQkxFTkQpO1xyXG4gICAgICAgIGdsLmJsZW5kRnVuYyhnbC5PTkUsIGdsLk9ORV9NSU5VU19TUkNfQUxQSEEpO1xyXG5cclxuICAgICAgICBjb25zdCBjdXJyZW50Wm9vbSA9IHRoaXMuYkdNYXAuZ2V0Wm9vbSgpO1xyXG4gICAgICAgIGNvbnN0IHNjYWxlID0gMiAqKiBjdXJyZW50Wm9vbTtcclxuICAgICAgICBjb25zdCBvZmZzZXQgPSB0aGlzLmxhdExvbmdUb1BpeGVsWFkodGhpcy5iR01hcC5nZXRMbmdCb3VuZCgpLCB0aGlzLmJHTWFwLmdldExhdEJvdW5kKCkpO1xyXG4gICAgICAgIGNvbnN0IHByb2plY3Rpb25Mb2NhdGlvbiA9IGdsLmdldFVuaWZvcm1Mb2NhdGlvbih0aGlzLl93ZWJnbC5wcm9ncmFtLCAncHJvamVjdGlvbicpO1xyXG4gICAgICAgIGNvbnN0IHZlcnRleENvb3JkTG9jYXRpb24gPSBnbC5nZXRBdHRyaWJMb2NhdGlvbih0aGlzLl93ZWJnbC5wcm9ncmFtLCAndmVydGV4Q29vcmQnKTtcclxuICAgICAgICBjb25zdCB2ZXJ0ZXhDb2xvckxvY2F0aW9uID0gZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHRoaXMuX3dlYmdsLnByb2dyYW0sIFwidV9jb2xvclwiKTtcclxuICAgICAgICBjb25zdCBpc1BvaW50TG9jYXRpb24gPSBnbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5fd2ViZ2wucHJvZ3JhbSwgJ2lzUG9pbnQnKTtcclxuICAgICAgICBjb25zdCBtYXRyaXhQcm9qZWN0aW9uID0gbmV3IEZsb2F0MzJBcnJheSgxNik7XHJcblxyXG4gICAgICAgIG1hdHJpeFByb2plY3Rpb24uc2V0KHRoaXMuX3dlYmdsLnByb2plY3Rpb24pO1xyXG4gICAgICAgIHRoaXMuc2NhbGVQcm9qZWN0aW9uKG1hdHJpeFByb2plY3Rpb24sIHNjYWxlLCBzY2FsZSk7XHJcbiAgICAgICAgdGhpcy50cmFuc2xhdGVQcm9qZWN0aW9uKG1hdHJpeFByb2plY3Rpb24sIC1vZmZzZXQueCwgLW9mZnNldC55KTtcclxuICAgICAgICBnbC51bmlmb3JtTWF0cml4NGZ2KHByb2plY3Rpb25Mb2NhdGlvbiwgZmFsc2UsIG1hdHJpeFByb2plY3Rpb24pO1xyXG4gICAgICAgIGdsLnVuaWZvcm0xZihpc1BvaW50TG9jYXRpb24sIDEuMCk7XHJcblxyXG4gICAgICAgIGxldCBbciwgZywgYiwgYV0gPSBhZXMuZ2V0RmlsbENvbG9yKCk7XHJcbiAgICAgICAgZ2wudW5pZm9ybTRmKHZlcnRleENvbG9yTG9jYXRpb24sIHIgLyAyNTUsIGcgLyAyNTUsIGIgLyAyNTUsIHRoaXMuZ2lzcGxheU9wdGlvbnMuYWxwaGEpOyAvL1RPRE86IFBhcmEgMi41RCB1c2FyIGFscGhhIGEgMD9cclxuXHJcbiAgICAgICAgY29uc3QgZnNpemUgPSBGbG9hdDMyQXJyYXkuQllURVNfUEVSX0VMRU1FTlQ7XHJcbiAgICAgICAgbGV0IG9wdHMgPSB0aGlzLmdpc3BsYXlPcHRpb25zO1xyXG4gICAgICAgIGlmICh0aGlzLmdpc3BsYXlPcHRpb25zLmlzRHluYW1pYykge1xyXG4gICAgICAgICAgICBsZXQgZmVhdHVyZXMgPSBhZXMuZ2V0RmVhdHVyZXMoKTtcclxuICAgICAgICAgICAgZm9yIChjb25zdCBmIG9mIGZlYXR1cmVzKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgcG9pbnRzID0gZi5nZXRQb2ludHMoKTtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IHAgb2YgcG9pbnRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZ2wuYmluZEJ1ZmZlcihnbC5BUlJBWV9CVUZGRVIsIHApO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHByb3B2YWx1ZSA9IHBhcnNlRmxvYXQoZi5nZXRQcm9wZXJ0aWVzKClbb3B0cy5hdHRyXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdGVtcHBvaW50c2l6ZSA9ICgob3B0cy5tYXhQb2ludFNpemUgLSBvcHRzLm1pblBvaW50U2l6ZSkgLyAodGhpcy5tYXggLSB0aGlzLm1pbikpICogKHByb3B2YWx1ZSAtIHRoaXMubWluKTtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBwb2ludFNpemUgPSBNYXRoLm1heChjdXJyZW50Wm9vbSAtIDQuMCArIHRlbXBwb2ludHNpemUgKiBjdXJyZW50Wm9vbSAvIDQsIDIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZlcnRleFNpemVMb2NhdGlvbiA9IGdsLmdldEF0dHJpYkxvY2F0aW9uKHRoaXMuX3dlYmdsLnByb2dyYW0sICdhUG9pbnRTaXplJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgZ2wudmVydGV4QXR0cmliMWYodmVydGV4U2l6ZUxvY2F0aW9uLCBwb2ludFNpemUpO1xyXG4gICAgICAgICAgICAgICAgICAgIGdsLmVuYWJsZVZlcnRleEF0dHJpYkFycmF5KHZlcnRleENvb3JkTG9jYXRpb24pO1xyXG4gICAgICAgICAgICAgICAgICAgIGdsLnZlcnRleEF0dHJpYlBvaW50ZXIodmVydGV4Q29vcmRMb2NhdGlvbiwgMiwgZ2wuRkxPQVQsIGZhbHNlLCBmc2l6ZSAqIDIsIDApO1xyXG4gICAgICAgICAgICAgICAgICAgIGdsLmRyYXdBcnJheXMoZ2wuUE9JTlRTLCAwLCBwLm51bUl0ZW1zKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKiogIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjICAgIEFCU1RSQUNUIE1FVEhPRFMgICAgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjICovXHJcbiAgICAvKipcclxuICAgICAqIE0xOSkgRHJhdyBtYXAgZnVuY3Rpb24uIE11c3QgYmUgb3ZlcnJpZGVuIGJ5IHN1YmNsYXNzZXMuXHJcbiAgICAgKiBAYWJzdHJhY3QgXHJcbiAgICAgKi9cclxuICAgIGRyYXcoKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRHJhdyBtdXN0IGJlIGltcGxlbWVudGVkIGJ5IHN1YmNsYXNzLlwiKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIERlZmF1bHRzIGZvciBlYWNoIG1hcC4gU3ViY2xhc3NlcyBzaG91bGQgb3ZlcnJpZGUgdGhpcyBtZXRob2QuXHJcbiAgICAgKiBAcGFyYW0ge2FueX0gZGVmYXVsdElkIFxyXG4gICAgICogQGFic3RyYWN0IFxyXG4gICAgICogQG1lbWJlck9mIE1hcFxyXG4gICAgICovXHJcbiAgICBkZWZhdWx0cyhkZWZhdWx0SWQpIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGlzIG1hcCBoYXMgbm8gZGVmYXVsdHMgZGVmaW5lZC5cIik7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGlzIGZ1bmN0aW9uIHNob3VsZCBiZSBpbXBsZW1lbnRlZCBieSBhbnkgc3ViY2xhc3MgdGhhdCB3YW50cyB0byB1c2UgYW5vdGhlciB3YXkgb2YgcHJvY2Vzc2luZyBkYXRhLlxyXG4gICAgICogQnkgZGVmYXVsdCBpdCBsb2FkcyBHZW9KU09OIGJ1dCBpZiB0aGUgdXNlciB3YW50cyB0byBsb2FkIGFub3RoZXIgdHlwZSBvZiBkYXRhIGl0IHNob3VsZCBkbyBzbyBieSBpbXBsZW1lbnRpbmcgdGhpcyBtZXRob2QuXHJcbiAgICAgKiBBIGZ1bmN0aW9uIHNpbWlsYXIgdG8gbG9hZEdlb0pTT04gc2hvdWxkIGFsc28gYmUgaW1wbGVtZW50ZWRcclxuICAgICAqIEBwYXJhbSB7T2JqZWN0fEpTT059IGRhdGEgLSBEYXRhc2V0IHRvIGJlIHVzZWQuIFxyXG4gICAgICogVE9ETzogQWRkIHN0YXRpYyB0byB0aGlzIG1ldGhvZC5cclxuICAgICAqIEBhYnN0cmFjdFxyXG4gICAgICovXHJcbiAgICBwcm9jZXNzRGF0YShkYXRhKSB7XHJcbiAgICAgICAgdGhpcy5sb2FkR2VvSlNPTihnZW9qc29uKTtcclxuICAgIH1cclxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvR2lzcGxheS9NYXBzL01hcC5qcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7OztBQUNBOzs7OztBQUtBO0FBQ0E7QUFDQTs7Ozs7OztBQU9BO0FBQUE7QUFDQTtBQUFBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7Ozs7QUFJQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7Ozs7O0FBS0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7O0FBTUE7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FBSUE7QUFBQTtBQUNBO0FBQUE7Ozs7OztBQU1BO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztBQUlBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFhQTtBQUFBO0FBeUJBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7OztBQVFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7QUFXQTtBQUFBO0FBQ0E7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFFQTtBQURBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFEQTtBQUZBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFLQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFFQTtBQURBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFEQTtBQUZBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFLQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FBSUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7O0FBVUE7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFJQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7O0FBVUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBZkE7QUFpQkE7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7O0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7QUFRQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUVBO0FBREE7QUFIQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBT0E7QUFBQTtBQUNBO0FBQUE7QUFEQTtBQVBBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQVNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7QUFPQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQURBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFFQTtBQUFBO0FBQ0E7QUFBQTtBQURBO0FBRkE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBR0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7OztBQVNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7OztBQVVBO0FBQ0E7QUFDQTtBQURBO0FBR0E7QUFDQTtBQUNBOzs7Ozs7Ozs7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBSUE7QUFDQTtBQUNBOzs7Ozs7Ozs7OztBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7QUFZQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBbkJBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFvQkE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBNUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQTZDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7O0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFoQkE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFpQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBMUJBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUEyQkE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBRUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVBBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFRQTtBQW5DQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBb0NBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7QUFXQTtBQUNBO0FBQ0E7QUFEQTtBQUVBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7O0FBU0E7QUFDQTtBQUNBO0FBREE7QUFFQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQW5CQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQW9CQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUE3QkE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQThCQTtBQUFBO0FBQ0E7QUFBQTtBQURBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFFQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUEE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQVFBO0FBdENBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUF1Q0E7QUFDQTtBQUNBOzs7Ozs7Ozs7O0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBeEJBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUF5QkE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBR0E7QUFJQTtBQVZBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQVdBO0FBQ0E7QUFDQTtBQWRBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFlQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBcEJBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFxQkE7QUE5Q0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQStDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQW5CQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQW9CQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBREE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUVBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFQQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBUUE7QUFUQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBVUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFEQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBRUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVBBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFRQTtBQVRBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFVQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQXRCQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQXVCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBRUE7QUFBQTtBQUNBO0FBQUE7QUFEQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBRUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFaQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBYUE7QUFmQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBZ0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7OztBQVFBO0FBQ0E7QUFDQTs7OzsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 2 */
/* unknown exports provided */
/* all exports used */
/*!***************************************!*\
  !*** ./src/Gisplay/Maps/Aesthetic.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Aesthetic = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Feature = __webpack_require__(/*! ./Feature */ 7);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * Class that represents an aesthetic element. There will be one Aesthetic class for each class on the Legend.\r\n * @export\r\n * @class Aesthetic\r\n */\nvar Aesthetic = exports.Aesthetic = function () {\n\n    /**\r\n     * Creates an instance of Aesthetic. \r\n     * There will be as many Aesthetic objects as the number of classes on the Legend. \r\n     * @example 1-> {\"id\":0,\"attr\":\"f3\",\"fcolor\":[255,255,255,0.8],\r\n     *         \"stroke\":[0,0,0,1],\"pointsize\":null,\"range\":[1,37]}\r\n     * @example 2-> {\"id\":1,\"attr\":\"f3\",\"fcolor\":[255,255,0,0.8],\r\n     *         \"stroke\":[0,0,0,1],\"pointsize\":null,\"range\":[37,78]}\r\n     * @param {number} id - The unique id of the Aesthetic object.\r\n     * @param {string} attr - The attribute being mapped on this Aesthetic.\r\n     * @param {number[]|Function} fcolor - The color to fill the Aesthetic element(RGBA).\r\n     * @param {number[]} stroke - Stroke color values(RGBA).\r\n     * @param {number|null} pointsize - Size of the Aesthetic point to be drawn (Used only in maps that require dots to be drawn).\r\n     * @param {number[]} range - The range for this particular Aesthetic element.\r\n     * \r\n     * @memberOf Aesthetic\r\n     */\n    function Aesthetic(id, attr, fcolor, stroke, pointsize, range) {\n        _classCallCheck(this, Aesthetic);\n\n        /**\r\n         * The unique id of the Aesthetic object. \r\n         * @type {number}\r\n         */\n        this.id = id;\n        /**\r\n         * The attribute being mapped on the Aesthetic.\r\n         * @type {string}\r\n         */\n        this._attr = attr;\n        /**\r\n         * The color to fill the Aesthetic element(RGBA) OR a function to create this color.\r\n         * @type {number[4]|Function}\r\n         */\n        this.fillColor = fcolor;\n        /**\r\n         * Stroke color values(RGBA).\r\n         * @type {number[4]}\r\n         */\n        this.strokeColor = stroke;\n        /**\r\n         * The size of the Aesthetic point to be drawn (Used only in maps that require dots to be drawn).\r\n         * @type {number|null}\r\n         */\n        this.pointSize = pointsize === null ? 1.0 : parseFloat(pointsize);\n        /**\r\n         * The range for this particular Aesthetic element.\r\n         * @type {number[2]}\r\n         */\n        this.range = range;\n        /**\r\n         * This Array will keep track of all Features associated with this Aesthetic object.\r\n         * @type {Array<Feature>}\r\n         */\n        this._features = new Array();\n        /**\r\n         * This Array is used for? \r\n         * @todo\r\n         * @type {Array<Feature>}\r\n         */\n        this._allFeatures = new Array();\n        /**\r\n         * This particular element will be active or not in the Legend.\r\n         * @type {boolean}\r\n         */\n        this.enabled = true; //Elemento da legenda ativo ou desativo\n        /**\r\n         * Outer of? This is used for what?\r\n         * @type {boolean}\r\n         */\n        this.outer = false;\n    }\n\n    /**\r\n     * Adds a new feature to this Aesthetic object.\r\n     * @param {number} id - The Feature id. Each feature will have a different id inside this Aesthetic object.\r\n     * @param {{fx: string, _gisplayid:number}} properties - Properties associated with the Feature.\r\n     * @param {{itemSize: number, numItems: number}} triangles - Number of triangles associated with the Feature.\r\n     * @param {{itemSize: number, numItems: number}} borders - Number of borders associated with the Feature.\r\n     * @param {{itemSize: number, numItems: number}} points - The points that belong to the Feature.\r\n     * \r\n     * @memberOf Aesthetic\r\n     */\n\n\n    _createClass(Aesthetic, [{\n        key: 'addFeature',\n        value: function addFeature(id, properties, triangles, borders, points) {\n            this._features.push(new _Feature.Feature(id, properties, triangles, borders, points));\n        }\n\n        /**\r\n         * Gets this Aesthetic attribute.\r\n         * @returns {Aesthetic._attr} - The string representing the attr of this Aesthetic.\r\n         * \r\n         * @memberOf Aesthetic\r\n         */\n\n    }, {\n        key: 'getAttr',\n        value: function getAttr() {\n            return this._attr;\n        }\n\n        /**\r\n         * Verifies the existence or not of the property Aesthethic._attr and if it fits inside this Aesthetic range.\r\n         * @param {string} value - The attribute ?.\r\n         * @returns {boolean} - True if there's no range or it is inside the range or ?, otherwise, false.\r\n         * \r\n         * @memberOf Aesthetic\r\n         */\n\n    }, {\n        key: 'checkProperty',\n        value: function checkProperty(value) {\n            if (this.range === null) return true;else {\n                if (typeof value === 'number') return (this.range[0] === null || value >= this.range[0]) && (this.range[1] === null || value < this.range[1] || value <= this.range[1] && this.isOuter());else return value === this.range[0];\n            }\n        }\n\n        /**\r\n         * Add new grouped feature. Only used for Maps with points. \r\n         * @todo Finish document of this method.\r\n         * @param {number} id - The id of the Feature.\r\n         * @param {{buffer: WebGLBuffer, itemSize: number, numItems: number}} triangles - Triangles that belong to the Feature.\r\n         * @param {{buffer: WebGLBuffer, itemSize: number, numItems: number}} borders - Borders that belong to the Feature.\r\n         * @param {{buffer: WebGLBuffer, itemSize: number, numItems: number}} points - Points that belong to the Feature.\r\n         * @see Diogo's thesis page 57/58\r\n         */\n\n    }, {\n        key: 'addGroupedFeature',\n        value: function addGroupedFeature(id, triangles, borders, points) {\n            this._allFeatures.push(new _Feature.Feature(id, null, triangles, borders, points));\n        }\n\n        /**\r\n         * Inverts this Aesthetic element state in the Legend object.\r\n         * If it was enabled it will be disabled or vice-versa.\r\n         * @returns {boolean} Inverse of current enabled value.\r\n         */\n\n    }, {\n        key: 'enableDisable',\n        value: function enableDisable() {\n            this.enabled = !this.enabled;\n            return this.enabled;\n        }\n\n        /**\r\n         * Returns all Features that belong to this Aesthetic object.\r\n         * @returns {Array<Feature>} - All the Features of this Aeshtetic.\r\n         * @memberOf Aesthetic\r\n         */\n\n    }, {\n        key: 'getFeatures',\n        value: function getFeatures() {\n            return this._features;\n        }\n\n        /**\r\n         * Returns all Features as one?\r\n         * @returns {Array<Feature>} - All features grouped together?\r\n         * @memberOf Aesthetic\r\n         */\n\n    }, {\n        key: 'getAllFeatures',\n        value: function getAllFeatures() {\n            return this._allFeatures;\n        }\n\n        /**\r\n         * Returns the stroke color for this Aesthetic object.\r\n         * @returns {Aesthetic#strokeColor}\r\n         * @memberOf Aesthetic\r\n         */\n\n    }, {\n        key: 'getStrokeColor',\n        value: function getStrokeColor() {\n            return this.strokeColor;\n        }\n\n        /**\r\n         * Returns the fill color for this Aesthetic object.\r\n         * @returns {Aesthetic#fillColor}\r\n         * @memberOf Aesthetic\r\n         */\n\n    }, {\n        key: 'getFillColor',\n        value: function getFillColor() {\n            return this.fillColor;\n        }\n\n        /**\r\n         * Returns the size of this Aesthetic points.\r\n         * @returns {number} - The size of the point. \r\n         * @memberOf Aesthetic\r\n         */\n\n    }, {\n        key: 'getPointSize',\n        value: function getPointSize() {\n            return this.pointSize;\n        }\n\n        /**\r\n         * Returns if this Aesthetic is outer or not.\r\n         * @returns {boolean} - true if it is outer, false, otherwise.\r\n         * @memberOf Aesthetic\r\n         */\n\n    }, {\n        key: 'isOuter',\n        value: function isOuter() {\n            return this.outer;\n        }\n\n        /**\r\n         * Verifies if this Aeshtetic element is enable on the Legend or not.\r\n         * @returns {boolean} - True if it's enabled, false, otherwise.\r\n         * @memberOf Aesthetic\r\n         */\n\n    }, {\n        key: 'isEnabled',\n        value: function isEnabled() {\n            return this.enabled;\n        }\n    }]);\n\n    return Aesthetic;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvR2lzcGxheS9NYXBzL0Flc3RoZXRpYy5qcz8wZTVhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZlYXR1cmUgfSBmcm9tICcuL0ZlYXR1cmUnO1xyXG5cclxuLyoqXHJcbiAqIENsYXNzIHRoYXQgcmVwcmVzZW50cyBhbiBhZXN0aGV0aWMgZWxlbWVudC4gVGhlcmUgd2lsbCBiZSBvbmUgQWVzdGhldGljIGNsYXNzIGZvciBlYWNoIGNsYXNzIG9uIHRoZSBMZWdlbmQuXHJcbiAqIEBleHBvcnRcclxuICogQGNsYXNzIEFlc3RoZXRpY1xyXG4gKi9cclxuZXhwb3J0IGNsYXNzIEFlc3RoZXRpYyB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGVzIGFuIGluc3RhbmNlIG9mIEFlc3RoZXRpYy4gXHJcbiAgICAgKiBUaGVyZSB3aWxsIGJlIGFzIG1hbnkgQWVzdGhldGljIG9iamVjdHMgYXMgdGhlIG51bWJlciBvZiBjbGFzc2VzIG9uIHRoZSBMZWdlbmQuIFxyXG4gICAgICogQGV4YW1wbGUgMS0+IHtcImlkXCI6MCxcImF0dHJcIjpcImYzXCIsXCJmY29sb3JcIjpbMjU1LDI1NSwyNTUsMC44XSxcclxuICAgICAqICAgICAgICAgXCJzdHJva2VcIjpbMCwwLDAsMV0sXCJwb2ludHNpemVcIjpudWxsLFwicmFuZ2VcIjpbMSwzN119XHJcbiAgICAgKiBAZXhhbXBsZSAyLT4ge1wiaWRcIjoxLFwiYXR0clwiOlwiZjNcIixcImZjb2xvclwiOlsyNTUsMjU1LDAsMC44XSxcclxuICAgICAqICAgICAgICAgXCJzdHJva2VcIjpbMCwwLDAsMV0sXCJwb2ludHNpemVcIjpudWxsLFwicmFuZ2VcIjpbMzcsNzhdfVxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGlkIC0gVGhlIHVuaXF1ZSBpZCBvZiB0aGUgQWVzdGhldGljIG9iamVjdC5cclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBhdHRyIC0gVGhlIGF0dHJpYnV0ZSBiZWluZyBtYXBwZWQgb24gdGhpcyBBZXN0aGV0aWMuXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcltdfEZ1bmN0aW9ufSBmY29sb3IgLSBUaGUgY29sb3IgdG8gZmlsbCB0aGUgQWVzdGhldGljIGVsZW1lbnQoUkdCQSkuXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcltdfSBzdHJva2UgLSBTdHJva2UgY29sb3IgdmFsdWVzKFJHQkEpLlxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ8bnVsbH0gcG9pbnRzaXplIC0gU2l6ZSBvZiB0aGUgQWVzdGhldGljIHBvaW50IHRvIGJlIGRyYXduIChVc2VkIG9ubHkgaW4gbWFwcyB0aGF0IHJlcXVpcmUgZG90cyB0byBiZSBkcmF3bikuXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcltdfSByYW5nZSAtIFRoZSByYW5nZSBmb3IgdGhpcyBwYXJ0aWN1bGFyIEFlc3RoZXRpYyBlbGVtZW50LlxyXG4gICAgICogXHJcbiAgICAgKiBAbWVtYmVyT2YgQWVzdGhldGljXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKGlkLCBhdHRyLCBmY29sb3IsIHN0cm9rZSwgcG9pbnRzaXplLCByYW5nZSkge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFRoZSB1bmlxdWUgaWQgb2YgdGhlIEFlc3RoZXRpYyBvYmplY3QuIFxyXG4gICAgICAgICAqIEB0eXBlIHtudW1iZXJ9XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5pZCA9IGlkO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFRoZSBhdHRyaWJ1dGUgYmVpbmcgbWFwcGVkIG9uIHRoZSBBZXN0aGV0aWMuXHJcbiAgICAgICAgICogQHR5cGUge3N0cmluZ31cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLl9hdHRyID0gYXR0cjtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBUaGUgY29sb3IgdG8gZmlsbCB0aGUgQWVzdGhldGljIGVsZW1lbnQoUkdCQSkgT1IgYSBmdW5jdGlvbiB0byBjcmVhdGUgdGhpcyBjb2xvci5cclxuICAgICAgICAgKiBAdHlwZSB7bnVtYmVyWzRdfEZ1bmN0aW9ufVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuZmlsbENvbG9yID0gZmNvbG9yO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFN0cm9rZSBjb2xvciB2YWx1ZXMoUkdCQSkuXHJcbiAgICAgICAgICogQHR5cGUge251bWJlcls0XX1cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLnN0cm9rZUNvbG9yID0gc3Ryb2tlO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFRoZSBzaXplIG9mIHRoZSBBZXN0aGV0aWMgcG9pbnQgdG8gYmUgZHJhd24gKFVzZWQgb25seSBpbiBtYXBzIHRoYXQgcmVxdWlyZSBkb3RzIHRvIGJlIGRyYXduKS5cclxuICAgICAgICAgKiBAdHlwZSB7bnVtYmVyfG51bGx9XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5wb2ludFNpemUgPSBwb2ludHNpemUgPT09IG51bGwgPyAxLjAgOiBwYXJzZUZsb2F0KHBvaW50c2l6ZSk7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogVGhlIHJhbmdlIGZvciB0aGlzIHBhcnRpY3VsYXIgQWVzdGhldGljIGVsZW1lbnQuXHJcbiAgICAgICAgICogQHR5cGUge251bWJlclsyXX1cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLnJhbmdlID0gcmFuZ2U7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogVGhpcyBBcnJheSB3aWxsIGtlZXAgdHJhY2sgb2YgYWxsIEZlYXR1cmVzIGFzc29jaWF0ZWQgd2l0aCB0aGlzIEFlc3RoZXRpYyBvYmplY3QuXHJcbiAgICAgICAgICogQHR5cGUge0FycmF5PEZlYXR1cmU+fVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuX2ZlYXR1cmVzID0gbmV3IEFycmF5KCk7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogVGhpcyBBcnJheSBpcyB1c2VkIGZvcj8gXHJcbiAgICAgICAgICogQHRvZG9cclxuICAgICAgICAgKiBAdHlwZSB7QXJyYXk8RmVhdHVyZT59XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5fYWxsRmVhdHVyZXMgPSBuZXcgQXJyYXkoKTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBUaGlzIHBhcnRpY3VsYXIgZWxlbWVudCB3aWxsIGJlIGFjdGl2ZSBvciBub3QgaW4gdGhlIExlZ2VuZC5cclxuICAgICAgICAgKiBAdHlwZSB7Ym9vbGVhbn1cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLmVuYWJsZWQgPSB0cnVlOy8vRWxlbWVudG8gZGEgbGVnZW5kYSBhdGl2byBvdSBkZXNhdGl2b1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIE91dGVyIG9mPyBUaGlzIGlzIHVzZWQgZm9yIHdoYXQ/XHJcbiAgICAgICAgICogQHR5cGUge2Jvb2xlYW59XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5vdXRlciA9IGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQWRkcyBhIG5ldyBmZWF0dXJlIHRvIHRoaXMgQWVzdGhldGljIG9iamVjdC5cclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBpZCAtIFRoZSBGZWF0dXJlIGlkLiBFYWNoIGZlYXR1cmUgd2lsbCBoYXZlIGEgZGlmZmVyZW50IGlkIGluc2lkZSB0aGlzIEFlc3RoZXRpYyBvYmplY3QuXHJcbiAgICAgKiBAcGFyYW0ge3tmeDogc3RyaW5nLCBfZ2lzcGxheWlkOm51bWJlcn19IHByb3BlcnRpZXMgLSBQcm9wZXJ0aWVzIGFzc29jaWF0ZWQgd2l0aCB0aGUgRmVhdHVyZS5cclxuICAgICAqIEBwYXJhbSB7e2l0ZW1TaXplOiBudW1iZXIsIG51bUl0ZW1zOiBudW1iZXJ9fSB0cmlhbmdsZXMgLSBOdW1iZXIgb2YgdHJpYW5nbGVzIGFzc29jaWF0ZWQgd2l0aCB0aGUgRmVhdHVyZS5cclxuICAgICAqIEBwYXJhbSB7e2l0ZW1TaXplOiBudW1iZXIsIG51bUl0ZW1zOiBudW1iZXJ9fSBib3JkZXJzIC0gTnVtYmVyIG9mIGJvcmRlcnMgYXNzb2NpYXRlZCB3aXRoIHRoZSBGZWF0dXJlLlxyXG4gICAgICogQHBhcmFtIHt7aXRlbVNpemU6IG51bWJlciwgbnVtSXRlbXM6IG51bWJlcn19IHBvaW50cyAtIFRoZSBwb2ludHMgdGhhdCBiZWxvbmcgdG8gdGhlIEZlYXR1cmUuXHJcbiAgICAgKiBcclxuICAgICAqIEBtZW1iZXJPZiBBZXN0aGV0aWNcclxuICAgICAqL1xyXG4gICAgYWRkRmVhdHVyZShpZCwgcHJvcGVydGllcywgdHJpYW5nbGVzLCBib3JkZXJzLCBwb2ludHMpIHtcclxuICAgICAgICB0aGlzLl9mZWF0dXJlcy5wdXNoKG5ldyBGZWF0dXJlKGlkLCBwcm9wZXJ0aWVzLCB0cmlhbmdsZXMsIGJvcmRlcnMsIHBvaW50cykpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyB0aGlzIEFlc3RoZXRpYyBhdHRyaWJ1dGUuXHJcbiAgICAgKiBAcmV0dXJucyB7QWVzdGhldGljLl9hdHRyfSAtIFRoZSBzdHJpbmcgcmVwcmVzZW50aW5nIHRoZSBhdHRyIG9mIHRoaXMgQWVzdGhldGljLlxyXG4gICAgICogXHJcbiAgICAgKiBAbWVtYmVyT2YgQWVzdGhldGljXHJcbiAgICAgKi9cclxuICAgIGdldEF0dHIoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2F0dHI7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBWZXJpZmllcyB0aGUgZXhpc3RlbmNlIG9yIG5vdCBvZiB0aGUgcHJvcGVydHkgQWVzdGhldGhpYy5fYXR0ciBhbmQgaWYgaXQgZml0cyBpbnNpZGUgdGhpcyBBZXN0aGV0aWMgcmFuZ2UuXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWUgLSBUaGUgYXR0cmlidXRlID8uXHJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gLSBUcnVlIGlmIHRoZXJlJ3Mgbm8gcmFuZ2Ugb3IgaXQgaXMgaW5zaWRlIHRoZSByYW5nZSBvciA/LCBvdGhlcndpc2UsIGZhbHNlLlxyXG4gICAgICogXHJcbiAgICAgKiBAbWVtYmVyT2YgQWVzdGhldGljXHJcbiAgICAgKi9cclxuICAgIGNoZWNrUHJvcGVydHkodmFsdWUpIHtcclxuICAgICAgICBpZiAodGhpcy5yYW5nZSA9PT0gbnVsbClcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuICgodGhpcy5yYW5nZVswXSA9PT0gbnVsbCB8fCB2YWx1ZSA+PSB0aGlzLnJhbmdlWzBdKSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICh0aGlzLnJhbmdlWzFdID09PSBudWxsIHx8ICh2YWx1ZSA8IHRoaXMucmFuZ2VbMV0gfHwgKHZhbHVlIDw9IHRoaXMucmFuZ2VbMV0gJiYgdGhpcy5pc091dGVyKCkpKSkpO1xyXG4gICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gKHZhbHVlID09PSB0aGlzLnJhbmdlWzBdKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBBZGQgbmV3IGdyb3VwZWQgZmVhdHVyZS4gT25seSB1c2VkIGZvciBNYXBzIHdpdGggcG9pbnRzLiBcclxuICAgICAqIEB0b2RvIEZpbmlzaCBkb2N1bWVudCBvZiB0aGlzIG1ldGhvZC5cclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBpZCAtIFRoZSBpZCBvZiB0aGUgRmVhdHVyZS5cclxuICAgICAqIEBwYXJhbSB7e2J1ZmZlcjogV2ViR0xCdWZmZXIsIGl0ZW1TaXplOiBudW1iZXIsIG51bUl0ZW1zOiBudW1iZXJ9fSB0cmlhbmdsZXMgLSBUcmlhbmdsZXMgdGhhdCBiZWxvbmcgdG8gdGhlIEZlYXR1cmUuXHJcbiAgICAgKiBAcGFyYW0ge3tidWZmZXI6IFdlYkdMQnVmZmVyLCBpdGVtU2l6ZTogbnVtYmVyLCBudW1JdGVtczogbnVtYmVyfX0gYm9yZGVycyAtIEJvcmRlcnMgdGhhdCBiZWxvbmcgdG8gdGhlIEZlYXR1cmUuXHJcbiAgICAgKiBAcGFyYW0ge3tidWZmZXI6IFdlYkdMQnVmZmVyLCBpdGVtU2l6ZTogbnVtYmVyLCBudW1JdGVtczogbnVtYmVyfX0gcG9pbnRzIC0gUG9pbnRzIHRoYXQgYmVsb25nIHRvIHRoZSBGZWF0dXJlLlxyXG4gICAgICogQHNlZSBEaW9nbydzIHRoZXNpcyBwYWdlIDU3LzU4XHJcbiAgICAgKi9cclxuICAgIGFkZEdyb3VwZWRGZWF0dXJlKGlkLCB0cmlhbmdsZXMsIGJvcmRlcnMsIHBvaW50cykge1xyXG4gICAgICAgIHRoaXMuX2FsbEZlYXR1cmVzLnB1c2gobmV3IEZlYXR1cmUoaWQsIG51bGwsIHRyaWFuZ2xlcywgYm9yZGVycywgcG9pbnRzKSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBJbnZlcnRzIHRoaXMgQWVzdGhldGljIGVsZW1lbnQgc3RhdGUgaW4gdGhlIExlZ2VuZCBvYmplY3QuXHJcbiAgICAgKiBJZiBpdCB3YXMgZW5hYmxlZCBpdCB3aWxsIGJlIGRpc2FibGVkIG9yIHZpY2UtdmVyc2EuXHJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gSW52ZXJzZSBvZiBjdXJyZW50IGVuYWJsZWQgdmFsdWUuXHJcbiAgICAgKi9cclxuICAgIGVuYWJsZURpc2FibGUoKSB7XHJcbiAgICAgICAgdGhpcy5lbmFibGVkID0gIXRoaXMuZW5hYmxlZDtcclxuICAgICAgICByZXR1cm4gdGhpcy5lbmFibGVkO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBhbGwgRmVhdHVyZXMgdGhhdCBiZWxvbmcgdG8gdGhpcyBBZXN0aGV0aWMgb2JqZWN0LlxyXG4gICAgICogQHJldHVybnMge0FycmF5PEZlYXR1cmU+fSAtIEFsbCB0aGUgRmVhdHVyZXMgb2YgdGhpcyBBZXNodGV0aWMuXHJcbiAgICAgKiBAbWVtYmVyT2YgQWVzdGhldGljXHJcbiAgICAgKi9cclxuICAgIGdldEZlYXR1cmVzKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9mZWF0dXJlcztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgYWxsIEZlYXR1cmVzIGFzIG9uZT9cclxuICAgICAqIEByZXR1cm5zIHtBcnJheTxGZWF0dXJlPn0gLSBBbGwgZmVhdHVyZXMgZ3JvdXBlZCB0b2dldGhlcj9cclxuICAgICAqIEBtZW1iZXJPZiBBZXN0aGV0aWNcclxuICAgICAqL1xyXG4gICAgZ2V0QWxsRmVhdHVyZXMoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2FsbEZlYXR1cmVzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB0aGUgc3Ryb2tlIGNvbG9yIGZvciB0aGlzIEFlc3RoZXRpYyBvYmplY3QuXHJcbiAgICAgKiBAcmV0dXJucyB7QWVzdGhldGljI3N0cm9rZUNvbG9yfVxyXG4gICAgICogQG1lbWJlck9mIEFlc3RoZXRpY1xyXG4gICAgICovXHJcbiAgICBnZXRTdHJva2VDb2xvcigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5zdHJva2VDb2xvcjtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgdGhlIGZpbGwgY29sb3IgZm9yIHRoaXMgQWVzdGhldGljIG9iamVjdC5cclxuICAgICAqIEByZXR1cm5zIHtBZXN0aGV0aWMjZmlsbENvbG9yfVxyXG4gICAgICogQG1lbWJlck9mIEFlc3RoZXRpY1xyXG4gICAgICovXHJcbiAgICBnZXRGaWxsQ29sb3IoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZmlsbENvbG9yO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB0aGUgc2l6ZSBvZiB0aGlzIEFlc3RoZXRpYyBwb2ludHMuXHJcbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfSAtIFRoZSBzaXplIG9mIHRoZSBwb2ludC4gXHJcbiAgICAgKiBAbWVtYmVyT2YgQWVzdGhldGljXHJcbiAgICAgKi9cclxuICAgIGdldFBvaW50U2l6ZSgpe1xyXG4gICAgICAgIHJldHVybiB0aGlzLnBvaW50U2l6ZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgaWYgdGhpcyBBZXN0aGV0aWMgaXMgb3V0ZXIgb3Igbm90LlxyXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59IC0gdHJ1ZSBpZiBpdCBpcyBvdXRlciwgZmFsc2UsIG90aGVyd2lzZS5cclxuICAgICAqIEBtZW1iZXJPZiBBZXN0aGV0aWNcclxuICAgICAqL1xyXG4gICAgaXNPdXRlcigpe1xyXG4gICAgICAgIHJldHVybiB0aGlzLm91dGVyO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVmVyaWZpZXMgaWYgdGhpcyBBZXNodGV0aWMgZWxlbWVudCBpcyBlbmFibGUgb24gdGhlIExlZ2VuZCBvciBub3QuXHJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gLSBUcnVlIGlmIGl0J3MgZW5hYmxlZCwgZmFsc2UsIG90aGVyd2lzZS5cclxuICAgICAqIEBtZW1iZXJPZiBBZXN0aGV0aWNcclxuICAgICAqL1xyXG4gICAgaXNFbmFibGVkKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmVuYWJsZWQ7XHJcbiAgICB9XHJcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL0dpc3BsYXkvTWFwcy9BZXN0aGV0aWMuanMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7OztBQUNBOzs7OztBQUtBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7OztBQWdCQTtBQUFBO0FBQ0E7QUFBQTs7OztBQUlBO0FBQ0E7Ozs7QUFJQTtBQUNBOzs7O0FBSUE7QUFDQTs7OztBQUlBO0FBQ0E7Ozs7QUFJQTtBQUNBOzs7O0FBSUE7QUFDQTs7OztBQUlBO0FBQ0E7Ozs7O0FBS0E7QUFDQTs7OztBQUlBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7QUFVQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7O0FBT0E7QUFDQTtBQUdBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7OztBQVNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7OztBQUtBO0FBQ0E7QUFDQTs7OzsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 3 */
/* unknown exports provided */
/* all exports used */
/*!**********************************************!*\
  !*** ./src/Gisplay/Maps/Types/Choropleth.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Choropleth = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Map2 = __webpack_require__(/*! ../Map */ 1);\n\nvar _Legend = __webpack_require__(/*! ../Legend */ 0);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\r\n * Choropleth implementation 06/03 - 23/03\r\n */\nvar Choropleth = exports.Choropleth = function (_Map) {\n    _inherits(Choropleth, _Map);\n\n    /**\r\n     * Creates an instance of Choropleth.\r\n     * @param {BGMapWrapper} bgmap - Background map object.\r\n     * @param {JSON} geometry - JSON object with the geometry that was read from the file.\r\n     * @param {Object} userOptions - User options to be used.\r\n     * @memberOf Choropleth\r\n     */\n    function Choropleth(bgmap, geometry, userOptions) {\n        _classCallCheck(this, Choropleth);\n\n        var _this = _possibleConstructorReturn(this, (Choropleth.__proto__ || Object.getPrototypeOf(Choropleth)).call(this, bgmap, geometry, userOptions));\n\n        _this.loadOptions(userOptions, bgmap); // this.type = 'CP'; window.maps.push(this);\n        _this.initialize();\n        return _this;\n    }\n\n    /**\r\n     * Draw Choropleth map, at the beginning and when the map is moved.\r\n     * @see initialize() and makeMap() methods.\r\n     * @override  \r\n     * @memberOf Choropleth\r\n     */\n\n\n    _createClass(Choropleth, [{\n        key: 'draw',\n        value: function draw() {\n            this.clear();\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = this.aesthetics[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var aes = _step.value;\n\n                    if (aes.isEnabled()) this.drawTriangles(aes);\n                    this.drawBorders(aes);\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        }\n\n        /**\r\n         * Method called to build the Map Legend.\r\n         * For all Aesthethics that exist crate one polygon row and then insert the Legend to the map. \r\n         * @override \r\n         * @memberOf Choropleth\r\n         */\n\n    }, {\n        key: 'buildLegend',\n        value: function buildLegend() {\n            /**\r\n             * The Legend to be used through the life of the map.\r\n             * @type {Legend} \r\n             */\n            this.legend = new _Legend.Legend(this.id, this.gisplayOptions.legendTitle);\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = this.aesthetics[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var aes = _step2.value;\n\n                    this.legend.insertPolygonRow(aes, this);\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            this.legend.insertLegend(this.bGMap);\n        }\n\n        /**\r\n         * Returns the color scheme and number of classes associated with the id given.\r\n         * @param {number} defaultColorSchemeId - The id of the default color scheme to choose the colors.\r\n         * @returns {{colorScheme: string[], numberOfClasses: number}} - Color scheme and number of classes associated with the id given, empty object otherwise.\r\n         * @override \r\n         * @memberOf Choropleth\r\n         */\n\n    }, {\n        key: 'defaults',\n        value: function defaults(defaultColorSchemeId) {\n            var options = {};\n            switch (defaultColorSchemeId) {\n                case 1:\n                    options.colorScheme = ['white', 'yellow', 'orange', 'red'];\n                    options.numberOfClasses = 4;\n                    break;\n                default:\n                    break;\n            }\n            return options;\n        }\n    }]);\n\n    return Choropleth;\n}(_Map2.Map);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvR2lzcGxheS9NYXBzL1R5cGVzL0Nob3JvcGxldGguanM/NDBiZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNYXAgfSBmcm9tICcuLi9NYXAnO1xyXG5pbXBvcnQgeyBMZWdlbmQgfSBmcm9tICcuLi9MZWdlbmQnO1xyXG5cclxuLyoqXHJcbiAqIENob3JvcGxldGggaW1wbGVtZW50YXRpb24gMDYvMDMgLSAyMy8wM1xyXG4gKi9cclxuZXhwb3J0IGNsYXNzIENob3JvcGxldGggZXh0ZW5kcyBNYXAge1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlcyBhbiBpbnN0YW5jZSBvZiBDaG9yb3BsZXRoLlxyXG4gICAgICogQHBhcmFtIHtCR01hcFdyYXBwZXJ9IGJnbWFwIC0gQmFja2dyb3VuZCBtYXAgb2JqZWN0LlxyXG4gICAgICogQHBhcmFtIHtKU09OfSBnZW9tZXRyeSAtIEpTT04gb2JqZWN0IHdpdGggdGhlIGdlb21ldHJ5IHRoYXQgd2FzIHJlYWQgZnJvbSB0aGUgZmlsZS5cclxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSB1c2VyT3B0aW9ucyAtIFVzZXIgb3B0aW9ucyB0byBiZSB1c2VkLlxyXG4gICAgICogQG1lbWJlck9mIENob3JvcGxldGhcclxuICAgICAqL1xyXG4gICAgY29uc3RydWN0b3IoYmdtYXAsIGdlb21ldHJ5LCB1c2VyT3B0aW9ucykge1xyXG4gICAgICAgIHN1cGVyKGJnbWFwLCBnZW9tZXRyeSwgdXNlck9wdGlvbnMpO1xyXG4gICAgICAgIHRoaXMubG9hZE9wdGlvbnModXNlck9wdGlvbnMsIGJnbWFwKTsvLyB0aGlzLnR5cGUgPSAnQ1AnOyB3aW5kb3cubWFwcy5wdXNoKHRoaXMpO1xyXG4gICAgICAgIHRoaXMuaW5pdGlhbGl6ZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogRHJhdyBDaG9yb3BsZXRoIG1hcCwgYXQgdGhlIGJlZ2lubmluZyBhbmQgd2hlbiB0aGUgbWFwIGlzIG1vdmVkLlxyXG4gICAgICogQHNlZSBpbml0aWFsaXplKCkgYW5kIG1ha2VNYXAoKSBtZXRob2RzLlxyXG4gICAgICogQG92ZXJyaWRlICBcclxuICAgICAqIEBtZW1iZXJPZiBDaG9yb3BsZXRoXHJcbiAgICAgKi9cclxuICAgIGRyYXcoKSB7XHJcbiAgICAgICAgdGhpcy5jbGVhcigpO1xyXG4gICAgICAgIGZvciAoY29uc3QgYWVzIG9mIHRoaXMuYWVzdGhldGljcykge1xyXG4gICAgICAgICAgICBpZiAoYWVzLmlzRW5hYmxlZCgpKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5kcmF3VHJpYW5nbGVzKGFlcyk7XHJcbiAgICAgICAgICAgIHRoaXMuZHJhd0JvcmRlcnMoYWVzKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBNZXRob2QgY2FsbGVkIHRvIGJ1aWxkIHRoZSBNYXAgTGVnZW5kLlxyXG4gICAgICogRm9yIGFsbCBBZXN0aGV0aGljcyB0aGF0IGV4aXN0IGNyYXRlIG9uZSBwb2x5Z29uIHJvdyBhbmQgdGhlbiBpbnNlcnQgdGhlIExlZ2VuZCB0byB0aGUgbWFwLiBcclxuICAgICAqIEBvdmVycmlkZSBcclxuICAgICAqIEBtZW1iZXJPZiBDaG9yb3BsZXRoXHJcbiAgICAgKi9cclxuICAgIGJ1aWxkTGVnZW5kKCkge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFRoZSBMZWdlbmQgdG8gYmUgdXNlZCB0aHJvdWdoIHRoZSBsaWZlIG9mIHRoZSBtYXAuXHJcbiAgICAgICAgICogQHR5cGUge0xlZ2VuZH0gXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5sZWdlbmQgPSBuZXcgTGVnZW5kKHRoaXMuaWQsIHRoaXMuZ2lzcGxheU9wdGlvbnMubGVnZW5kVGl0bGUpO1xyXG4gICAgICAgIGZvciAoY29uc3QgYWVzIG9mIHRoaXMuYWVzdGhldGljcylcclxuICAgICAgICAgICAgdGhpcy5sZWdlbmQuaW5zZXJ0UG9seWdvblJvdyhhZXMsIHRoaXMpO1xyXG4gICAgICAgIHRoaXMubGVnZW5kLmluc2VydExlZ2VuZCh0aGlzLmJHTWFwKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgdGhlIGNvbG9yIHNjaGVtZSBhbmQgbnVtYmVyIG9mIGNsYXNzZXMgYXNzb2NpYXRlZCB3aXRoIHRoZSBpZCBnaXZlbi5cclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBkZWZhdWx0Q29sb3JTY2hlbWVJZCAtIFRoZSBpZCBvZiB0aGUgZGVmYXVsdCBjb2xvciBzY2hlbWUgdG8gY2hvb3NlIHRoZSBjb2xvcnMuXHJcbiAgICAgKiBAcmV0dXJucyB7e2NvbG9yU2NoZW1lOiBzdHJpbmdbXSwgbnVtYmVyT2ZDbGFzc2VzOiBudW1iZXJ9fSAtIENvbG9yIHNjaGVtZSBhbmQgbnVtYmVyIG9mIGNsYXNzZXMgYXNzb2NpYXRlZCB3aXRoIHRoZSBpZCBnaXZlbiwgZW1wdHkgb2JqZWN0IG90aGVyd2lzZS5cclxuICAgICAqIEBvdmVycmlkZSBcclxuICAgICAqIEBtZW1iZXJPZiBDaG9yb3BsZXRoXHJcbiAgICAgKi9cclxuICAgIGRlZmF1bHRzKGRlZmF1bHRDb2xvclNjaGVtZUlkKSB7XHJcbiAgICAgICAgY29uc3Qgb3B0aW9ucyA9IHt9O1xyXG4gICAgICAgIHN3aXRjaCAoZGVmYXVsdENvbG9yU2NoZW1lSWQpIHtcclxuICAgICAgICAgICAgY2FzZSAxOlxyXG4gICAgICAgICAgICAgICAgb3B0aW9ucy5jb2xvclNjaGVtZSA9IFsnd2hpdGUnLCAneWVsbG93JywgJ29yYW5nZScsICdyZWQnXTtcclxuICAgICAgICAgICAgICAgIG9wdGlvbnMubnVtYmVyT2ZDbGFzc2VzID0gNDtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBvcHRpb25zO1xyXG4gICAgfVxyXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9HaXNwbGF5L01hcHMvVHlwZXMvQ2hvcm9wbGV0aC5qcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUFBO0FBQ0E7Ozs7Ozs7QUFDQTs7O0FBR0E7OztBQUVBOzs7Ozs7O0FBT0E7QUFBQTtBQUNBO0FBREE7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQUlBO0FBQ0E7QUFDQTs7Ozs7Ozs7OztBQU1BO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBRUE7QUFBQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBTkE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQU9BO0FBQ0E7QUFDQTs7Ozs7Ozs7O0FBTUE7QUFDQTs7OztBQUlBO0FBTEE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQU1BO0FBQUE7QUFDQTtBQUFBO0FBREE7QUFOQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7OztBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU5BO0FBUUE7QUFDQTs7OzsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 4 */
/* unknown exports provided */
/* all exports used */
/*!********************************!*\
  !*** ./src/Gisplay/Gisplay.js ***!
  \********************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Gisplay = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Choropleth = __webpack_require__(/*! ./Maps/Types/Choropleth */ 3);\n\nvar _DotMap = __webpack_require__(/*! ./Maps/Types/DotMap */ 10);\n\nvar _ChangeMap = __webpack_require__(/*! ./Maps/Types/ChangeMap */ 8);\n\nvar _ProportionalSymbolsMap = __webpack_require__(/*! ./Maps/Types/ProportionalSymbolsMap */ 11);\n\nvar _ChorochromaticMap = __webpack_require__(/*! ./Maps/Types/ChorochromaticMap */ 9);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * Gisplay API entry point with one method for each map available.\r\n */\nvar Gisplay = exports.Gisplay = function () {\n\n    /**\r\n     * Creates an instance of the Gisplay API.\r\n     * @memberOf Gisplay\r\n     */\n    function Gisplay() {\n        _classCallCheck(this, Gisplay);\n\n        console.log(\"Gisplay Class constructor\");\n        /**\r\n         * TimeStamp at the beginning.\r\n         * @type {number} \r\n         * @deprecated\r\n         */\n        this.startTimeStamp = 0;\n\n        /**\r\n         * Whether or not it  should profile the API.\r\n         * @type {string} - Whether or not it  should profile the API.\r\n         */\n        window.profiling = true;\n        /**\r\n         * @type {Array} - Array of maps. @WHY?\r\n         */\n        window.maps = new Array();\n        /**\r\n         * @type {number} - The number of maps. Used to mark each one with a different id.\r\n         */\n        window.mapcount = 0;\n\n        //WebGL API\n        /**\r\n         * @type {number} - The number of vertices produced. @WHY?\r\n         * @deprecated\r\n         */\n        window._vertexcount = 0;\n        /**\r\n         * @type {number} - The number of ???. @WHY?\r\n         * @deprecated\r\n         */\n        window._tricount = 0;\n    }\n\n    /**\r\n     * Creates a map of type Choropleth.\r\n     * @param {Object} bgmap - Background map object be used(atm only MapBox being used).- Background map object be used(atm only MapBox being used).\r\n     * @param {JSON} geometry - The object that contains the data.\r\n     * @param {Object} options - Object that contains user personalization options.\r\n     * @memberOf Gisplay\r\n     */\n\n\n    _createClass(Gisplay, [{\n        key: 'makeChoropleth',\n        value: function makeChoropleth(bgmap, geometry, options) {\n            var gismap = new _Choropleth.Choropleth(bgmap, geometry, options);\n            gismap.makeMap(); //this.makeMap(gismap, options);\n        }\n\n        /**\r\n         * Creates a Dot Map.\r\n         * @param {Object} bgmap - Background map object be used(atm only MapBox being used).\r\n         * @param {JSON} geometry - The object that contains the data.\r\n         * @param {Object} options - Object that contains user personalization options.\r\n         * @memberOf Gisplay\r\n         */\n\n    }, {\n        key: 'makeDotMap',\n        value: function makeDotMap(bgmap, geometry, options) {\n            var gismap = new _DotMap.DotMap(bgmap, geometry, options);\n            gismap.makeMap();\n        }\n\n        /**\r\n         * Creates a Change Map.\r\n         * @param {Object} bgmap - Background map object be used(atm only MapBox being used).\r\n         * @param {JSON} geometry - The object that contains the data.\r\n         * @param {Object} options - Object that contains user personalization options.\r\n         * @memberOf Gisplay\r\n         */\n\n    }, {\n        key: 'makeChangeMap',\n        value: function makeChangeMap(bgmap, geometry, options) {\n            var gismap = new _ChangeMap.ChangeMap(bgmap, geometry, options);\n            gismap.makeMap();\n        }\n\n        /**\r\n         * Creates a Proportional Symbols Map.\r\n         * @param {Object} bgmap - Background map object be used(atm only MapBox being used).\r\n         * @param {JSON} geometry - The object that contains the data.\r\n         * @param {Object} options - Object that contains user personalization options.\r\n         * @memberOf Gisplay\r\n         */\n\n    }, {\n        key: 'makeProportionalSymbolsMap',\n        value: function makeProportionalSymbolsMap(bgmap, geometry, options) {\n            var gismap = new _ProportionalSymbolsMap.ProportionalSymbolsMap(bgmap, geometry, options);\n            gismap.makeMap();\n        }\n\n        /**\r\n         * Creates a Chorocromatic Map.\r\n         * @param {Object} bgmap - Background map object be used(atm only MapBox being used).\r\n         * @param {JSON} geometry - The object that contains the data.\r\n         * @param {Object} options - Object that contains user personalization options.\r\n         * @memberOf Gisplay\r\n         */\n\n    }, {\n        key: 'makeChorochromaticMap',\n        value: function makeChorochromaticMap(bgmap, geometry, options) {\n            var gismap = new _ChorochromaticMap.ChorochromaticMap(bgmap, geometry, options);\n            gismap.makeMap();\n        }\n\n        /**\r\n         * Function that executes all the process associated with the creation of thematic maps.\r\n         * todo Should clean up this removing profiling code?\r\n         * param {Map} gismap - The Gisplay Map to use (Choropleth, DotMap,etc).\r\n         * param {Object} options - Object that contains user personalization options.\r\n         * deprecated Used in Map.js instead\r\n         * @memberOf Gisplay\r\n         */\n        /* makeMap(gismap, options) {\r\n             let defaultid = options.defaultid != null ? defaultid : 1; //@todo Change opts.defaultid to optscolorSchemeDefaultId\r\n             setTimeout(console => {\r\n                 let start = 0;\r\n                 if (window.profiling == true)\r\n                     start = Date.now();\r\n                 if (gismap.colorscheme == undefined)\r\n                     gismap.colorscheme = gismap.defaults(defaultid).colorScheme;\r\n                 if (gismap.classbreaks == undefined) {\r\n                     if (gismap.numberofclasses == undefined) {\r\n                         gismap.numberofclasses = gismap.defaults(defaultid).numberOfClasses;\r\n                     }\r\n                     gismap.preProcessData(gismap.geometry, gismap.numberofclasses, gismap.algorithm, gismap.colorscheme);\r\n                 }\r\n                   //gismap.processData(gismap.geometry);\r\n                 gismap.loadGeoJSON(gismap.geometry);\r\n                 let start2 = 0;\r\n                 if (window.profiling == true) {\r\n                     start2 = Date.now();\r\n                     window.console.log(`Tempo de processamento do dados (segundos): ${(start2 - start) / 1000}`);\r\n                 }\r\n                 gismap.draw();\r\n                   let end = 0;\r\n                 if (window.profiling == true) {\r\n                     end = Date.now();\r\n                     window.console.log(`Tempo de desenho do mapa (segundos): ${(end - start2) / 1000}`);\r\n                 }\r\n                 if (options.legend != false)\r\n                     gismap.buildLegend();\r\n                 if (options.loader != false) {\r\n                     gismap.loader();\r\n                 }\r\n                 if (window.profiling == true) {\r\n                     end = Date.now();\r\n                     window.console.log(`Tempo total (segundos): ${(end - this.startTimeStamp) / 1000}`);\r\n                 }\r\n             }, 1);\r\n         }*/\n\n    }]);\n\n    return Gisplay;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 5 */
/* unknown exports provided */
/* all exports used */
/*!***************************************!*\
  !*** ./src/Gisplay/GisplayOptions.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * This class will contain all the options available on the Gisplay API.\r\n * @see Diogo's thesis page 50-52\r\n */\nvar GisplayOptions = exports.GisplayOptions = function () {\n\n  /**\r\n   * Creates a new Options object. User options take precedence over default options.\r\n   * @param {Object} userOptions - The user defined options.\r\n   * @param {string} userOptions.attr -  The attribute to be mapped.\r\n   * @param {string[]} [userOptions.colorScheme] -  The color scheme to be used.\r\n   * @param {number} [userOptions.numberOfClasses] -  Number of classes to be used on the map Legend.\r\n   * @param {string} [userOptions.classBreaksMethod=quantile] -  Algorithm to be used by the API to calculate classes intervals. \r\n   * @param {number[]} [userOptions.classBreaks=undefined] - Class intervals.\r\n   * @param {boolean} [userOptions.interactive=true] - Show pop-up when the user clicks on a Feature.\r\n   * @param {boolean} [userOptions.showPropertiesOnClick=null] - Show pop-up when the user clicks on a Feature.\r\n   * @param {boolean} [userOptions.showLegend=true] - Show map Legend.\r\n   * @param {string} [userOptions.minuend=undefined] - The minimum property of the GeoJSON feature object.\r\n   * @param {string} [userOptions.subtrahend=undefined] - The property to subtract from minuend.\r\n   * @param {string} [userOptions.legendTitle=this.attr] - Legend title for the Legend.\r\n   * @param {boolean} [userOptions.showLoader=true] - Show loader when loading data.\r\n   * @param {boolean} [userOptions.useCustomMapService=false] - Use custom map service.\r\n   * @param {number} [userOptions.minPointSize=1.0] - Minimum point size.\r\n   * @param {number} [userOptions.maxPointSize=10.0] - Maximum point size.\r\n   * @param {boolean} [userOptions.sizeByClass=false] - Specify the size of the dots on a PSymbols Map using classes.\r\n   * @param {boolean} [userOptions.memorySaver=false] - Save memory on Dot Maps.\r\n   * @param {boolean} [userOptions.colorSchemeId=1] - The color scheme id to use.\r\n   * @param {Function} [userOptions.legendOnClickFunction] - Function to be called when the user clicks on a Legend class.\r\n   * @param {Function} [userOptions.mapOnClickFunction] - Function to be called when the user clicks on the Map (on a Feature).\r\n   * @param {number} [userOptions.alpha=0.8] - Alpha to be used in WebGL.\r\n   * @param {number} [userOptions.maxFeatures=Number.MAX_VALUE] - The max number of features to be displayed.\r\n   * @param {number} [userOptions.numberOfLegendItems=2] - The number of Legend items (Used on PSymbols Map).\r\n   * @param {number} [userOptions.intensity=1] - Intensity for Heat Map.\r\n   * @param {string} [userOptions.legendPosition=br] - The Legend position(br=bottom right).\r\n   * @param {number} [userOptions.legendNumberFormat=0] - Number of decimal numbers to show on the numerical values of the Legend.\r\n   */\n  function GisplayOptions(userOptions) {\n    _classCallCheck(this, GisplayOptions);\n\n    /**\r\n     * The attribute to be mapped.\r\n     * @see Chapter 4 Page 50 of Diogo's thesis.\r\n     * @type {string} \r\n     */\n    this.attr = userOptions.attr;\n    //TODO: Uncoment next line\n    //if(!this.attr) throw new Error(\"Attribute not defined in userOptions, please define one attribute to be mapped\");\n    /**\r\n     * Array of colors to be used by the API. \r\n     * @see Chapter 4 Page 50 of Diogo's thesis.\r\n     * @type {string[]}\r\n     */\n    this.colorScheme = userOptions.colorScheme;\n    /**\r\n     * Number of classes to be used on the map Legend. This option should be used when the user wants the API\r\n     * to calculate the classes (aka ranges) using the given number. Otherwise the API will calculate the appropriate number of classes to use.\r\n     * @type{number}\r\n     */\n    this.numberOfClasses = userOptions.numberOfClasses;\n    /**\r\n     * Algorithm to be used by the API to calculate classes intervals. \r\n     * Defaults to quantile if the user does not provide any or if it provides one that isn't on the list of available algorithms.\r\n     * Available options are 'quantile', 'equidistant', 'k-means'.\r\n     * @type {string}\r\n     */\n    this.classBreaksMethod = this.getAvailableClassBreaksMethods().indexOf(userOptions.classBreaksMethod) > 0 ? userOptions.classBreaksMethod : 'quantile';\n    /**\r\n     * Class intervals. If this is defined then numberOfClasses and classBreakMethod are ignored.\r\n     * @type {number[]}\r\n     */\n    this.classBreaks = userOptions.classBreaks; //undefined n era preciso\n    /**\r\n     * When we click on a feature that is on the map, show properties of said Feature or not.\r\n     * @type {boolean}\r\n     */\n    this.interactive = userOptions.interactive !== undefined ? userOptions.interactive : true;\n    /**\r\n     * Properties and description to be shown when the user clicks on a Feature.\r\n     * @todo NOT USED? \r\n     * @type {string[]}\r\n     */\n    this.showPropertiesOnClick = userOptions.showPropertiesOnClick || null;\n    /**\r\n     * Whether or not to show the map Legend.\r\n     * @type {boolean}\r\n     */\n    this.showLegend = userOptions.showLegend !== undefined ? userOptions.showLegend : true;\n    /**\r\n     * The minimum property of the GeoJSON feature object. Used on Change Map.\r\n     * @type {string}\r\n     */\n    this.minuend = userOptions.minuend;\n    /**\r\n     * The property of the GeoJSON feature object to subtract from the minimum. Used on Change Map.\r\n     * @type {string}\r\n     */\n    this.subtrahend = userOptions.subtrahend;\n    /**\r\n     * The title to be used on the Legend. Third option is used for Change Map.\r\n     * @type {string}\r\n     */\n    this.legendTitle = userOptions.legendTitle || this.attr || this.minuend + ' - ' + this.subtrahend;\n    /**\r\n     * Whether to show or not the loader when we the API is loading the needed data.\r\n     * @type {boolean}\r\n     */\n    this.showLoader = userOptions.showLoader || true;\n    /**\r\n     * True when the user wants to use another background map service than those who are supported by default by the API.\r\n     * If this is true then the user should send the custom map service when creating the new Map. \r\n     * @type {boolean} \r\n     */\n    this.useCustomMapService = userOptions.useCustomMapService || false;\n    /**\r\n     * The minimum size of the points to be drawn on the Map. Will be used on PSymbols and maybe on Dot Map/Heat Map.\r\n     * @type {number}\r\n     */\n    this.minPointSize = userOptions.minPointSize === undefined ? 1.0 : parseFloat(userOptions.minPointSize); //N preciso do if no PSymbols?\n    /**\r\n     * The maximum size of the points to be drawn on the Map. Will be used on PSymbols. The dot with highest value \r\n     * on the features will have the size given by the user.\r\n     * @type {number}\r\n     */\n    this.maxPointSize = userOptions.maxPointSize === undefined ? 10.0 : parseFloat(userOptions.maxPointSize); //N preciso do if no PSymbols?\n    /**\r\n     * If the user wants to specify the size of the dots on a PSymbols Map using classes, this attribute should be true.\r\n     * @type {boolean}\r\n     */\n    this.sizeByClass = userOptions.sizeByClass || false;\n    /**\r\n     * If false each feature will have it's own WebGLBuffer, otherwise the geometry will be grouped creating one WebGLBuffer by\r\n     * Aesthetic class. As the name implies allows memory saving and with this improves performance in lower end devices. \r\n     * Only Available/Relevant to Dot Maps.\r\n     * @type {boolean}\r\n     */\n    this.memorySaver = userOptions.memorySaver || true;\n    /**\r\n     * Allows the user to choose the color scheme id to be used to choose from the list of defaults color shemes availabe on the Map to be created.\r\n     * @type {number}\r\n     */\n    this.colorSchemeId = userOptions.colorSchemeId || 1;\n    /**\r\n     * Function to be called when the user clicks on a Legend class. This function should receive an object of type Aesthetic.\r\n     * @type {Function}\r\n     */\n    this.legendOnClickFunction = userOptions.legendOnClickFunction;\n    /**\r\n     * Function to be called when the user clicks on the Map (on a Feature). This function should receive an array, which are the Feature properties.\r\n     * @type {Function}\r\n     */\n    this.mapOnClickFunction = userOptions.mapOnClickFunction;\n\n    /** #####################       OTHER OPTIONS(Non Described on the Thesis draft)      ############################## */\n    /**\r\n     * Alpha to be used in WebGL.\r\n     * 0 means fully transparent <-> 1 fully opaque.\r\n     * @type {number}\r\n     */\n    this.alpha = userOptions.alpha || 0.8;\n    /**\r\n     * The max number of features to be displayed. If not given by the user then it is the maximum numnber allowed.\r\n     * Number.MAX_VALUE = 1.79E+308\r\n     * @type {number}\r\n     */\n    this.maxFeatures = userOptions.maxFeatures || Number.MAX_VALUE;\n    /**\r\n     * The number of legend items. Used for PSymbols Map.\r\n     * @type {number}\r\n     */\n    this.numberOfLegendItems = userOptions.numberOfLegendItems || 2;\n\n    /** #####################       OTHER NON-USER DEFINED OPTIONS      ############################## */\n    /**\r\n     * If it is dynamic or not. When dynamic is set to true it will join all Features on one Aesthetic class in the same Feature and this way it can draw all elements at once.\r\n     * It's the inverse of the memorySaver value.\r\n     * @type {boolean}\r\n     */\n    this.isDynamic = !this.memorySaver;\n\n    /**\r\n     * Enable/Disable Legend toggle.\r\n     * @type {boolean} \r\n     */\n    this.legendToggle = true;\n\n    /** #####################       DEPRECATED ############################## */\n    /**\r\n     * Intensity of a heat map. Higher values of intensity means more red in the end color. Otherwise more green.\r\n     * @deprecated Not used ATM, should probably be used for Heat Maps.\r\n     * @type {number}\r\n     */\n    this.intensity = userOptions.intensity || 1.0;\n    /**\r\n     * The user defined position of the Legend over the map. Allowed positions tl, tr, bl, br.\r\n     * @type {string}\r\n     * @deprecated Currently not in use. Maybe implement later.\r\n     */\n    this.legendPosition = userOptions.legendPosition || 'br';\n    /**\r\n     * Number of decimal numbers to show on the numerical values of the Legend.\r\n     * @deprecated Currently not in use. Maybe implement later.\r\n     * @type {number}\r\n     */\n    this.legendNumberFormat = userOptions.legendNumberFormat || 0;\n\n    /** #####################      OTHER GLOBAL OPTIONS     ############################## */\n    this.profiling = userOptions.profiling || true;\n  }\n\n  /**\r\n   * Returns the available class break methods.\r\n   * @returns {string[]} - All available class break methods under Gisplay API.\r\n   * @memberOf GisplayOptions\r\n   */\n\n\n  _createClass(GisplayOptions, [{\n    key: 'getAvailableClassBreaksMethods',\n    value: function getAvailableClassBreaksMethods() {\n      return [\"quantile\", \"k-means\", \"equidistant\"];\n    }\n  }]);\n\n  return GisplayOptions;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 6 */
/* unknown exports provided */
/* all exports used */
/*!******************************************!*\
  !*** ./src/Gisplay/Maps/BGMapWrapper.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * This class represents a background map wrapper. Used to be a \"middle-man\" between the \r\n * background map provider and the API.\r\n * @see https://www.mapbox.com/mapbox-gl-js/api/ \r\n * @see https://developers.google.com/maps/documentation/javascript/3.exp/reference\r\n * @see Diogo's thesis Page 70-72 + 59\r\n */\nvar BGMapWrapper = exports.BGMapWrapper = function () {\n\n    /**\r\n     * This is the map that comes from the background map provider(e.g., MapBox).\r\n     * @param {Object} map - The background map object that came from the provider (e.g., Mapbox, Google Maps). \r\n     */\n    function BGMapWrapper(bgmap) {\n        _classCallCheck(this, BGMapWrapper);\n\n        /**\r\n         * This is the map object that comes from the background map provider(e.g., MapBox). \r\n         * @type {Object}\r\n         */\n        this.bgMapObject = bgmap;\n    }\n\n    /**\r\n     * Returns the map's containing HTML element.\r\n     * @return {HTMLElement} - The map's HTML element container.\r\n     */\n\n\n    _createClass(BGMapWrapper, [{\n        key: 'getContainer',\n        value: function getContainer() {\n            return this.bgMapObject.getContainer();\n        }\n\n        /**\r\n         * Given one id it creates a canvas object.\r\n         * @todo Understand case mapbox comment bellow.\r\n         * @param {number} id - The id of the canvas to be created.\r\n         * @return {HTMLElement} Canvas object where everything will be drawn.\r\n         */\n\n    }, {\n        key: 'createCanvas',\n        value: function createCanvas(id) {\n            var mapCanvas = document.createElement('canvas');\n            mapCanvas.id = 'mapCanvas' + id;\n            mapCanvas.style.position = 'absolute';\n\n            var mapDiv = this.bgMapObject.getContainer();\n            mapCanvas.height = mapDiv.offsetHeight;\n            mapCanvas.width = mapDiv.offsetWidth;\n            //case mapbox\n            mapDiv.insertBefore(mapCanvas, mapDiv.firstChild.nextSibling);\n\n            var canvas = document.getElementById('mapCanvas' + id);\n            return canvas;\n        }\n\n        /**\r\n         * Returns the map's current zoom level.\r\n         * @return {number} - The map's current zoom level.\r\n         */\n\n    }, {\n        key: 'getZoom',\n        value: function getZoom() {\n            return this.bgMapObject.getZoom();\n        }\n\n        /**\r\n         * Returns the longitude of the bounding box northwest corner.\r\n         * @return {number} - Longitude of northwest corner, measured in degrees.\r\n         */\n\n    }, {\n        key: 'getLngBound',\n        value: function getLngBound() {\n            return this.bgMapObject.getBounds().getNorthWest().lng;\n        }\n\n        /**\r\n         * Returns the latitude of the bounding box northwest corner.\r\n         * @return {number} - Latitude of northwest corner, measured in degrees.\r\n         */\n\n    }, {\n        key: 'getLatBound',\n        value: function getLatBound() {\n            return this.bgMapObject.getBounds().getNorthWest().lat;\n        }\n\n        /**\r\n         * Adds a listener to a specified event type.\r\n         * @param {string} eventstr - The event type to add a listen for.\r\n         * @param {Function} eventfunction - The function to be called when the event is fired. The listener function is called with the data object passed to  fire , extended with  target and  type properties.\r\n         * @return {void} \r\n         */\n\n    }, {\n        key: 'onEvent',\n        value: function onEvent(eventstr, eventfunction) {\n            this.bgMapObject.on(eventstr, eventfunction);\n        }\n\n        /**\r\n         * Shows loader at the beginning when the API is loading the data.\r\n         * @return {void} \r\n         * @see Page 72 Diogo's thesis.\r\n         */\n\n    }, {\n        key: 'showLoader',\n        value: function showLoader() {\n            if (this.loaderDiv === undefined) //@TODO: REMOVE If (See M1 + M8) \n                this.createLoader();else {\n                if (this.loaderDiv.style.display === 'none') this.loaderDiv.style.display = 'flex';else this.loaderDiv.style.display = 'none';\n\n                if (this.loaderDiv.className.includes('_gisplayhidden')) this.loaderDiv.className = this.loaderDiv.className.replace(/(?:^|\\s)_gisplayhidden(?!\\S)/g, '_gisplayLoaderOuterDiv');else this.loaderDiv.className = this.loaderDiv.className.replace(/(?:^|\\s)_gisplayLoaderOuterDiv(?!\\S)/g, '_gisplayhidden');\n            }\n        }\n\n        /**\r\n         * Auxiliar method to be called when there is no loader  and we want to create one.\r\n         * @return {void} \r\n         */\n\n    }, {\n        key: 'createLoader',\n        value: function createLoader() {\n            var outerDiv = document.createElement('div');\n            var innerDiv = document.createElement('div');\n            innerDiv.className = '_gisplayloader';\n\n            var mapDiv = this.getContainer();\n            outerDiv.className = '_gisplayLoaderOuterDiv';\n            outerDiv.style.height = mapDiv.offsetHeight;\n            outerDiv.style.width = mapDiv.offsetWidth;\n            outerDiv.appendChild(innerDiv);\n            /**\r\n             * The div that contains the loader.\r\n             * @type {HTMLDivElement}\r\n             */\n            this.loaderDiv = outerDiv;\n\n            mapDiv.parentElement.insertBefore(outerDiv, mapDiv);\n        }\n    }]);\n\n    return BGMapWrapper;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvR2lzcGxheS9NYXBzL0JHTWFwV3JhcHBlci5qcz9lMjZkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBUaGlzIGNsYXNzIHJlcHJlc2VudHMgYSBiYWNrZ3JvdW5kIG1hcCB3cmFwcGVyLiBVc2VkIHRvIGJlIGEgXCJtaWRkbGUtbWFuXCIgYmV0d2VlbiB0aGUgXHJcbiAqIGJhY2tncm91bmQgbWFwIHByb3ZpZGVyIGFuZCB0aGUgQVBJLlxyXG4gKiBAc2VlIGh0dHBzOi8vd3d3Lm1hcGJveC5jb20vbWFwYm94LWdsLWpzL2FwaS8gXHJcbiAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vbWFwcy9kb2N1bWVudGF0aW9uL2phdmFzY3JpcHQvMy5leHAvcmVmZXJlbmNlXHJcbiAqIEBzZWUgRGlvZ28ncyB0aGVzaXMgUGFnZSA3MC03MiArIDU5XHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgQkdNYXBXcmFwcGVyIHtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoaXMgaXMgdGhlIG1hcCB0aGF0IGNvbWVzIGZyb20gdGhlIGJhY2tncm91bmQgbWFwIHByb3ZpZGVyKGUuZy4sIE1hcEJveCkuXHJcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gbWFwIC0gVGhlIGJhY2tncm91bmQgbWFwIG9iamVjdCB0aGF0IGNhbWUgZnJvbSB0aGUgcHJvdmlkZXIgKGUuZy4sIE1hcGJveCwgR29vZ2xlIE1hcHMpLiBcclxuICAgICAqL1xyXG4gICAgY29uc3RydWN0b3IoYmdtYXApIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBUaGlzIGlzIHRoZSBtYXAgb2JqZWN0IHRoYXQgY29tZXMgZnJvbSB0aGUgYmFja2dyb3VuZCBtYXAgcHJvdmlkZXIoZS5nLiwgTWFwQm94KS4gXHJcbiAgICAgICAgICogQHR5cGUge09iamVjdH1cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLmJnTWFwT2JqZWN0ID0gYmdtYXA7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoZSBtYXAncyBjb250YWluaW5nIEhUTUwgZWxlbWVudC5cclxuICAgICAqIEByZXR1cm4ge0hUTUxFbGVtZW50fSAtIFRoZSBtYXAncyBIVE1MIGVsZW1lbnQgY29udGFpbmVyLlxyXG4gICAgICovXHJcbiAgICBnZXRDb250YWluZXIoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuYmdNYXBPYmplY3QuZ2V0Q29udGFpbmVyKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHaXZlbiBvbmUgaWQgaXQgY3JlYXRlcyBhIGNhbnZhcyBvYmplY3QuXHJcbiAgICAgKiBAdG9kbyBVbmRlcnN0YW5kIGNhc2UgbWFwYm94IGNvbW1lbnQgYmVsbG93LlxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGlkIC0gVGhlIGlkIG9mIHRoZSBjYW52YXMgdG8gYmUgY3JlYXRlZC5cclxuICAgICAqIEByZXR1cm4ge0hUTUxFbGVtZW50fSBDYW52YXMgb2JqZWN0IHdoZXJlIGV2ZXJ5dGhpbmcgd2lsbCBiZSBkcmF3bi5cclxuICAgICAqL1xyXG4gICAgY3JlYXRlQ2FudmFzKGlkKSB7XHJcbiAgICAgICAgY29uc3QgbWFwQ2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJyk7XHJcbiAgICAgICAgbWFwQ2FudmFzLmlkID0gYG1hcENhbnZhcyR7aWR9YDtcclxuICAgICAgICBtYXBDYW52YXMuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnO1xyXG5cclxuICAgICAgICBjb25zdCBtYXBEaXYgPSB0aGlzLmJnTWFwT2JqZWN0LmdldENvbnRhaW5lcigpO1xyXG4gICAgICAgIG1hcENhbnZhcy5oZWlnaHQgPSBtYXBEaXYub2Zmc2V0SGVpZ2h0O1xyXG4gICAgICAgIG1hcENhbnZhcy53aWR0aCA9IG1hcERpdi5vZmZzZXRXaWR0aDtcclxuICAgICAgICAvL2Nhc2UgbWFwYm94XHJcbiAgICAgICAgbWFwRGl2Lmluc2VydEJlZm9yZShtYXBDYW52YXMsIG1hcERpdi5maXJzdENoaWxkLm5leHRTaWJsaW5nKTtcclxuXHJcbiAgICAgICAgY29uc3QgY2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYG1hcENhbnZhcyR7aWR9YCk7XHJcbiAgICAgICAgcmV0dXJuIGNhbnZhcztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgdGhlIG1hcCdzIGN1cnJlbnQgem9vbSBsZXZlbC5cclxuICAgICAqIEByZXR1cm4ge251bWJlcn0gLSBUaGUgbWFwJ3MgY3VycmVudCB6b29tIGxldmVsLlxyXG4gICAgICovXHJcbiAgICBnZXRab29tKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmJnTWFwT2JqZWN0LmdldFpvb20oKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgdGhlIGxvbmdpdHVkZSBvZiB0aGUgYm91bmRpbmcgYm94IG5vcnRod2VzdCBjb3JuZXIuXHJcbiAgICAgKiBAcmV0dXJuIHtudW1iZXJ9IC0gTG9uZ2l0dWRlIG9mIG5vcnRod2VzdCBjb3JuZXIsIG1lYXN1cmVkIGluIGRlZ3JlZXMuXHJcbiAgICAgKi9cclxuICAgIGdldExuZ0JvdW5kKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmJnTWFwT2JqZWN0LmdldEJvdW5kcygpLmdldE5vcnRoV2VzdCgpLmxuZztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgdGhlIGxhdGl0dWRlIG9mIHRoZSBib3VuZGluZyBib3ggbm9ydGh3ZXN0IGNvcm5lci5cclxuICAgICAqIEByZXR1cm4ge251bWJlcn0gLSBMYXRpdHVkZSBvZiBub3J0aHdlc3QgY29ybmVyLCBtZWFzdXJlZCBpbiBkZWdyZWVzLlxyXG4gICAgICovXHJcbiAgICBnZXRMYXRCb3VuZCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5iZ01hcE9iamVjdC5nZXRCb3VuZHMoKS5nZXROb3J0aFdlc3QoKS5sYXQ7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBBZGRzIGEgbGlzdGVuZXIgdG8gYSBzcGVjaWZpZWQgZXZlbnQgdHlwZS5cclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBldmVudHN0ciAtIFRoZSBldmVudCB0eXBlIHRvIGFkZCBhIGxpc3RlbiBmb3IuXHJcbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBldmVudGZ1bmN0aW9uIC0gVGhlIGZ1bmN0aW9uIHRvIGJlIGNhbGxlZCB3aGVuIHRoZSBldmVudCBpcyBmaXJlZC4gVGhlIGxpc3RlbmVyIGZ1bmN0aW9uIGlzIGNhbGxlZCB3aXRoIHRoZSBkYXRhIG9iamVjdCBwYXNzZWQgdG8gIGZpcmUgLCBleHRlbmRlZCB3aXRoICB0YXJnZXQgYW5kICB0eXBlIHByb3BlcnRpZXMuXHJcbiAgICAgKiBAcmV0dXJuIHt2b2lkfSBcclxuICAgICAqL1xyXG4gICAgb25FdmVudChldmVudHN0ciwgZXZlbnRmdW5jdGlvbikge1xyXG4gICAgICAgIHRoaXMuYmdNYXBPYmplY3Qub24oZXZlbnRzdHIsIGV2ZW50ZnVuY3Rpb24pO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2hvd3MgbG9hZGVyIGF0IHRoZSBiZWdpbm5pbmcgd2hlbiB0aGUgQVBJIGlzIGxvYWRpbmcgdGhlIGRhdGEuXHJcbiAgICAgKiBAcmV0dXJuIHt2b2lkfSBcclxuICAgICAqIEBzZWUgUGFnZSA3MiBEaW9nbydzIHRoZXNpcy5cclxuICAgICAqL1xyXG4gICAgc2hvd0xvYWRlcigpIHtcclxuICAgICAgICBpZiAodGhpcy5sb2FkZXJEaXYgPT09IHVuZGVmaW5lZCkgLy9AVE9ETzogUkVNT1ZFIElmIChTZWUgTTEgKyBNOCkgXHJcbiAgICAgICAgICAgIHRoaXMuY3JlYXRlTG9hZGVyKCk7XHJcbiAgICAgICAgZWxzZSB7IFxyXG4gICAgICAgICAgICBpZiAodGhpcy5sb2FkZXJEaXYuc3R5bGUuZGlzcGxheSA9PT0gJ25vbmUnKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5sb2FkZXJEaXYuc3R5bGUuZGlzcGxheSA9ICdmbGV4JztcclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgdGhpcy5sb2FkZXJEaXYuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuXHJcbiAgICAgICAgICAgIGlmICh0aGlzLmxvYWRlckRpdi5jbGFzc05hbWUuaW5jbHVkZXMoJ19naXNwbGF5aGlkZGVuJykpXHJcbiAgICAgICAgICAgICAgICB0aGlzLmxvYWRlckRpdi5jbGFzc05hbWUgPSB0aGlzLmxvYWRlckRpdi5jbGFzc05hbWUucmVwbGFjZSgvKD86XnxcXHMpX2dpc3BsYXloaWRkZW4oPyFcXFMpL2csICdfZ2lzcGxheUxvYWRlck91dGVyRGl2Jyk7XHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgIHRoaXMubG9hZGVyRGl2LmNsYXNzTmFtZSA9IHRoaXMubG9hZGVyRGl2LmNsYXNzTmFtZS5yZXBsYWNlKC8oPzpefFxccylfZ2lzcGxheUxvYWRlck91dGVyRGl2KD8hXFxTKS9nLCAnX2dpc3BsYXloaWRkZW4nKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBBdXhpbGlhciBtZXRob2QgdG8gYmUgY2FsbGVkIHdoZW4gdGhlcmUgaXMgbm8gbG9hZGVyICBhbmQgd2Ugd2FudCB0byBjcmVhdGUgb25lLlxyXG4gICAgICogQHJldHVybiB7dm9pZH0gXHJcbiAgICAgKi9cclxuICAgIGNyZWF0ZUxvYWRlcigpIHtcclxuICAgICAgICBjb25zdCBvdXRlckRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgIGNvbnN0IGlubmVyRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgaW5uZXJEaXYuY2xhc3NOYW1lID0gJ19naXNwbGF5bG9hZGVyJztcclxuXHJcbiAgICAgICAgY29uc3QgbWFwRGl2ID0gdGhpcy5nZXRDb250YWluZXIoKTtcclxuICAgICAgICBvdXRlckRpdi5jbGFzc05hbWUgPSAnX2dpc3BsYXlMb2FkZXJPdXRlckRpdic7XHJcbiAgICAgICAgb3V0ZXJEaXYuc3R5bGUuaGVpZ2h0ID0gbWFwRGl2Lm9mZnNldEhlaWdodDtcclxuICAgICAgICBvdXRlckRpdi5zdHlsZS53aWR0aCA9IG1hcERpdi5vZmZzZXRXaWR0aDtcclxuICAgICAgICBvdXRlckRpdi5hcHBlbmRDaGlsZChpbm5lckRpdik7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogVGhlIGRpdiB0aGF0IGNvbnRhaW5zIHRoZSBsb2FkZXIuXHJcbiAgICAgICAgICogQHR5cGUge0hUTUxEaXZFbGVtZW50fVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMubG9hZGVyRGl2ID0gb3V0ZXJEaXY7XHJcblxyXG4gICAgICAgIG1hcERpdi5wYXJlbnRFbGVtZW50Lmluc2VydEJlZm9yZShvdXRlckRpdiwgbWFwRGl2KTtcclxuICAgIH1cclxufVxyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL0dpc3BsYXkvTWFwcy9CR01hcFdyYXBwZXIuanMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7Ozs7OztBQU9BO0FBQ0E7QUFDQTs7OztBQUlBO0FBQUE7QUFDQTtBQUFBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUlBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7Ozs7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 7 */
/* unknown exports provided */
/* all exports used */
/*!*************************************!*\
  !*** ./src/Gisplay/Maps/Feature.js ***!
  \*************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n//Intermediate API\n\n/**\r\n * This class represents a Feature. Each feature belongs to one Aesthetic element.\r\n * @exports Feature\r\n * @class Feature\r\n */\nvar Feature = exports.Feature = function () {\n  /**\r\n   * Creates an instance of Feature.\r\n   * @example 1-> {\"id\":0,\"properties\":{\"f1\":\"Alabama\",\"f2\":\"Autauga\",\"f3\":150,\"_gisplayid\":0},\r\n                   \"triangles\":[{\"itemSize\":2,\"numItems\":417}],\"borders\":[{\"itemSize\":2,\"numItems\":141}],\"points\":[]}\r\n   * @param {number} id - This Feature id.\r\n   * @param {{fx: string, _gisplayid:number}} properties - Properties associated with this Feature.  \r\n   * @param {{itemSize: number, numItems: number}} triangles - Number of triangles associated with this Feature. \r\n   * @param {{itemSize: number, numItems: number}} borders - Number of borders associated with this Feature.\r\n   * @param {number[]} points - The points that belong to this Feature.\r\n   * \r\n   * @memberOf Feature\r\n   */\n  function Feature(id, properties, triangles, borders, points) {\n    _classCallCheck(this, Feature);\n\n    /**\r\n     * This Feature id.\r\n     * @type {number} \r\n     */\n    this._id = id;\n    /**\r\n     * Properties associated with this Feature.\r\n     * @type {{fx: string, _gisplayid:number}}  \r\n     */\n    this._properties = properties;\n    /**\r\n     * Number of triangles associated with this Feature. The Object that contains the itemSize and numItems is a WebGLBuffer.\r\n     * @type {{itemSize: number, numItems: number}}\r\n     */\n    this._triangles = triangles;\n    /**\r\n     * Number of borders associated with this Feature. The Object that contains the itemSize and numItems is a WebGLBuffer.\r\n     * @type {{itemSize: number, numItems: number}}\r\n     */\n    this._borders = borders;\n    /**\r\n     * The points that belong to this Feature.  The Object that contains the itemSize and numItems is a WebGLBuffer.\r\n     * @type {{itemSize: number, numItems: number}}\r\n     */\n    this._points = points;\n  }\n\n  /**\r\n   * Returns all triangles that belong to the Feature.\r\n   * @returns {Feature._triangles} - All triangles that belong to the Feature.\r\n   * @memberOf Feature\r\n   */\n\n\n  _createClass(Feature, [{\n    key: \"getTriangles\",\n    value: function getTriangles() {\n      return this._triangles;\n    }\n\n    /**\r\n     * Returns all borders that belong to the Feature.\r\n     * @returns {Feature._borders} - All borders that belong to the Feature.\r\n     * @memberOf Feature\r\n     */\n\n  }, {\n    key: \"getBorders\",\n    value: function getBorders() {\n      return this._borders;\n    }\n\n    /**\r\n     * Returns all points that belong to the Feature.\r\n     * @returns {Feature._points} - All points that belong to the Feature.\r\n     * @memberOf Feature\r\n     */\n\n  }, {\n    key: \"getPoints\",\n    value: function getPoints() {\n      return this._points;\n    }\n\n    /**\r\n     * Returns all properties that belong to the Feature.\r\n     * @returns {Feature._properties}\r\n     * @memberOf Feature\r\n     */\n\n  }, {\n    key: \"getProperties\",\n    value: function getProperties() {\n      return this._properties;\n    }\n  }]);\n\n  return Feature;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvR2lzcGxheS9NYXBzL0ZlYXR1cmUuanM/YTM5MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvL0ludGVybWVkaWF0ZSBBUElcclxuXHJcbi8qKlxyXG4gKiBUaGlzIGNsYXNzIHJlcHJlc2VudHMgYSBGZWF0dXJlLiBFYWNoIGZlYXR1cmUgYmVsb25ncyB0byBvbmUgQWVzdGhldGljIGVsZW1lbnQuXHJcbiAqIEBleHBvcnRzIEZlYXR1cmVcclxuICogQGNsYXNzIEZlYXR1cmVcclxuICovXHJcbmV4cG9ydCBjbGFzcyBGZWF0dXJlIHtcclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlcyBhbiBpbnN0YW5jZSBvZiBGZWF0dXJlLlxyXG4gICAgICogQGV4YW1wbGUgMS0+IHtcImlkXCI6MCxcInByb3BlcnRpZXNcIjp7XCJmMVwiOlwiQWxhYmFtYVwiLFwiZjJcIjpcIkF1dGF1Z2FcIixcImYzXCI6MTUwLFwiX2dpc3BsYXlpZFwiOjB9LFxyXG4gICAgICAgICAgICAgICAgICAgICBcInRyaWFuZ2xlc1wiOlt7XCJpdGVtU2l6ZVwiOjIsXCJudW1JdGVtc1wiOjQxN31dLFwiYm9yZGVyc1wiOlt7XCJpdGVtU2l6ZVwiOjIsXCJudW1JdGVtc1wiOjE0MX1dLFwicG9pbnRzXCI6W119XHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gaWQgLSBUaGlzIEZlYXR1cmUgaWQuXHJcbiAgICAgKiBAcGFyYW0ge3tmeDogc3RyaW5nLCBfZ2lzcGxheWlkOm51bWJlcn19IHByb3BlcnRpZXMgLSBQcm9wZXJ0aWVzIGFzc29jaWF0ZWQgd2l0aCB0aGlzIEZlYXR1cmUuICBcclxuICAgICAqIEBwYXJhbSB7e2l0ZW1TaXplOiBudW1iZXIsIG51bUl0ZW1zOiBudW1iZXJ9fSB0cmlhbmdsZXMgLSBOdW1iZXIgb2YgdHJpYW5nbGVzIGFzc29jaWF0ZWQgd2l0aCB0aGlzIEZlYXR1cmUuIFxyXG4gICAgICogQHBhcmFtIHt7aXRlbVNpemU6IG51bWJlciwgbnVtSXRlbXM6IG51bWJlcn19IGJvcmRlcnMgLSBOdW1iZXIgb2YgYm9yZGVycyBhc3NvY2lhdGVkIHdpdGggdGhpcyBGZWF0dXJlLlxyXG4gICAgICogQHBhcmFtIHtudW1iZXJbXX0gcG9pbnRzIC0gVGhlIHBvaW50cyB0aGF0IGJlbG9uZyB0byB0aGlzIEZlYXR1cmUuXHJcbiAgICAgKiBcclxuICAgICAqIEBtZW1iZXJPZiBGZWF0dXJlXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKGlkLCBwcm9wZXJ0aWVzLCB0cmlhbmdsZXMsIGJvcmRlcnMsIHBvaW50cykge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFRoaXMgRmVhdHVyZSBpZC5cclxuICAgICAgICAgKiBAdHlwZSB7bnVtYmVyfSBcclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLl9pZCA9IGlkO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFByb3BlcnRpZXMgYXNzb2NpYXRlZCB3aXRoIHRoaXMgRmVhdHVyZS5cclxuICAgICAgICAgKiBAdHlwZSB7e2Z4OiBzdHJpbmcsIF9naXNwbGF5aWQ6bnVtYmVyfX0gIFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuX3Byb3BlcnRpZXMgPSBwcm9wZXJ0aWVzO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIE51bWJlciBvZiB0cmlhbmdsZXMgYXNzb2NpYXRlZCB3aXRoIHRoaXMgRmVhdHVyZS4gVGhlIE9iamVjdCB0aGF0IGNvbnRhaW5zIHRoZSBpdGVtU2l6ZSBhbmQgbnVtSXRlbXMgaXMgYSBXZWJHTEJ1ZmZlci5cclxuICAgICAgICAgKiBAdHlwZSB7e2l0ZW1TaXplOiBudW1iZXIsIG51bUl0ZW1zOiBudW1iZXJ9fVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuX3RyaWFuZ2xlcyA9IHRyaWFuZ2xlcztcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBOdW1iZXIgb2YgYm9yZGVycyBhc3NvY2lhdGVkIHdpdGggdGhpcyBGZWF0dXJlLiBUaGUgT2JqZWN0IHRoYXQgY29udGFpbnMgdGhlIGl0ZW1TaXplIGFuZCBudW1JdGVtcyBpcyBhIFdlYkdMQnVmZmVyLlxyXG4gICAgICAgICAqIEB0eXBlIHt7aXRlbVNpemU6IG51bWJlciwgbnVtSXRlbXM6IG51bWJlcn19XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5fYm9yZGVycyA9IGJvcmRlcnM7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogVGhlIHBvaW50cyB0aGF0IGJlbG9uZyB0byB0aGlzIEZlYXR1cmUuICBUaGUgT2JqZWN0IHRoYXQgY29udGFpbnMgdGhlIGl0ZW1TaXplIGFuZCBudW1JdGVtcyBpcyBhIFdlYkdMQnVmZmVyLlxyXG4gICAgICAgICAqIEB0eXBlIHt7aXRlbVNpemU6IG51bWJlciwgbnVtSXRlbXM6IG51bWJlcn19XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5fcG9pbnRzID0gcG9pbnRzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBhbGwgdHJpYW5nbGVzIHRoYXQgYmVsb25nIHRvIHRoZSBGZWF0dXJlLlxyXG4gICAgICogQHJldHVybnMge0ZlYXR1cmUuX3RyaWFuZ2xlc30gLSBBbGwgdHJpYW5nbGVzIHRoYXQgYmVsb25nIHRvIHRoZSBGZWF0dXJlLlxyXG4gICAgICogQG1lbWJlck9mIEZlYXR1cmVcclxuICAgICAqL1xyXG4gICAgZ2V0VHJpYW5nbGVzKCl7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3RyaWFuZ2xlcztcclxuICAgIH1cclxuXHJcbiAgICAgLyoqXHJcbiAgICAgICogUmV0dXJucyBhbGwgYm9yZGVycyB0aGF0IGJlbG9uZyB0byB0aGUgRmVhdHVyZS5cclxuICAgICAgKiBAcmV0dXJucyB7RmVhdHVyZS5fYm9yZGVyc30gLSBBbGwgYm9yZGVycyB0aGF0IGJlbG9uZyB0byB0aGUgRmVhdHVyZS5cclxuICAgICAgKiBAbWVtYmVyT2YgRmVhdHVyZVxyXG4gICAgICAqL1xyXG4gICAgZ2V0Qm9yZGVycygpe1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9ib3JkZXJzO1xyXG4gICAgfVxyXG5cclxuICAgICAvKipcclxuICAgICAgKiBSZXR1cm5zIGFsbCBwb2ludHMgdGhhdCBiZWxvbmcgdG8gdGhlIEZlYXR1cmUuXHJcbiAgICAgICogQHJldHVybnMge0ZlYXR1cmUuX3BvaW50c30gLSBBbGwgcG9pbnRzIHRoYXQgYmVsb25nIHRvIHRoZSBGZWF0dXJlLlxyXG4gICAgICAqIEBtZW1iZXJPZiBGZWF0dXJlXHJcbiAgICAgICovXHJcbiAgICBnZXRQb2ludHMoKXtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcG9pbnRzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBhbGwgcHJvcGVydGllcyB0aGF0IGJlbG9uZyB0byB0aGUgRmVhdHVyZS5cclxuICAgICAqIEByZXR1cm5zIHtGZWF0dXJlLl9wcm9wZXJ0aWVzfVxyXG4gICAgICogQG1lbWJlck9mIEZlYXR1cmVcclxuICAgICAqL1xyXG4gICAgZ2V0UHJvcGVydGllcygpe1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9wcm9wZXJ0aWVzO1xyXG4gICAgfVxyXG59XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvR2lzcGxheS9NYXBzL0ZlYXR1cmUuanMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTs7Ozs7Ozs7Ozs7O0FBWUE7QUFBQTtBQUNBO0FBQUE7Ozs7QUFJQTtBQUNBOzs7O0FBSUE7QUFDQTs7OztBQUlBO0FBQ0E7Ozs7QUFJQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7OztBQUtBO0FBQ0E7QUFDQTs7OzsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 8 */
/* unknown exports provided */
/* all exports used */
/*!*********************************************!*\
  !*** ./src/Gisplay/Maps/Types/ChangeMap.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ChangeMap = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Map2 = __webpack_require__(/*! ../Map */ 1);\n\nvar _Legend = __webpack_require__(/*! ../Legend */ 0);\n\nvar _Aesthetic = __webpack_require__(/*! ../Aesthetic */ 2);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\r\n * ChangeMap implementation 07/03\r\n */\nvar ChangeMap = exports.ChangeMap = function (_Map) {\n    _inherits(ChangeMap, _Map);\n\n    /**\r\n     * Creates an instance of ChangeMap.\r\n     * @param {BGMapWrapper} bgmap - Background map object.\r\n     * @param {JSON} geometry - JSON object with the geometry that was read from the file.\r\n     * @param {Object} options - User options to be used.\r\n     * @memberOf ChangeMap\r\n     */\n    function ChangeMap(bgmap, geometry, options) {\n        _classCallCheck(this, ChangeMap);\n\n        var _this = _possibleConstructorReturn(this, (ChangeMap.__proto__ || Object.getPrototypeOf(ChangeMap)).call(this, bgmap, geometry, options));\n\n        options.attr = \"change\"; //this.gisplayOptions.attr = \"change\"; // this.type = 'CM'; //window.maps.push(this);\n        _this.loadOptions(options, bgmap);\n        _this.initialize();\n        return _this;\n    }\n\n    /**\r\n     * Draw Change map, at the beginning and when the map is moved.\r\n     * @see initialize() and makeMap() methods.\r\n     * @override \r\n     * @memberOf ChangeMap\r\n     */\n\n\n    _createClass(ChangeMap, [{\n        key: 'draw',\n        value: function draw() {\n            this.clear();\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = this.aesthetics[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var aes = _step.value;\n\n                    if (aes.isEnabled()) this.drawContinuousPolygons(aes);\n                    this.drawBorders(aes);\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        }\n\n        /**\r\n         * Process data loaded by the user. This mothed overrides the parent(Map class) default processData method.\r\n         * @param {JSON} geojson - GeoJSON object.\r\n         * @param {number} numberOfClasses - Number of classes that the Legend will contain.\r\n         * @param {string} classBreaksMethod - Algorithm to be used to calculate class breaks. Only used it class breaks are not given by the user.\r\n         * @param {string[]} colorscheme - Color scheme to be used by this map.\r\n         * @override \r\n         * @memberOf ChangeMap\r\n         */\n\n    }, {\n        key: 'preProcessData',\n        value: function preProcessData(geojson, numberOfClasses, classBreaksMethod, colorscheme) {\n            var opts = this.gisplayOptions;\n            var gjonFeatures = geojson.features;\n            for (var i = 0; i < gjonFeatures.length && i < opts.maxFeatures; i++) {\n                var gjsonMinuend = gjonFeatures[i].properties[opts.minuend];\n                var gjsonSubtrahend = gjonFeatures[i].properties[opts.subtrahend];\n                if (typeof gjsonMinuend === 'number' && typeof gjsonSubtrahend === 'number') {\n                    //  && gjonminuend != null && gjonSubtrahend != null\n                    this.max = Math.max(this.max, gjsonMinuend - gjsonSubtrahend);\n                    this.min = Math.min(this.min, gjsonMinuend - gjsonSubtrahend);\n                }\n            }\n\n            var breaks = [this.min, this.max];\n            /**\r\n             * The color to fill the Aesthetic element(RGBA) OR a function to create this color.\r\n             * @type {number[]}\r\n             */\n            this.fcolor = chroma.scale(colorscheme);\n            var aes = new _Aesthetic.Aesthetic(0, opts.attr, this.fcolor, [0, 0, 0, 1], null, [breaks[0], breaks[1]]);\n            aes.outer = true;\n            /**\r\n             * Aesthetic object. In the case of a Change Map only one Aesthetic exists.\r\n             * @type {Array<Aesthetic>}\r\n             */\n            this.aesthetics = [aes];\n        }\n\n        /**\r\n         * Method called to build the Map Legend.\r\n         * Create a gradient and insert legend onto background map.\r\n         * @override \r\n         * @memberOf ChangeMap\r\n         */\n\n    }, {\n        key: 'buildLegend',\n        value: function buildLegend() {\n            /**\r\n             * The Legend to be used through the life of the map.\r\n             * @type {Legend} \r\n             */\n            this.legend = new _Legend.Legend(this.id, this.gisplayOptions.legendTitle);\n            this.legend.insertGradient(this, this.min, 0, this.max);\n            this.legend.insertLegend(this.bGMap);\n        }\n\n        /**\r\n         * Returns empty object.\r\n         * @param {number} defaultColorSchemeId - The id of the default color scheme to choose the colors.\r\n         * @override \r\n         * @memberOf ChangeMap\r\n         */\n\n    }, {\n        key: 'defaults',\n        value: function defaults(defaultColorSchemeId) {\n            return {};\n        }\n    }]);\n\n    return ChangeMap;\n}(_Map2.Map);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvR2lzcGxheS9NYXBzL1R5cGVzL0NoYW5nZU1hcC5qcz8zMTAxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1hcCB9IGZyb20gJy4uL01hcCc7XHJcbmltcG9ydCB7IExlZ2VuZCB9IGZyb20gJy4uL0xlZ2VuZCc7XHJcbmltcG9ydCB7IEFlc3RoZXRpYyB9IGZyb20gJy4uL0Flc3RoZXRpYyc7XHJcblxyXG4vKipcclxuICogQ2hhbmdlTWFwIGltcGxlbWVudGF0aW9uIDA3LzAzXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgQ2hhbmdlTWFwIGV4dGVuZHMgTWFwIHtcclxuXHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZXMgYW4gaW5zdGFuY2Ugb2YgQ2hhbmdlTWFwLlxyXG4gICAgICogQHBhcmFtIHtCR01hcFdyYXBwZXJ9IGJnbWFwIC0gQmFja2dyb3VuZCBtYXAgb2JqZWN0LlxyXG4gICAgICogQHBhcmFtIHtKU09OfSBnZW9tZXRyeSAtIEpTT04gb2JqZWN0IHdpdGggdGhlIGdlb21ldHJ5IHRoYXQgd2FzIHJlYWQgZnJvbSB0aGUgZmlsZS5cclxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIC0gVXNlciBvcHRpb25zIHRvIGJlIHVzZWQuXHJcbiAgICAgKiBAbWVtYmVyT2YgQ2hhbmdlTWFwXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKGJnbWFwLCBnZW9tZXRyeSwgb3B0aW9ucykge1xyXG4gICAgICAgIHN1cGVyKGJnbWFwLCBnZW9tZXRyeSwgb3B0aW9ucyk7XHJcbiAgICAgICAgb3B0aW9ucy5hdHRyID0gXCJjaGFuZ2VcIjsgLy90aGlzLmdpc3BsYXlPcHRpb25zLmF0dHIgPSBcImNoYW5nZVwiOyAvLyB0aGlzLnR5cGUgPSAnQ00nOyAvL3dpbmRvdy5tYXBzLnB1c2godGhpcyk7XHJcbiAgICAgICAgdGhpcy5sb2FkT3B0aW9ucyhvcHRpb25zLCBiZ21hcCk7XHJcbiAgICAgICAgdGhpcy5pbml0aWFsaXplKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBEcmF3IENoYW5nZSBtYXAsIGF0IHRoZSBiZWdpbm5pbmcgYW5kIHdoZW4gdGhlIG1hcCBpcyBtb3ZlZC5cclxuICAgICAqIEBzZWUgaW5pdGlhbGl6ZSgpIGFuZCBtYWtlTWFwKCkgbWV0aG9kcy5cclxuICAgICAqIEBvdmVycmlkZSBcclxuICAgICAqIEBtZW1iZXJPZiBDaGFuZ2VNYXBcclxuICAgICAqL1xyXG4gICAgZHJhdygpIHtcclxuICAgICAgICB0aGlzLmNsZWFyKCk7XHJcbiAgICAgICAgZm9yIChjb25zdCBhZXMgb2YgdGhpcy5hZXN0aGV0aWNzKSB7XHJcbiAgICAgICAgICAgIGlmIChhZXMuaXNFbmFibGVkKCkpXHJcbiAgICAgICAgICAgICAgICB0aGlzLmRyYXdDb250aW51b3VzUG9seWdvbnMoYWVzKTtcclxuICAgICAgICAgICAgdGhpcy5kcmF3Qm9yZGVycyhhZXMpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFByb2Nlc3MgZGF0YSBsb2FkZWQgYnkgdGhlIHVzZXIuIFRoaXMgbW90aGVkIG92ZXJyaWRlcyB0aGUgcGFyZW50KE1hcCBjbGFzcykgZGVmYXVsdCBwcm9jZXNzRGF0YSBtZXRob2QuXHJcbiAgICAgKiBAcGFyYW0ge0pTT059IGdlb2pzb24gLSBHZW9KU09OIG9iamVjdC5cclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBudW1iZXJPZkNsYXNzZXMgLSBOdW1iZXIgb2YgY2xhc3NlcyB0aGF0IHRoZSBMZWdlbmQgd2lsbCBjb250YWluLlxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGNsYXNzQnJlYWtzTWV0aG9kIC0gQWxnb3JpdGhtIHRvIGJlIHVzZWQgdG8gY2FsY3VsYXRlIGNsYXNzIGJyZWFrcy4gT25seSB1c2VkIGl0IGNsYXNzIGJyZWFrcyBhcmUgbm90IGdpdmVuIGJ5IHRoZSB1c2VyLlxyXG4gICAgICogQHBhcmFtIHtzdHJpbmdbXX0gY29sb3JzY2hlbWUgLSBDb2xvciBzY2hlbWUgdG8gYmUgdXNlZCBieSB0aGlzIG1hcC5cclxuICAgICAqIEBvdmVycmlkZSBcclxuICAgICAqIEBtZW1iZXJPZiBDaGFuZ2VNYXBcclxuICAgICAqL1xyXG4gICAgcHJlUHJvY2Vzc0RhdGEoZ2VvanNvbiwgbnVtYmVyT2ZDbGFzc2VzLCBjbGFzc0JyZWFrc01ldGhvZCwgY29sb3JzY2hlbWUpIHtcclxuICAgICAgICBsZXQgb3B0cyA9IHRoaXMuZ2lzcGxheU9wdGlvbnM7XHJcbiAgICAgICAgbGV0IGdqb25GZWF0dXJlcyA9IGdlb2pzb24uZmVhdHVyZXM7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBnam9uRmVhdHVyZXMubGVuZ3RoICYmIGkgPCBvcHRzLm1heEZlYXR1cmVzOyBpKyspIHtcclxuICAgICAgICAgICAgbGV0IGdqc29uTWludWVuZCA9IGdqb25GZWF0dXJlc1tpXS5wcm9wZXJ0aWVzW29wdHMubWludWVuZF07XHJcbiAgICAgICAgICAgIGxldCBnanNvblN1YnRyYWhlbmQgPSBnam9uRmVhdHVyZXNbaV0ucHJvcGVydGllc1tvcHRzLnN1YnRyYWhlbmRdO1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIGdqc29uTWludWVuZCA9PT0gJ251bWJlcicgJiYgdHlwZW9mIGdqc29uU3VidHJhaGVuZCA9PT0gJ251bWJlcicpIHsgLy8gICYmIGdqb25taW51ZW5kICE9IG51bGwgJiYgZ2pvblN1YnRyYWhlbmQgIT0gbnVsbFxyXG4gICAgICAgICAgICAgICAgdGhpcy5tYXggPSBNYXRoLm1heCh0aGlzLm1heCwgZ2pzb25NaW51ZW5kIC0gZ2pzb25TdWJ0cmFoZW5kKTtcclxuICAgICAgICAgICAgICAgIHRoaXMubWluID0gTWF0aC5taW4odGhpcy5taW4sIGdqc29uTWludWVuZCAtIGdqc29uU3VidHJhaGVuZCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCBicmVha3MgPSBbdGhpcy5taW4sIHRoaXMubWF4XTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBUaGUgY29sb3IgdG8gZmlsbCB0aGUgQWVzdGhldGljIGVsZW1lbnQoUkdCQSkgT1IgYSBmdW5jdGlvbiB0byBjcmVhdGUgdGhpcyBjb2xvci5cclxuICAgICAgICAgKiBAdHlwZSB7bnVtYmVyW119XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5mY29sb3IgPSBjaHJvbWEuc2NhbGUoY29sb3JzY2hlbWUpO1xyXG4gICAgICAgIGNvbnN0IGFlcyA9IG5ldyBBZXN0aGV0aWMoMCwgb3B0cy5hdHRyLCB0aGlzLmZjb2xvciwgWzAsIDAsIDAsIDFdLCBudWxsLCBbYnJlYWtzWzBdLCBicmVha3NbMV1dKTtcclxuICAgICAgICBhZXMub3V0ZXIgPSB0cnVlO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEFlc3RoZXRpYyBvYmplY3QuIEluIHRoZSBjYXNlIG9mIGEgQ2hhbmdlIE1hcCBvbmx5IG9uZSBBZXN0aGV0aWMgZXhpc3RzLlxyXG4gICAgICAgICAqIEB0eXBlIHtBcnJheTxBZXN0aGV0aWM+fVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuYWVzdGhldGljcyA9IFthZXNdO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogTWV0aG9kIGNhbGxlZCB0byBidWlsZCB0aGUgTWFwIExlZ2VuZC5cclxuICAgICAqIENyZWF0ZSBhIGdyYWRpZW50IGFuZCBpbnNlcnQgbGVnZW5kIG9udG8gYmFja2dyb3VuZCBtYXAuXHJcbiAgICAgKiBAb3ZlcnJpZGUgXHJcbiAgICAgKiBAbWVtYmVyT2YgQ2hhbmdlTWFwXHJcbiAgICAgKi9cclxuICAgIGJ1aWxkTGVnZW5kKCkge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFRoZSBMZWdlbmQgdG8gYmUgdXNlZCB0aHJvdWdoIHRoZSBsaWZlIG9mIHRoZSBtYXAuXHJcbiAgICAgICAgICogQHR5cGUge0xlZ2VuZH0gXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5sZWdlbmQgPSBuZXcgTGVnZW5kKHRoaXMuaWQsIHRoaXMuZ2lzcGxheU9wdGlvbnMubGVnZW5kVGl0bGUpO1xyXG4gICAgICAgIHRoaXMubGVnZW5kLmluc2VydEdyYWRpZW50KHRoaXMsIHRoaXMubWluLCAwLCB0aGlzLm1heCk7XHJcbiAgICAgICAgdGhpcy5sZWdlbmQuaW5zZXJ0TGVnZW5kKHRoaXMuYkdNYXApO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBlbXB0eSBvYmplY3QuXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gZGVmYXVsdENvbG9yU2NoZW1lSWQgLSBUaGUgaWQgb2YgdGhlIGRlZmF1bHQgY29sb3Igc2NoZW1lIHRvIGNob29zZSB0aGUgY29sb3JzLlxyXG4gICAgICogQG92ZXJyaWRlIFxyXG4gICAgICogQG1lbWJlck9mIENoYW5nZU1hcFxyXG4gICAgICovXHJcbiAgICBkZWZhdWx0cyhkZWZhdWx0Q29sb3JTY2hlbWVJZCkge1xyXG4gICAgICAgIHJldHVybiB7fTtcclxuICAgIH1cclxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvR2lzcGxheS9NYXBzL1R5cGVzL0NoYW5nZU1hcC5qcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBOzs7Ozs7O0FBQ0E7OztBQUdBOzs7QUFFQTs7Ozs7OztBQU9BO0FBQUE7QUFDQTtBQURBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQTtBQUtBO0FBQ0E7QUFDQTs7Ozs7Ozs7OztBQU1BO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBRUE7QUFBQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBTkE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQU9BO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7O0FBU0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7O0FBTUE7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7O0FBTUE7QUFDQTtBQUNBOzs7OyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 9 */
/* unknown exports provided */
/* all exports used */
/*!*****************************************************!*\
  !*** ./src/Gisplay/Maps/Types/ChorochromaticMap.js ***!
  \*****************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ChorochromaticMap = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Choropleth2 = __webpack_require__(/*! ./Choropleth */ 3);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\r\n * Chorochormatic Map implemenetation.\r\n */\nvar ChorochromaticMap = exports.ChorochromaticMap = function (_Choropleth) {\n    _inherits(ChorochromaticMap, _Choropleth);\n\n    /**\r\n     * Creates an instance of ChorochromaticMap.\r\n     * @param {BGMapWrapper} bgmap - Background map object.\r\n     * @param {JSON} geometry - JSON object with the geometry that was read from the file.\r\n     * @param {Object} options - User options to be used. \r\n     * @memberOf ChorochromaticMap\r\n     */\n    function ChorochromaticMap(bgmap, geometry, options) {\n        _classCallCheck(this, ChorochromaticMap);\n\n        return _possibleConstructorReturn(this, (ChorochromaticMap.__proto__ || Object.getPrototypeOf(ChorochromaticMap)).call(this, bgmap, geometry, options));\n    }\n\n    /**\r\n     * Returns the color scheme associated with the id given.\r\n     * @param {number} defaultColorSchemeId - The id of the color scheme to choose the colors.\r\n     * @returns {colorScheme: string[]} - The color scheme.\r\n     * @override\r\n     * @memberOf ChorochromaticMap\r\n     */\n\n\n    _createClass(ChorochromaticMap, [{\n        key: \"defaults\",\n        value: function defaults(defaultColorSchemeId) {\n            var options = {};\n            switch (defaultColorSchemeId) {\n                case 1:\n                    options.colorScheme = [\"#440154\", \"#440256\", \"#450457\", \"#450559\", \"#46075a\", \"#46085c\", \"#460a5d\", \"#460b5e\", \"#470d60\", \"#470e61\", \"#471063\", \"#471164\", \"#471365\", \"#481467\", \"#481668\", \"#481769\", \"#48186a\", \"#481a6c\", \"#481b6d\", \"#481c6e\", \"#481d6f\", \"#481f70\", \"#482071\", \"#482173\", \"#482374\", \"#482475\", \"#482576\", \"#482677\", \"#482878\", \"#482979\", \"#472a7a\", \"#472c7a\", \"#472d7b\", \"#472e7c\", \"#472f7d\", \"#46307e\", \"#46327e\", \"#46337f\", \"#463480\", \"#453581\", \"#453781\", \"#453882\", \"#443983\", \"#443a83\", \"#443b84\", \"#433d84\", \"#433e85\", \"#423f85\", \"#424086\", \"#424186\", \"#414287\", \"#414487\", \"#404588\", \"#404688\", \"#3f4788\", \"#3f4889\", \"#3e4989\", \"#3e4a89\", \"#3e4c8a\", \"#3d4d8a\", \"#3d4e8a\", \"#3c4f8a\", \"#3c508b\", \"#3b518b\", \"#3b528b\", \"#3a538b\", \"#3a548c\", \"#39558c\", \"#39568c\", \"#38588c\", \"#38598c\", \"#375a8c\", \"#375b8d\", \"#365c8d\", \"#365d8d\", \"#355e8d\", \"#355f8d\", \"#34608d\", \"#34618d\", \"#33628d\", \"#33638d\", \"#32648e\", \"#32658e\", \"#31668e\", \"#31678e\", \"#31688e\", \"#30698e\", \"#306a8e\", \"#2f6b8e\", \"#2f6c8e\", \"#2e6d8e\", \"#2e6e8e\", \"#2e6f8e\", \"#2d708e\", \"#2d718e\", \"#2c718e\", \"#2c728e\", \"#2c738e\", \"#2b748e\", \"#2b758e\", \"#2a768e\", \"#2a778e\", \"#2a788e\", \"#29798e\", \"#297a8e\", \"#297b8e\", \"#287c8e\", \"#287d8e\", \"#277e8e\", \"#277f8e\", \"#27808e\", \"#26818e\", \"#26828e\", \"#26828e\", \"#25838e\", \"#25848e\", \"#25858e\", \"#24868e\", \"#24878e\", \"#23888e\", \"#23898e\", \"#238a8d\", \"#228b8d\", \"#228c8d\", \"#228d8d\", \"#218e8d\", \"#218f8d\", \"#21908d\", \"#21918c\", \"#20928c\", \"#20928c\", \"#20938c\", \"#1f948c\", \"#1f958b\", \"#1f968b\", \"#1f978b\", \"#1f988b\", \"#1f998a\", \"#1f9a8a\", \"#1e9b8a\", \"#1e9c89\", \"#1e9d89\", \"#1f9e89\", \"#1f9f88\", \"#1fa088\", \"#1fa188\", \"#1fa187\", \"#1fa287\", \"#20a386\", \"#20a486\", \"#21a585\", \"#21a685\", \"#22a785\", \"#22a884\", \"#23a983\", \"#24aa83\", \"#25ab82\", \"#25ac82\", \"#26ad81\", \"#27ad81\", \"#28ae80\", \"#29af7f\", \"#2ab07f\", \"#2cb17e\", \"#2db27d\", \"#2eb37c\", \"#2fb47c\", \"#31b57b\", \"#32b67a\", \"#34b679\", \"#35b779\", \"#37b878\", \"#38b977\", \"#3aba76\", \"#3bbb75\", \"#3dbc74\", \"#3fbc73\", \"#40bd72\", \"#42be71\", \"#44bf70\", \"#46c06f\", \"#48c16e\", \"#4ac16d\", \"#4cc26c\", \"#4ec36b\", \"#50c46a\", \"#52c569\", \"#54c568\", \"#56c667\", \"#58c765\", \"#5ac864\", \"#5cc863\", \"#5ec962\", \"#60ca60\", \"#63cb5f\", \"#65cb5e\", \"#67cc5c\", \"#69cd5b\", \"#6ccd5a\", \"#6ece58\", \"#70cf57\", \"#73d056\", \"#75d054\", \"#77d153\", \"#7ad151\", \"#7cd250\", \"#7fd34e\", \"#81d34d\", \"#84d44b\", \"#86d549\", \"#89d548\", \"#8bd646\", \"#8ed645\", \"#90d743\", \"#93d741\", \"#95d840\", \"#98d83e\", \"#9bd93c\", \"#9dd93b\", \"#a0da39\", \"#a2da37\", \"#a5db36\", \"#a8db34\", \"#aadc32\", \"#addc30\", \"#b0dd2f\", \"#b2dd2d\", \"#b5de2b\", \"#b8de29\", \"#bade28\", \"#bddf26\", \"#c0df25\", \"#c2df23\", \"#c5e021\", \"#c8e020\", \"#cae11f\", \"#cde11d\", \"#d0e11c\", \"#d2e21b\", \"#d5e21a\", \"#d8e219\", \"#dae319\", \"#dde318\", \"#dfe318\", \"#e2e418\", \"#e5e419\", \"#e7e419\", \"#eae51a\", \"#ece51b\", \"#efe51c\", \"#f1e51d\", \"#f4e61e\", \"#f6e620\", \"#f8e621\", \"#fbe723\", \"#fde725\"];\n                    break;\n                case 2:\n                    options.colorScheme = ['purple', 'orange', 'blue', 'yellow', 'pink', 'green', 'red', 'navy'];\n                    break;\n                default:\n                    options.colorScheme = [\"#440154\", \"#440256\", \"#450457\", \"#450559\", \"#46075a\", \"#46085c\", \"#460a5d\", \"#460b5e\", \"#470d60\", \"#470e61\", \"#471063\", \"#471164\", \"#471365\", \"#481467\", \"#481668\", \"#481769\", \"#48186a\", \"#481a6c\", \"#481b6d\", \"#481c6e\", \"#481d6f\", \"#481f70\", \"#482071\", \"#482173\", \"#482374\", \"#482475\", \"#482576\", \"#482677\", \"#482878\", \"#482979\", \"#472a7a\", \"#472c7a\", \"#472d7b\", \"#472e7c\", \"#472f7d\", \"#46307e\", \"#46327e\", \"#46337f\", \"#463480\", \"#453581\", \"#453781\", \"#453882\", \"#443983\", \"#443a83\", \"#443b84\", \"#433d84\", \"#433e85\", \"#423f85\", \"#424086\", \"#424186\", \"#414287\", \"#414487\", \"#404588\", \"#404688\", \"#3f4788\", \"#3f4889\", \"#3e4989\", \"#3e4a89\", \"#3e4c8a\", \"#3d4d8a\", \"#3d4e8a\", \"#3c4f8a\", \"#3c508b\", \"#3b518b\", \"#3b528b\", \"#3a538b\", \"#3a548c\", \"#39558c\", \"#39568c\", \"#38588c\", \"#38598c\", \"#375a8c\", \"#375b8d\", \"#365c8d\", \"#365d8d\", \"#355e8d\", \"#355f8d\", \"#34608d\", \"#34618d\", \"#33628d\", \"#33638d\", \"#32648e\", \"#32658e\", \"#31668e\", \"#31678e\", \"#31688e\", \"#30698e\", \"#306a8e\", \"#2f6b8e\", \"#2f6c8e\", \"#2e6d8e\", \"#2e6e8e\", \"#2e6f8e\", \"#2d708e\", \"#2d718e\", \"#2c718e\", \"#2c728e\", \"#2c738e\", \"#2b748e\", \"#2b758e\", \"#2a768e\", \"#2a778e\", \"#2a788e\", \"#29798e\", \"#297a8e\", \"#297b8e\", \"#287c8e\", \"#287d8e\", \"#277e8e\", \"#277f8e\", \"#27808e\", \"#26818e\", \"#26828e\", \"#26828e\", \"#25838e\", \"#25848e\", \"#25858e\", \"#24868e\", \"#24878e\", \"#23888e\", \"#23898e\", \"#238a8d\", \"#228b8d\", \"#228c8d\", \"#228d8d\", \"#218e8d\", \"#218f8d\", \"#21908d\", \"#21918c\", \"#20928c\", \"#20928c\", \"#20938c\", \"#1f948c\", \"#1f958b\", \"#1f968b\", \"#1f978b\", \"#1f988b\", \"#1f998a\", \"#1f9a8a\", \"#1e9b8a\", \"#1e9c89\", \"#1e9d89\", \"#1f9e89\", \"#1f9f88\", \"#1fa088\", \"#1fa188\", \"#1fa187\", \"#1fa287\", \"#20a386\", \"#20a486\", \"#21a585\", \"#21a685\", \"#22a785\", \"#22a884\", \"#23a983\", \"#24aa83\", \"#25ab82\", \"#25ac82\", \"#26ad81\", \"#27ad81\", \"#28ae80\", \"#29af7f\", \"#2ab07f\", \"#2cb17e\", \"#2db27d\", \"#2eb37c\", \"#2fb47c\", \"#31b57b\", \"#32b67a\", \"#34b679\", \"#35b779\", \"#37b878\", \"#38b977\", \"#3aba76\", \"#3bbb75\", \"#3dbc74\", \"#3fbc73\", \"#40bd72\", \"#42be71\", \"#44bf70\", \"#46c06f\", \"#48c16e\", \"#4ac16d\", \"#4cc26c\", \"#4ec36b\", \"#50c46a\", \"#52c569\", \"#54c568\", \"#56c667\", \"#58c765\", \"#5ac864\", \"#5cc863\", \"#5ec962\", \"#60ca60\", \"#63cb5f\", \"#65cb5e\", \"#67cc5c\", \"#69cd5b\", \"#6ccd5a\", \"#6ece58\", \"#70cf57\", \"#73d056\", \"#75d054\", \"#77d153\", \"#7ad151\", \"#7cd250\", \"#7fd34e\", \"#81d34d\", \"#84d44b\", \"#86d549\", \"#89d548\", \"#8bd646\", \"#8ed645\", \"#90d743\", \"#93d741\", \"#95d840\", \"#98d83e\", \"#9bd93c\", \"#9dd93b\", \"#a0da39\", \"#a2da37\", \"#a5db36\", \"#a8db34\", \"#aadc32\", \"#addc30\", \"#b0dd2f\", \"#b2dd2d\", \"#b5de2b\", \"#b8de29\", \"#bade28\", \"#bddf26\", \"#c0df25\", \"#c2df23\", \"#c5e021\", \"#c8e020\", \"#cae11f\", \"#cde11d\", \"#d0e11c\", \"#d2e21b\", \"#d5e21a\", \"#d8e219\", \"#dae319\", \"#dde318\", \"#dfe318\", \"#e2e418\", \"#e5e419\", \"#e7e419\", \"#eae51a\", \"#ece51b\", \"#efe51c\", \"#f1e51d\", \"#f4e61e\", \"#f6e620\", \"#f8e621\", \"#fbe723\", \"#fde725\"];\n                    break;\n            }\n            return options;\n        }\n    }]);\n\n    return ChorochromaticMap;\n}(_Choropleth2.Choropleth);//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 10 */
/* unknown exports provided */
/* all exports used */
/*!******************************************!*\
  !*** ./src/Gisplay/Maps/Types/DotMap.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.DotMap = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Map2 = __webpack_require__(/*! ../Map */ 1);\n\nvar _Legend = __webpack_require__(/*! ../Legend */ 0);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\r\n * DotMap implemenetation\r\n */\nvar DotMap = exports.DotMap = function (_Map) {\n    _inherits(DotMap, _Map);\n\n    /**\r\n     * Creates an instance of DotMap.\r\n     * @param {BGMapWrapper} bgmap - Background map object.\r\n     * @param {JSON} geometry - JSON object with the geometry that was read from the file.\r\n     * @param {Object} options - User options to be used.\r\n     * @memberOf DotMap\r\n     */\n    function DotMap(bgmap, geometry, options) {\n        _classCallCheck(this, DotMap);\n\n        var _this = _possibleConstructorReturn(this, (DotMap.__proto__ || Object.getPrototypeOf(DotMap)).call(this, bgmap, geometry, options));\n\n        _this.loadOptions(options, bgmap);\n        _this.initialize();\n        return _this;\n    }\n\n    /**\r\n     * Draw Dot map, at the beginning and when the map is moved.\r\n     * @see initialize() and makeMap() methods.\r\n     * @override\r\n     * @memberOf DotMap\r\n     */\n\n\n    _createClass(DotMap, [{\n        key: 'draw',\n        value: function draw() {\n            this.clear();\n            /* for (let i = 0; i < this.aesthetics.length; i++)\r\n                 if (this.aesthetics[i].enabled == true)\r\n                     this.drawPoints(this.aesthetics[i]);*/\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = this.aesthetics[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var aes = _step.value;\n\n                    if (aes.isEnabled()) this.drawPoints(aes);\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        }\n\n        /**\r\n         * Method called to build the Map Legend.\r\n         * For all Aesthethics that exist crate one point row and then insert the Legend to the map\r\n         * @override \r\n         * @memberOf DotMap\r\n         */\n\n    }, {\n        key: 'buildLegend',\n        value: function buildLegend() {\n            /**\r\n             * The Legend to be used through the life of the map.\r\n             * @type {Legend} \r\n             */\n            this.legend = new _Legend.Legend(this.id, this.gisplayOptions.legendTitle);\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = this.aesthetics[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var aes = _step2.value;\n\n                    this.legend.insertPointRow(aes, this);\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            this.legend.insertLegend(this.bGMap);\n        }\n\n        /**\r\n         * Returns the color scheme and number of classes associated with the id given.\r\n         * @param {number} defaultColorSchemeId \r\n         * @returns {{colorScheme: string[], numberOfClasses: number}}\r\n         * @override \r\n         * @memberOf DotMap\r\n         */\n\n    }, {\n        key: 'defaults',\n        value: function defaults(defaultColorSchemeId) {\n            var options = {};\n            switch (defaultColorSchemeId) {\n                case 1:\n                    options.colorScheme = [\"#440154\", \"#440256\", \"#450457\", \"#450559\", \"#46075a\", \"#46085c\", \"#460a5d\", \"#460b5e\", \"#470d60\", \"#470e61\", \"#471063\", \"#471164\", \"#471365\", \"#481467\", \"#481668\", \"#481769\", \"#48186a\", \"#481a6c\", \"#481b6d\", \"#481c6e\", \"#481d6f\", \"#481f70\", \"#482071\", \"#482173\", \"#482374\", \"#482475\", \"#482576\", \"#482677\", \"#482878\", \"#482979\", \"#472a7a\", \"#472c7a\", \"#472d7b\", \"#472e7c\", \"#472f7d\", \"#46307e\", \"#46327e\", \"#46337f\", \"#463480\", \"#453581\", \"#453781\", \"#453882\", \"#443983\", \"#443a83\", \"#443b84\", \"#433d84\", \"#433e85\", \"#423f85\", \"#424086\", \"#424186\", \"#414287\", \"#414487\", \"#404588\", \"#404688\", \"#3f4788\", \"#3f4889\", \"#3e4989\", \"#3e4a89\", \"#3e4c8a\", \"#3d4d8a\", \"#3d4e8a\", \"#3c4f8a\", \"#3c508b\", \"#3b518b\", \"#3b528b\", \"#3a538b\", \"#3a548c\", \"#39558c\", \"#39568c\", \"#38588c\", \"#38598c\", \"#375a8c\", \"#375b8d\", \"#365c8d\", \"#365d8d\", \"#355e8d\", \"#355f8d\", \"#34608d\", \"#34618d\", \"#33628d\", \"#33638d\", \"#32648e\", \"#32658e\", \"#31668e\", \"#31678e\", \"#31688e\", \"#30698e\", \"#306a8e\", \"#2f6b8e\", \"#2f6c8e\", \"#2e6d8e\", \"#2e6e8e\", \"#2e6f8e\", \"#2d708e\", \"#2d718e\", \"#2c718e\", \"#2c728e\", \"#2c738e\", \"#2b748e\", \"#2b758e\", \"#2a768e\", \"#2a778e\", \"#2a788e\", \"#29798e\", \"#297a8e\", \"#297b8e\", \"#287c8e\", \"#287d8e\", \"#277e8e\", \"#277f8e\", \"#27808e\", \"#26818e\", \"#26828e\", \"#26828e\", \"#25838e\", \"#25848e\", \"#25858e\", \"#24868e\", \"#24878e\", \"#23888e\", \"#23898e\", \"#238a8d\", \"#228b8d\", \"#228c8d\", \"#228d8d\", \"#218e8d\", \"#218f8d\", \"#21908d\", \"#21918c\", \"#20928c\", \"#20928c\", \"#20938c\", \"#1f948c\", \"#1f958b\", \"#1f968b\", \"#1f978b\", \"#1f988b\", \"#1f998a\", \"#1f9a8a\", \"#1e9b8a\", \"#1e9c89\", \"#1e9d89\", \"#1f9e89\", \"#1f9f88\", \"#1fa088\", \"#1fa188\", \"#1fa187\", \"#1fa287\", \"#20a386\", \"#20a486\", \"#21a585\", \"#21a685\", \"#22a785\", \"#22a884\", \"#23a983\", \"#24aa83\", \"#25ab82\", \"#25ac82\", \"#26ad81\", \"#27ad81\", \"#28ae80\", \"#29af7f\", \"#2ab07f\", \"#2cb17e\", \"#2db27d\", \"#2eb37c\", \"#2fb47c\", \"#31b57b\", \"#32b67a\", \"#34b679\", \"#35b779\", \"#37b878\", \"#38b977\", \"#3aba76\", \"#3bbb75\", \"#3dbc74\", \"#3fbc73\", \"#40bd72\", \"#42be71\", \"#44bf70\", \"#46c06f\", \"#48c16e\", \"#4ac16d\", \"#4cc26c\", \"#4ec36b\", \"#50c46a\", \"#52c569\", \"#54c568\", \"#56c667\", \"#58c765\", \"#5ac864\", \"#5cc863\", \"#5ec962\", \"#60ca60\", \"#63cb5f\", \"#65cb5e\", \"#67cc5c\", \"#69cd5b\", \"#6ccd5a\", \"#6ece58\", \"#70cf57\", \"#73d056\", \"#75d054\", \"#77d153\", \"#7ad151\", \"#7cd250\", \"#7fd34e\", \"#81d34d\", \"#84d44b\", \"#86d549\", \"#89d548\", \"#8bd646\", \"#8ed645\", \"#90d743\", \"#93d741\", \"#95d840\", \"#98d83e\", \"#9bd93c\", \"#9dd93b\", \"#a0da39\", \"#a2da37\", \"#a5db36\", \"#a8db34\", \"#aadc32\", \"#addc30\", \"#b0dd2f\", \"#b2dd2d\", \"#b5de2b\", \"#b8de29\", \"#bade28\", \"#bddf26\", \"#c0df25\", \"#c2df23\", \"#c5e021\", \"#c8e020\", \"#cae11f\", \"#cde11d\", \"#d0e11c\", \"#d2e21b\", \"#d5e21a\", \"#d8e219\", \"#dae319\", \"#dde318\", \"#dfe318\", \"#e2e418\", \"#e5e419\", \"#e7e419\", \"#eae51a\", \"#ece51b\", \"#efe51c\", \"#f1e51d\", \"#f4e61e\", \"#f6e620\", \"#f8e621\", \"#fbe723\", \"#fde725\"];\n                    break;\n                case 2:\n                    options.colorScheme = ['purple', 'orange', 'blue', 'yellow', 'pink', 'green', 'red', 'navy'];\n                    break;\n                default:\n                    break;\n            }\n            options.numberOfClasses = 1;\n            return options;\n        }\n    }]);\n\n    return DotMap;\n}(_Map2.Map);//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 11 */
/* unknown exports provided */
/* all exports used */
/*!**********************************************************!*\
  !*** ./src/Gisplay/Maps/Types/ProportionalSymbolsMap.js ***!
  \**********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProportionalSymbolsMap = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Map2 = __webpack_require__(/*! ../Map */ 1);\n\nvar _Legend = __webpack_require__(/*! ../Legend */ 0);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\r\n * Proportional Symbols Map implementation.\r\n */\nvar ProportionalSymbolsMap = exports.ProportionalSymbolsMap = function (_Map) {\n    _inherits(ProportionalSymbolsMap, _Map);\n\n    /**\r\n     * Creates an instance of ProportionalSymbolsMap.\r\n     * @param {BGMapWrapper} bgmap - Background map object.\r\n     * @param {JSON} geometry - JSON object with the geometry that was read from the file.\r\n     * @param {Object} options - User options to be used.\r\n     * @memberOf ProportionalSymbolsMap\r\n     */\n    function ProportionalSymbolsMap(bgmap, geometry, options) {\n        _classCallCheck(this, ProportionalSymbolsMap);\n\n        var _this = _possibleConstructorReturn(this, (ProportionalSymbolsMap.__proto__ || Object.getPrototypeOf(ProportionalSymbolsMap)).call(this, bgmap, geometry, options));\n\n        _this.loadOptions(options, bgmap);\n        _this.gisplayOptions.isDynamic = !options.sizeByClass;\n        _this.initialize();\n        return _this;\n    }\n\n    /**\r\n     * Draw ProportionalSymbols map, at the beginning and when the map is moved.\r\n     * @see initialize() and makeMap() methods.\r\n     * @override \r\n     * @memberOf ProportionalSymbolsMap\r\n     */\n\n\n    _createClass(ProportionalSymbolsMap, [{\n        key: 'draw',\n        value: function draw() {\n            this.clear();\n            if (!this.gisplayOptions.isDynamic) {\n                for (var i = this.aesthetics.length - 1; i >= 0; i--) {\n                    if (this.aesthetics[i].isEnabled()) this.drawPoints(this.aesthetics[i]);\n                }\n            } else {\n                for (var _i = this.aesthetics.length - 1; _i >= 0; _i--) {\n                    if (this.aesthetics[_i].isEnabled()) this.drawProportionalPoints(this.aesthetics[_i]);\n                }\n            }\n        }\n\n        /**\r\n         * Method called to build the Map Legend.\r\n         * For all Aesthethics that exist crate one proportional symbol row and then insert the Legend to the map. \r\n         * @override \r\n         * @memberOf ProportionalSymbolsMap\r\n         */\n\n    }, {\n        key: 'buildLegend',\n        value: function buildLegend() {\n            /**\r\n             * The Legend to be used through the life of the map.\r\n             * @type {Legend} \r\n             */\n            this.legend = new _Legend.Legend(this.id, this.gisplayOptions.legendTitle);\n            if (this.aesthetics.length === 1) this.legend.insertProportionalSymbols(this.aesthetics[0], this, this.gisplayOptions.numberOfLegendItems);else for (var i = this.aesthetics.length - 1; i >= 0; i--) {\n                if (i === 0) this.legend.insertProportionalSymbols(this.aesthetics[i], this, 2);else this.legend.insertProportionalSymbols(this.aesthetics[i], this, 1);\n            }\n            // i == 0 ? this.legend.insertProportionalSymbols(this.aesthetics[i], this, 2) : this.legend.insertProportionalSymbols(this.aesthetics[i], this, 1);\n            this.legend.insertLegend(this.bGMap);\n        }\n\n        /**\r\n         * Returns the color scheme, number of classes, minimum point size and max point size associated with the id given.\r\n         * @param {number} defaultColorSchemeId - The id of the default color scheme to choose the colors.\r\n         * @returns {{maxPointSize: number, minPointSize: number, colorScheme: string[], numberOfClasses: number}}\r\n         * @override \r\n         * @memberOf ProportionalSymbolsMap\r\n         */\n\n    }, {\n        key: 'defaults',\n        value: function defaults(defaultColorSchemeId) {\n            var options = {};\n            switch (defaultColorSchemeId) {\n                case 1:\n                    options.maxPointSize = 60;\n                    options.minPointSize = 5;\n                    options.colorScheme = ['green', 'red', 'blue'];\n                    options.numberOfClasses = 1;\n                    break;\n                default:\n                    break;\n            }\n            return options;\n        }\n    }]);\n\n    return ProportionalSymbolsMap;\n}(_Map2.Map);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL0dpc3BsYXkvTWFwcy9UeXBlcy9Qcm9wb3J0aW9uYWxTeW1ib2xzTWFwLmpzP2NjNzEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWFwIH0gZnJvbSAnLi4vTWFwJztcclxuaW1wb3J0IHsgTGVnZW5kIH0gZnJvbSAnLi4vTGVnZW5kJztcclxuXHJcbi8qKlxyXG4gKiBQcm9wb3J0aW9uYWwgU3ltYm9scyBNYXAgaW1wbGVtZW50YXRpb24uXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgUHJvcG9ydGlvbmFsU3ltYm9sc01hcCBleHRlbmRzIE1hcCB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGVzIGFuIGluc3RhbmNlIG9mIFByb3BvcnRpb25hbFN5bWJvbHNNYXAuXHJcbiAgICAgKiBAcGFyYW0ge0JHTWFwV3JhcHBlcn0gYmdtYXAgLSBCYWNrZ3JvdW5kIG1hcCBvYmplY3QuXHJcbiAgICAgKiBAcGFyYW0ge0pTT059IGdlb21ldHJ5IC0gSlNPTiBvYmplY3Qgd2l0aCB0aGUgZ2VvbWV0cnkgdGhhdCB3YXMgcmVhZCBmcm9tIHRoZSBmaWxlLlxyXG4gICAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgLSBVc2VyIG9wdGlvbnMgdG8gYmUgdXNlZC5cclxuICAgICAqIEBtZW1iZXJPZiBQcm9wb3J0aW9uYWxTeW1ib2xzTWFwXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKGJnbWFwLCBnZW9tZXRyeSwgb3B0aW9ucykge1xyXG4gICAgICAgIHN1cGVyKGJnbWFwLCBnZW9tZXRyeSwgb3B0aW9ucyk7XHJcbiAgICAgICAgdGhpcy5sb2FkT3B0aW9ucyhvcHRpb25zLCBiZ21hcCk7XHJcbiAgICAgICAgdGhpcy5naXNwbGF5T3B0aW9ucy5pc0R5bmFtaWMgPSAhb3B0aW9ucy5zaXplQnlDbGFzcztcclxuICAgICAgICB0aGlzLmluaXRpYWxpemUoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIERyYXcgUHJvcG9ydGlvbmFsU3ltYm9scyBtYXAsIGF0IHRoZSBiZWdpbm5pbmcgYW5kIHdoZW4gdGhlIG1hcCBpcyBtb3ZlZC5cclxuICAgICAqIEBzZWUgaW5pdGlhbGl6ZSgpIGFuZCBtYWtlTWFwKCkgbWV0aG9kcy5cclxuICAgICAqIEBvdmVycmlkZSBcclxuICAgICAqIEBtZW1iZXJPZiBQcm9wb3J0aW9uYWxTeW1ib2xzTWFwXHJcbiAgICAgKi9cclxuICAgIGRyYXcoKSB7XHJcbiAgICAgICAgdGhpcy5jbGVhcigpO1xyXG4gICAgICAgIGlmICghdGhpcy5naXNwbGF5T3B0aW9ucy5pc0R5bmFtaWMpIHtcclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IHRoaXMuYWVzdGhldGljcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSlcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmFlc3RoZXRpY3NbaV0uaXNFbmFibGVkKCkpXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kcmF3UG9pbnRzKHRoaXMuYWVzdGhldGljc1tpXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gdGhpcy5hZXN0aGV0aWNzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKVxyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuYWVzdGhldGljc1tpXS5pc0VuYWJsZWQoKSlcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmRyYXdQcm9wb3J0aW9uYWxQb2ludHModGhpcy5hZXN0aGV0aWNzW2ldKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBNZXRob2QgY2FsbGVkIHRvIGJ1aWxkIHRoZSBNYXAgTGVnZW5kLlxyXG4gICAgICogRm9yIGFsbCBBZXN0aGV0aGljcyB0aGF0IGV4aXN0IGNyYXRlIG9uZSBwcm9wb3J0aW9uYWwgc3ltYm9sIHJvdyBhbmQgdGhlbiBpbnNlcnQgdGhlIExlZ2VuZCB0byB0aGUgbWFwLiBcclxuICAgICAqIEBvdmVycmlkZSBcclxuICAgICAqIEBtZW1iZXJPZiBQcm9wb3J0aW9uYWxTeW1ib2xzTWFwXHJcbiAgICAgKi9cclxuICAgIGJ1aWxkTGVnZW5kKCkge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFRoZSBMZWdlbmQgdG8gYmUgdXNlZCB0aHJvdWdoIHRoZSBsaWZlIG9mIHRoZSBtYXAuXHJcbiAgICAgICAgICogQHR5cGUge0xlZ2VuZH0gXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5sZWdlbmQgPSBuZXcgTGVnZW5kKHRoaXMuaWQsIHRoaXMuZ2lzcGxheU9wdGlvbnMubGVnZW5kVGl0bGUpO1xyXG4gICAgICAgIGlmICh0aGlzLmFlc3RoZXRpY3MubGVuZ3RoID09PSAxKVxyXG4gICAgICAgICAgICB0aGlzLmxlZ2VuZC5pbnNlcnRQcm9wb3J0aW9uYWxTeW1ib2xzKHRoaXMuYWVzdGhldGljc1swXSwgdGhpcywgdGhpcy5naXNwbGF5T3B0aW9ucy5udW1iZXJPZkxlZ2VuZEl0ZW1zKTtcclxuICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSB0aGlzLmFlc3RoZXRpY3MubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcclxuICAgICAgICAgICAgICAgIGlmIChpID09PSAwKVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMubGVnZW5kLmluc2VydFByb3BvcnRpb25hbFN5bWJvbHModGhpcy5hZXN0aGV0aWNzW2ldLCB0aGlzLCAyKTtcclxuICAgICAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmxlZ2VuZC5pbnNlcnRQcm9wb3J0aW9uYWxTeW1ib2xzKHRoaXMuYWVzdGhldGljc1tpXSwgdGhpcywgMSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAvLyBpID09IDAgPyB0aGlzLmxlZ2VuZC5pbnNlcnRQcm9wb3J0aW9uYWxTeW1ib2xzKHRoaXMuYWVzdGhldGljc1tpXSwgdGhpcywgMikgOiB0aGlzLmxlZ2VuZC5pbnNlcnRQcm9wb3J0aW9uYWxTeW1ib2xzKHRoaXMuYWVzdGhldGljc1tpXSwgdGhpcywgMSk7XHJcbiAgICAgICAgdGhpcy5sZWdlbmQuaW5zZXJ0TGVnZW5kKHRoaXMuYkdNYXApO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB0aGUgY29sb3Igc2NoZW1lLCBudW1iZXIgb2YgY2xhc3NlcywgbWluaW11bSBwb2ludCBzaXplIGFuZCBtYXggcG9pbnQgc2l6ZSBhc3NvY2lhdGVkIHdpdGggdGhlIGlkIGdpdmVuLlxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGRlZmF1bHRDb2xvclNjaGVtZUlkIC0gVGhlIGlkIG9mIHRoZSBkZWZhdWx0IGNvbG9yIHNjaGVtZSB0byBjaG9vc2UgdGhlIGNvbG9ycy5cclxuICAgICAqIEByZXR1cm5zIHt7bWF4UG9pbnRTaXplOiBudW1iZXIsIG1pblBvaW50U2l6ZTogbnVtYmVyLCBjb2xvclNjaGVtZTogc3RyaW5nW10sIG51bWJlck9mQ2xhc3NlczogbnVtYmVyfX1cclxuICAgICAqIEBvdmVycmlkZSBcclxuICAgICAqIEBtZW1iZXJPZiBQcm9wb3J0aW9uYWxTeW1ib2xzTWFwXHJcbiAgICAgKi9cclxuICAgIGRlZmF1bHRzKGRlZmF1bHRDb2xvclNjaGVtZUlkKSB7XHJcbiAgICAgICAgY29uc3Qgb3B0aW9ucyA9IHt9O1xyXG4gICAgICAgIHN3aXRjaCAoZGVmYXVsdENvbG9yU2NoZW1lSWQpIHtcclxuICAgICAgICAgICAgY2FzZSAxOlxyXG4gICAgICAgICAgICAgICAgb3B0aW9ucy5tYXhQb2ludFNpemUgPSA2MDtcclxuICAgICAgICAgICAgICAgIG9wdGlvbnMubWluUG9pbnRTaXplID0gNTtcclxuICAgICAgICAgICAgICAgIG9wdGlvbnMuY29sb3JTY2hlbWUgPSBbJ2dyZWVuJywgJ3JlZCcsICdibHVlJ107XHJcbiAgICAgICAgICAgICAgICBvcHRpb25zLm51bWJlck9mQ2xhc3NlcyA9IDE7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gb3B0aW9ucztcclxuICAgIH1cclxuXHJcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL0dpc3BsYXkvTWFwcy9UeXBlcy9Qcm9wb3J0aW9uYWxTeW1ib2xzTWFwLmpzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBO0FBQUE7QUFDQTs7Ozs7OztBQUNBOzs7QUFHQTs7O0FBRUE7Ozs7Ozs7QUFPQTtBQUFBO0FBQ0E7QUFEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFLQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFHQTtBQUVBO0FBQ0E7QUFEQTtBQUdBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7QUFNQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUlBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7O0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVJBO0FBVUE7QUFDQTs7OzsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 12 */
/* unknown exports provided */
/* all exports used */
/*!**************************!*\
  !*** ./src/gisplayv2.js ***!
  \**************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _Gisplay = __webpack_require__(/*! ./Gisplay/Gisplay */ 4);\n\nmodule.exports = {\n\n    /** ######################### CHOROPLETH MAPS ################################# */\n    //Choropleth\n    createBGMap: function createBGMap() {\n        console.log(\"Start gisplayv2. TESTE workflow 25/03.\");\n        L.mapbox.accessToken = 'pk.eyJ1IjoibG9sYXNkIiwiYSI6ImNpbmxsZDJkejAwOHR2Zm0yZHVwOWV1ejEifQ.SJ6CupBlW0gPic0n-HgY6w';\n        window.map = L.mapbox.map('map', 'mapbox.streets').setView([49.36855556, -81.66371667], 4);\n    },\n\n    startChoropleth: function startChoropleth() {\n        var gisplay = new _Gisplay.Gisplay();\n        var options = {\n            colorScheme: [\"white\", \"yellow\", \"orange\", \"red\"],\n            numberOfClasses: 4,\n            attr: 'f3',\n            legendTitle: 'Fatals'\n        };\n        var time = Date.now();\n\n        var reader = new FileReader();\n        reader.onloadend = function () {\n            var data = JSON.parse(reader.result);\n            var datareadtimestamp = Date.now();\n            console.log(\"tempo de leitura do ficheiro: \" + (datareadtimestamp - time) / 1000 + \" segundos\");\n\n            gisplay.makeChoropleth(window.map, data, options);\n            console.log(\"tempo gisplay: \" + (Date.now() - datareadtimestamp) / 1000 + \" segundos\");\n            console.log(\"tempo total: \" + (Date.now() - time) / 1000 + \" segundos\");\n        };\n        reader.readAsText(document.getElementById(\"file\").files[0]);\n    },\n\n    createBGMapChorocromatic: function createBGMapChorocromatic() {\n        L.mapbox.accessToken = 'pk.eyJ1IjoibG9sYXNkIiwiYSI6ImNpbmxsZDJkejAwOHR2Zm0yZHVwOWV1ejEifQ.SJ6CupBlW0gPic0n-HgY6w';\n        window.map = L.mapbox.map('map', 'mapbox.streets').setView([49.36855556, -81.66371667], 4);\n    },\n\n    startChorocromatic: function startChorocromatic() {\n        var gisplay = new _Gisplay.Gisplay();\n        var options = {\n            attr: 'f2',\n            legendTitle: \"Most Frequent Crime\"\n        };\n\n        var time = Date.now();\n        console.log(\"starting Chorocromatic Map...\");\n\n        var reader = new FileReader();\n        reader.onloadend = function () {\n            var data = JSON.parse(reader.result);\n            var datareadtimestamp = Date.now();\n            console.log(\"tempo de leitura do ficheiro: \" + (datareadtimestamp - time) / 1000 + \" segundos\");\n            gisplay.makeChorochromaticMap(window.map, data, options);\n        };\n        reader.readAsText(document.getElementById(\"file\").files[0]);\n    },\n\n    /** ######################### DOT MAPS ################################# */\n    //DOT MAP Example 1\n    createBGMapDotMap: function createBGMapDotMap() {\n        L.mapbox.accessToken = 'pk.eyJ1IjoibG9sYXNkIiwiYSI6ImNpbmxsZDJkejAwOHR2Zm0yZHVwOWV1ejEifQ.SJ6CupBlW0gPic0n-HgY6w';\n        window.map = L.mapbox.map('map', 'mapbox.dark').setView([49.36855556, -81.66371667], 4);\n    },\n\n    startDotMap1: function startDotMap1() {\n        var gisplay = new _Gisplay.Gisplay();\n        console.log(\"starting Dot Map 1...\");\n\n        var options = {\n            colorScheme: [\"red\", \"green\"],\n            attr: 'f1',\n            legendTitle: \"Alcohol\"\n        };\n\n        var time = Date.now();\n        var reader = new FileReader();\n        reader.onloadend = function () {\n            var data = JSON.parse(reader.result);\n            var datareadtimestamp = Date.now();\n            console.log(\"tempo de leitura do ficheiro: \" + (datareadtimestamp - time) / 1000 + \" segundos\");\n\n            gisplay.makeDotMap(window.map, data, options);\n            console.log(\"tempo gisplay: \" + (Date.now() - datareadtimestamp) / 1000 + \" segundos\");\n            console.log(\"tempo total: \" + (Date.now() - time) / 1000 + \" segundos\");\n        };\n        reader.readAsText(document.getElementById(\"file\").files[0]);\n    },\n\n    //DOT MAP Example 2\n    startDotMap2: function startDotMap2() {\n        var gisplay = new _Gisplay.Gisplay();\n        console.log(\"starting Dot Map 2...\");\n\n        var options = {\n            colorScheme: [\"blue\", \"red\"],\n            maxPointSize: 100,\n            numberOfClasses: 2,\n            classBreaksMethod: \"k-means\",\n            minPointSize: 1,\n            attr: 'f2',\n            legendTitle: \"Fatals\"\n        };\n\n        var time = Date.now();\n        var reader = new FileReader();\n        reader.onloadend = function () {\n            var data = JSON.parse(reader.result);\n            var datareadtimestamp = Date.now();\n            console.log(\"tempo de leitura do ficheiro: \" + (datareadtimestamp - time) / 1000 + \" segundos\");\n            gisplay.makeDotMap(window.map, data, options);\n            console.log(\"tempo gisplay: \" + (Date.now() - datareadtimestamp) / 1000 + \" segundos\");\n            console.log(\"tempo total: \" + (Date.now() - time) / 1000 + \" segundos\");\n        };\n        reader.readAsText(document.getElementById(\"file\").files[0]);\n    },\n\n    /** ######################### CHANGE MAPS ################################# */\n    createBGMapChangeMap: function createBGMapChangeMap() {\n        L.mapbox.accessToken = 'pk.eyJ1IjoibG9sYXNkIiwiYSI6ImNpbmxsZDJkejAwOHR2Zm0yZHVwOWV1ejEifQ.SJ6CupBlW0gPic0n-HgY6w';\n        window.map = L.mapbox.map('map', 'mapbox.dark').setView([49.36855556, -81.66371667], 4);\n    },\n\n    startChangeMap: function startChangeMap() {\n        var gisplay = new _Gisplay.Gisplay();\n        console.log(\"starting Change Map 1...\");\n\n        var options = {\n            colorScheme: [\"green\", \"red\"],\n            minuend: 'f6',\n            subtrahend: 'f2',\n            alpha: 1,\n            legendTitle: \"Evolução entre 2009 e 2013\"\n        };\n\n        var reader = new FileReader();\n        reader.onloadend = function () {\n            var data = JSON.parse(reader.result);\n            gisplay.makeChangeMap(window.map, data, options);\n        };\n        reader.readAsText(document.getElementById(\"file\").files[0]);\n    },\n\n    /** ######################## PROP. SYMBOLS MAPS ########################### */\n    createBGPSymbols: function createBGPSymbols() {\n        L.mapbox.accessToken = 'pk.eyJ1IjoibG9sYXNkIiwiYSI6ImNpbmxsZDJkejAwOHR2Zm0yZHVwOWV1ejEifQ.SJ6CupBlW0gPic0n-HgY6w';\n        window.map = L.mapbox.map('map', 'mapbox.dark').setView([49.36855556, -81.66371667], 4);\n    },\n\n    startPSymbols: function startPSymbols() {\n        var gisplay = new _Gisplay.Gisplay();\n        console.log(\"starting Proportional Symbols...\");\n        var options = {\n            maxPointSize: 100,\n            minPointSize: 5,\n            attr: 'f1',\n            alpha: 1.0,\n            numberOfLegendItems: 3,\n            legendTitle: \"Accidents\"\n        };\n\n        var time = Date.now();\n\n        var reader = new FileReader();\n        reader.onloadend = function () {\n            var data = JSON.parse(reader.result);\n            gisplay.makeProportionalSymbolsMap(window.map, data, options);\n        };\n        reader.readAsText(document.getElementById(\"file\").files[0]);\n    }\n\n}; /**\r\n    * This file is the entry point for the Gisplay API\r\n    *///# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ })
/******/ ]);