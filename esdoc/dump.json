[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "src/Gisplay/Gisplay.js",
    "content": "import { Choropleth } from './Maps/Types/Choropleth';\r\nimport { DotMap } from './Maps/Types/DotMap';\r\nimport { ChangeMap } from './Maps/Types/ChangeMap';\r\nimport { ProportionalSymbolsMap } from './Maps/Types/ProportionalSymbolsMap';\r\nimport { ChorochromaticMap } from './Maps/Types/ChorochromaticMap';\r\nimport { ChoroplethGoogleMaps } from './Maps/v11/1_BackgroundMaps/ChoroplethGoogleMaps';\r\nimport { ChoroplethHereMaps } from './Maps/v11/1_BackgroundMaps/ChoroplethHereMaps';\r\nimport { ChoroplethBingMaps } from './Maps/v11/1_BackgroundMaps/ChoroplethBingMaps';\r\nimport { DotMapGoogleMaps } from './Maps/v11/1_BackgroundMaps/DotMapGoogleMaps';\r\n\r\n/**\r\n * Gisplay API entry point with one method for each map available.\r\n */\r\nexport class Gisplay {\r\n\r\n    /**\r\n     * Creates an instance of the Gisplay API.\r\n     * @memberOf Gisplay\r\n     */\r\n    constructor() {\r\n        // console.log(\"Gisplay Class constructor\");\r\n        /**\r\n         * TimeStamp at the beginning.\r\n         * @type {number} \r\n         * @deprecated\r\n         */\r\n        this.startTimeStamp = 0;\r\n\r\n        /**\r\n         * Whether or not it  should profile the API.\r\n         * @type {string} - Whether or not it  should profile the API.\r\n         */\r\n        window.profiling = true;\r\n        /**\r\n         * @type {Array} - Array of maps. @WHY?\r\n         */\r\n        window.maps = new Array();\r\n        /**\r\n         * @type {number} - The number of maps. Used to mark each one with a different id.\r\n         */\r\n        window.mapcount = 0;\r\n\r\n        //WebGL API\r\n        /**\r\n         * @type {number} - The number of vertices produced. @WHY?\r\n         * @deprecated\r\n         */\r\n        window._vertexcount = 0;\r\n        /**\r\n         * @type {number} - The number of ???. @WHY?\r\n         * @deprecated\r\n         */\r\n        window._tricount = 0;\r\n    }\r\n\r\n    /**\r\n     * Creates a map of type Choropleth.\r\n     * @param {Object} bgmap - Background map object be used(atm only MapBox being used).- Background map object be used(atm only MapBox being used).\r\n     * @param {JSON} geometry - The object that contains the data.\r\n     * @param {Object} options - Object that contains user personalization options.\r\n     * @memberOf Gisplay\r\n     */\r\n    makeChoropleth(bgmap, geometry, options) {\r\n        const gismap = new Choropleth(bgmap, geometry, options);\r\n        gismap.makeMap(); //this.makeMap(gismap, options);\r\n    }\r\n\r\n    /**\r\n     * Creates a Dot Map.\r\n     * @param {Object} bgmap - Background map object be used(atm only MapBox being used).\r\n     * @param {JSON} geometry - The object that contains the data.\r\n     * @param {Object} options - Object that contains user personalization options.\r\n     * @memberOf Gisplay\r\n     */\r\n    makeDotMap(bgmap, geometry, options) {\r\n        const gismap = new DotMap(bgmap, geometry, options);\r\n        gismap.makeMap();\r\n    }\r\n\r\n    /**\r\n     * Creates a Change Map.\r\n     * @param {Object} bgmap - Background map object be used(atm only MapBox being used).\r\n     * @param {JSON} geometry - The object that contains the data.\r\n     * @param {Object} options - Object that contains user personalization options.\r\n     * @memberOf Gisplay\r\n     */\r\n    makeChangeMap(bgmap, geometry, options) {\r\n        const gismap = new ChangeMap(bgmap, geometry, options);\r\n        gismap.makeMap();\r\n    }\r\n\r\n    /**\r\n     * Creates a Proportional Symbols Map.\r\n     * @param {Object} bgmap - Background map object be used(atm only MapBox being used).\r\n     * @param {JSON} geometry - The object that contains the data.\r\n     * @param {Object} options - Object that contains user personalization options.\r\n     * @memberOf Gisplay\r\n     */\r\n    makeProportionalSymbolsMap(bgmap, geometry, options) {\r\n        const gismap = new ProportionalSymbolsMap(bgmap, geometry, options);\r\n        gismap.makeMap();\r\n    }\r\n\r\n    /**\r\n     * Creates a Chorocromatic Map.\r\n     * @param {Object} bgmap - Background map object be used(atm only MapBox being used).\r\n     * @param {JSON} geometry - The object that contains the data.\r\n     * @param {Object} options - Object that contains user personalization options.\r\n     * @memberOf Gisplay\r\n     */\r\n    makeChorochromaticMap(bgmap, geometry, options) {\r\n        const gismap = new ChorochromaticMap(bgmap, geometry, options);\r\n        gismap.makeMap();\r\n    }\r\n\r\n    /* ######################     Background Map Providers      ############### */\r\n    /**\r\n     * Creates a map of type Choropleth with background map being from Google Maps.\r\n     * @param {Object} bgmap - Background map object be used, in this case Google Maps.\r\n     * @param {JSON} geometry - The object that contains the data.\r\n     * @param {Object} options - Object that contains user personalization options.\r\n     * @memberOf Gisplay\r\n     */\r\n    makeChoroplethGoogleMaps(bgmap, geometry, options) {\r\n        const gismap = new ChoroplethGoogleMaps(bgmap, geometry, options);\r\n        gismap.makeMap();\r\n    }\r\n\r\n    /**\r\n     * Creates a map of type Choropleth with background map being from Here Maps.\r\n     * @param {Object} bgmap - Background map object be used, in this case Here Maps.\r\n     * @param {JSON} geometry - The object that contains the data.\r\n     * @param {Object} options - Object that contains user personalization options.\r\n     * @memberOf Gisplay\r\n     */\r\n    makeChoroplethHereMaps(bgmap, geometry, options) {\r\n        const gismap = new ChoroplethHereMaps(bgmap, geometry, options);\r\n        gismap.makeMap();\r\n    }\r\n\r\n    /**\r\n     * Creates a map of type Choropleth with background map being from Bing Maps.\r\n     * @param {Object} bgmap - Background map object be used, in this case Bing Maps.\r\n     * @param {JSON} geometry - The object that contains the data.\r\n     * @param {Object} options - Object that contains user personalization options.\r\n     * @memberOf Gisplay\r\n     */\r\n    makeChoroplethBingMaps(bgmap, geometry, options) {\r\n        const gismap = new ChoroplethBingMaps(bgmap, geometry, options);\r\n        gismap.makeMap();\r\n    }\r\n\r\n    /**\r\n     * Creates a map of type Dot Map with background map being from Google Maps.\r\n     * @param {Object} bgmap - Background map object be used, in this case Google Maps.\r\n     * @param {JSON} geometry - The object that contains the data.\r\n     * @param {Object} options - Object that contains user personalization options.\r\n     * @memberOf Gisplay\r\n     */\r\n    makeDotMapGoogleMaps(bgmap, geometry, options) {\r\n        const gismap = new DotMapGoogleMaps(bgmap, geometry, options);\r\n        gismap.makeMap();\r\n    }\r\n}",
    "static": true,
    "longname": "src/Gisplay/Gisplay.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "class",
    "name": "Gisplay",
    "memberof": "src/Gisplay/Gisplay.js",
    "static": true,
    "longname": "src/Gisplay/Gisplay.js~Gisplay",
    "access": null,
    "export": true,
    "importPath": "gisplay-es6-webpack/src/Gisplay/Gisplay.js",
    "importStyle": "{Gisplay}",
    "description": "Gisplay API entry point with one method for each map available.",
    "lineNumber": 14,
    "interface": false
  },
  {
    "__docId__": 2,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Gisplay/Gisplay.js~Gisplay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Gisplay.js~Gisplay#constructor",
    "access": null,
    "description": "Creates an instance of the Gisplay API.",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Gisplay"
      }
    ],
    "params": []
  },
  {
    "__docId__": 3,
    "kind": "member",
    "name": "startTimeStamp",
    "memberof": "src/Gisplay/Gisplay.js~Gisplay",
    "static": false,
    "longname": "src/Gisplay/Gisplay.js~Gisplay#startTimeStamp",
    "access": null,
    "description": "TimeStamp at the beginning.",
    "lineNumber": 27,
    "deprecated": true,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 4,
    "kind": "method",
    "name": "makeChoropleth",
    "memberof": "src/Gisplay/Gisplay.js~Gisplay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Gisplay.js~Gisplay#makeChoropleth",
    "access": null,
    "description": "Creates a map of type Choropleth.",
    "lineNumber": 63,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Gisplay"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "bgmap",
        "description": "Background map object be used(atm only MapBox being used).- Background map object be used(atm only MapBox being used)."
      },
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "geometry",
        "description": "The object that contains the data."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Object that contains user personalization options."
      }
    ]
  },
  {
    "__docId__": 5,
    "kind": "method",
    "name": "makeDotMap",
    "memberof": "src/Gisplay/Gisplay.js~Gisplay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Gisplay.js~Gisplay#makeDotMap",
    "access": null,
    "description": "Creates a Dot Map.",
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Gisplay"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "bgmap",
        "description": "Background map object be used(atm only MapBox being used)."
      },
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "geometry",
        "description": "The object that contains the data."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Object that contains user personalization options."
      }
    ]
  },
  {
    "__docId__": 6,
    "kind": "method",
    "name": "makeChangeMap",
    "memberof": "src/Gisplay/Gisplay.js~Gisplay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Gisplay.js~Gisplay#makeChangeMap",
    "access": null,
    "description": "Creates a Change Map.",
    "lineNumber": 87,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Gisplay"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "bgmap",
        "description": "Background map object be used(atm only MapBox being used)."
      },
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "geometry",
        "description": "The object that contains the data."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Object that contains user personalization options."
      }
    ]
  },
  {
    "__docId__": 7,
    "kind": "method",
    "name": "makeProportionalSymbolsMap",
    "memberof": "src/Gisplay/Gisplay.js~Gisplay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Gisplay.js~Gisplay#makeProportionalSymbolsMap",
    "access": null,
    "description": "Creates a Proportional Symbols Map.",
    "lineNumber": 99,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Gisplay"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "bgmap",
        "description": "Background map object be used(atm only MapBox being used)."
      },
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "geometry",
        "description": "The object that contains the data."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Object that contains user personalization options."
      }
    ]
  },
  {
    "__docId__": 8,
    "kind": "method",
    "name": "makeChorochromaticMap",
    "memberof": "src/Gisplay/Gisplay.js~Gisplay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Gisplay.js~Gisplay#makeChorochromaticMap",
    "access": null,
    "description": "Creates a Chorocromatic Map.",
    "lineNumber": 111,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Gisplay"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "bgmap",
        "description": "Background map object be used(atm only MapBox being used)."
      },
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "geometry",
        "description": "The object that contains the data."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Object that contains user personalization options."
      }
    ]
  },
  {
    "__docId__": 9,
    "kind": "method",
    "name": "makeChoroplethGoogleMaps",
    "memberof": "src/Gisplay/Gisplay.js~Gisplay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Gisplay.js~Gisplay#makeChoroplethGoogleMaps",
    "access": null,
    "description": "Creates a map of type Choropleth with background map being from Google Maps.",
    "lineNumber": 124,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Gisplay"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "bgmap",
        "description": "Background map object be used, in this case Google Maps."
      },
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "geometry",
        "description": "The object that contains the data."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Object that contains user personalization options."
      }
    ]
  },
  {
    "__docId__": 10,
    "kind": "method",
    "name": "makeChoroplethHereMaps",
    "memberof": "src/Gisplay/Gisplay.js~Gisplay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Gisplay.js~Gisplay#makeChoroplethHereMaps",
    "access": null,
    "description": "Creates a map of type Choropleth with background map being from Here Maps.",
    "lineNumber": 136,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Gisplay"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "bgmap",
        "description": "Background map object be used, in this case Here Maps."
      },
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "geometry",
        "description": "The object that contains the data."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Object that contains user personalization options."
      }
    ]
  },
  {
    "__docId__": 11,
    "kind": "method",
    "name": "makeChoroplethBingMaps",
    "memberof": "src/Gisplay/Gisplay.js~Gisplay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Gisplay.js~Gisplay#makeChoroplethBingMaps",
    "access": null,
    "description": "Creates a map of type Choropleth with background map being from Bing Maps.",
    "lineNumber": 148,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Gisplay"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "bgmap",
        "description": "Background map object be used, in this case Bing Maps."
      },
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "geometry",
        "description": "The object that contains the data."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Object that contains user personalization options."
      }
    ]
  },
  {
    "__docId__": 12,
    "kind": "method",
    "name": "makeDotMapGoogleMaps",
    "memberof": "src/Gisplay/Gisplay.js~Gisplay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Gisplay.js~Gisplay#makeDotMapGoogleMaps",
    "access": null,
    "description": "Creates a map of type Dot Map with background map being from Google Maps.",
    "lineNumber": 160,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Gisplay"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "bgmap",
        "description": "Background map object be used, in this case Google Maps."
      },
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "geometry",
        "description": "The object that contains the data."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Object that contains user personalization options."
      }
    ]
  },
  {
    "__docId__": 13,
    "kind": "file",
    "name": "src/Gisplay/GisplayOptions.js",
    "content": "/**\r\n * This class will contain all the options available on the Gisplay API.\r\n * @see Diogo's thesis page 50-52\r\n */\r\nexport class GisplayOptions {\r\n\r\n    /**\r\n     * Creates a new Options object. User options take precedence over default options.\r\n     * @param {Object} userOptions - The user defined options.\r\n     * @param {string} userOptions.attr -  The attribute to be mapped.\r\n     * @param {string[]} [userOptions.colorScheme] -  The color scheme to be used.\r\n     * @param {number} [userOptions.numberOfClasses] -  Number of classes to be used on the map Legend.\r\n     * @param {string} [userOptions.classBreaksMethod=quantile] -  Algorithm to be used by the API to calculate classes intervals. \r\n     * @param {number[]} [userOptions.classBreaks=undefined] - Class intervals.\r\n     * @param {boolean} [userOptions.interactive=true] - Show pop-up when the user clicks on a Feature.\r\n     * @param {boolean} [userOptions.showPropertiesOnClick=null] - Show pop-up when the user clicks on a Feature.\r\n     * @param {boolean} [userOptions.showLegend=true] - Show map Legend.\r\n     * @param {string} [userOptions.minuend=undefined] - The minimum property of the GeoJSON feature object.\r\n     * @param {string} [userOptions.subtrahend=undefined] - The property to subtract from minuend.\r\n     * @param {string} [userOptions.legendTitle=this.attr] - Legend title for the Legend.\r\n     * @param {boolean} [userOptions.showLoader=true] - Show loader when loading data.\r\n     * @param {boolean} [userOptions.useCustomMapService=false] - Use custom map service.\r\n     * @param {number} [userOptions.minPointSize=1.0] - Minimum point size.\r\n     * @param {number} [userOptions.maxPointSize=10.0] - Maximum point size.\r\n     * @param {boolean} [userOptions.sizeByClass=false] - Specify the size of the dots on a PSymbols Map using classes.\r\n     * @param {boolean} [userOptions.memorySaver=false] - Save memory on Dot Maps.\r\n     * @param {boolean} [userOptions.colorSchemeId=1] - The color scheme id to use.\r\n     * @param {Function} [userOptions.legendOnClickFunction] - Function to be called when the user clicks on a Legend class.\r\n     * @param {Function} [userOptions.mapOnClickFunction] - Function to be called when the user clicks on the Map (on a Feature).\r\n     * @param {number} [userOptions.alpha=0.8] - Alpha to be used in WebGL.\r\n     * @param {number} [userOptions.maxFeatures=Number.MAX_VALUE] - The max number of features to be displayed.\r\n     * @param {number} [userOptions.numberOfLegendItems=2] - The number of Legend items (Used on PSymbols Map).\r\n     * @param {number} [userOptions.intensity=1] - Intensity for Heat Map.\r\n     * @param {string} [userOptions.legendPosition=br] - The Legend position(br=bottom right).\r\n     * @param {number} [userOptions.legendNumberFormat=0] - Number of decimal numbers to show on the numerical values of the Legend.\r\n     * @param {number} [userOptions.tileSize=256] - Size of each background map tile.\r\n     */\r\n    constructor(userOptions) {\r\n        /**\r\n         * The attribute to be mapped.\r\n         * @see Chapter 4 Page 50 of Diogo's thesis.\r\n         * @type {string} \r\n         */\r\n        this.attr = userOptions.attr;\r\n        //TODO: Uncoment next line\r\n        //if(!this.attr) throw new Error(\"Attribute not defined in userOptions, please define one attribute to be mapped\");\r\n        /**\r\n         * Array of colors to be used by the API. \r\n         * @see Chapter 4 Page 50 of Diogo's thesis.\r\n         * @type {string[]}\r\n         */\r\n        this.colorScheme = userOptions.colorScheme;\r\n        /**\r\n         * Number of classes to be used on the map Legend. This option should be used when the user wants the API\r\n         * to calculate the classes (aka ranges) using the given number. Otherwise the API will calculate the appropriate number of classes to use.\r\n         * @type{number}\r\n         */\r\n        this.numberOfClasses = userOptions.numberOfClasses;\r\n        /**\r\n         * Algorithm to be used by the API to calculate classes intervals. \r\n         * Defaults to quantile if the user does not provide any or if it provides one that isn't on the list of available algorithms.\r\n         * Available options are 'quantile', 'equidistant', 'k-means'.\r\n         * @type {string}\r\n         */\r\n        this.classBreaksMethod = this.getAvailableClassBreaksMethods().indexOf(userOptions.classBreaksMethod) > 0 ? userOptions.classBreaksMethod : 'quantile';\r\n        /**\r\n         * Class intervals. If this is defined then numberOfClasses and classBreakMethod are ignored.\r\n         * @type {number[]}\r\n         */\r\n        this.classBreaks = userOptions.classBreaks; //undefined n era preciso\r\n        /**\r\n         * When we click on a feature that is on the map, show properties of said Feature or not.\r\n         * @type {boolean}\r\n         */\r\n        this.interactive = (userOptions.interactive !== undefined) ? userOptions.interactive : true;\r\n        /**\r\n         * Properties and description to be shown when the user clicks on a Feature.\r\n         * @todo NOT USED? \r\n         * @type {string[]}\r\n         */\r\n        this.showPropertiesOnClick = userOptions.showPropertiesOnClick || null;\r\n        /**\r\n         * Whether or not to show the map Legend.\r\n         * @type {boolean}\r\n         */\r\n        this.showLegend = (userOptions.showLegend !== undefined) ? userOptions.showLegend : true;\r\n        /**\r\n         * The minimum property of the GeoJSON feature object. Used on Change Map.\r\n         * @type {string}\r\n         */\r\n        this.minuend = userOptions.minuend;\r\n        /**\r\n         * The property of the GeoJSON feature object to subtract from the minimum. Used on Change Map.\r\n         * @type {string}\r\n         */\r\n        this.subtrahend = userOptions.subtrahend;\r\n        /**\r\n         * The title to be used on the Legend. Third option is used for Change Map.\r\n         * @type {string}\r\n         */\r\n        this.legendTitle = userOptions.legendTitle || this.attr || (`${this.minuend} - ${this.subtrahend}`);\r\n        /**\r\n         * Whether to show or not the loader when we the API is loading the needed data.\r\n         * @type {boolean}\r\n         */\r\n        this.showLoader = userOptions.showLoader || true;\r\n        /**\r\n         * True when the user wants to use another background map service than those who are supported by default by the API.\r\n         * If this is true then the user should send the custom map service when creating the new Map. \r\n         * @type {boolean} \r\n         */\r\n        this.useCustomMapService = userOptions.useCustomMapService || false;\r\n        /**\r\n         * The minimum size of the points to be drawn on the Map. Will be used on PSymbols and maybe on Dot Map/Heat Map.\r\n         * @type {number}\r\n         */\r\n        this.minPointSize = userOptions.minPointSize === undefined ? 1.0 : parseFloat(userOptions.minPointSize); //N preciso do if no PSymbols?\r\n        /**\r\n         * The maximum size of the points to be drawn on the Map. Will be used on PSymbols. The dot with highest value \r\n         * on the features will have the size given by the user.\r\n         * @type {number}\r\n         */\r\n        this.maxPointSize = userOptions.maxPointSize === undefined ? 10.0 : parseFloat(userOptions.maxPointSize); //N preciso do if no PSymbols?\r\n        /**\r\n         * If the user wants to specify the size of the dots on a PSymbols Map using classes, this attribute should be true.\r\n         * @type {boolean}\r\n         */\r\n        this.sizeByClass = userOptions.sizeByClass || false;\r\n        /**\r\n         * If false each feature will have it's own WebGLBuffer, otherwise the geometry will be grouped creating one WebGLBuffer by\r\n         * Aesthetic class. As the name implies allows memory saving and with this improves performance in lower end devices. \r\n         * Only Available/Relevant to Dot Maps.\r\n         * @type {boolean}\r\n         */\r\n        this.memorySaver = userOptions.memorySaver || true;\r\n        /**\r\n         * Allows the user to choose the color scheme id to be used to choose from the list of defaults color shemes availabe on the Map to be created.\r\n         * @type {number}\r\n         */\r\n        this.colorSchemeId = userOptions.colorSchemeId || 1;\r\n        /**\r\n         * Function to be called when the user clicks on a Legend class. This function should receive an object of type Aesthetic.\r\n         * @type {Function}\r\n         */\r\n        this.legendOnClickFunction = userOptions.legendOnClickFunction;\r\n        /**\r\n         * Function to be called when the user clicks on the Map (on a Feature). This function should receive an array, which are the Feature properties.\r\n         * @type {Function}\r\n         */\r\n        this.mapOnClickFunction = userOptions.mapOnClickFunction;\r\n\r\n        /** #####################       OTHER OPTIONS(Non Described on the Thesis draft)      ############################## */\r\n        /**\r\n         * Alpha to be used in WebGL.\r\n         * 0 means fully transparent <-> 1 fully opaque.\r\n         * @type {number}\r\n         */\r\n        this.alpha = userOptions.alpha || 0.8;\r\n        /**\r\n         * The max number of features to be displayed. If not given by the user then it is the maximum numnber allowed.\r\n         * Number.MAX_VALUE = 1.79E+308\r\n         * @type {number}\r\n         */\r\n        this.maxFeatures = userOptions.maxFeatures || Number.MAX_VALUE;\r\n        /**\r\n         * The number of legend items. Used for PSymbols Map.\r\n         * @type {number}\r\n         */\r\n        this.numberOfLegendItems = userOptions.numberOfLegendItems || 2;\r\n        /**\r\n         * The size of each background map tile. Used by most background map providers is 256.\r\n         * @type {number}\r\n         */\r\n        this.tileSize = userOptions.tileSize || 256;\r\n\r\n        /** #####################       OTHER NON-USER DEFINED OPTIONS      ############################## */\r\n        /**\r\n         * If it is dynamic or not. When dynamic is set to true it will join all Features on one Aesthetic class in the same Feature and this way it can draw all elements at once.\r\n         * It's the inverse of the memorySaver value.\r\n         * @type {boolean}\r\n         */\r\n        this.isDynamic = !this.memorySaver;\r\n\r\n        /**\r\n         * Enable/Disable Legend toggle.\r\n         * @type {boolean} \r\n         */\r\n        this.legendToggle = true;\r\n\r\n        /** #####################       DEPRECATED ############################## */\r\n        /**\r\n         * Intensity of a heat map. Higher values of intensity means more red in the end color. Otherwise more green.\r\n         * @deprecated Not used ATM, should probably be used for Heat Maps.\r\n         * @type {number}\r\n         */\r\n        this.intensity = userOptions.intensity || 1.0;\r\n        /**\r\n         * The user defined position of the Legend over the map. Allowed positions tl, tr, bl, br.\r\n         * @type {string}\r\n         * @deprecated Currently not in use. Maybe implement later.\r\n         */\r\n        this.legendPosition = userOptions.legendPosition || 'br';\r\n        /**\r\n         * Number of decimal numbers to show on the numerical values of the Legend.\r\n         * @deprecated Currently not in use. Maybe implement later.\r\n         * @type {number}\r\n         */\r\n        this.legendNumberFormat = userOptions.legendNumberFormat || 0;\r\n\r\n        /** #####################      OTHER GLOBAL OPTIONS     ############################## */\r\n        this.profiling = userOptions.profiling || true;\r\n    }\r\n\r\n    /**\r\n     * Returns the available class break methods.\r\n     * @returns {string[]} - All available class break methods under Gisplay API.\r\n     * @memberOf GisplayOptions\r\n     */\r\n    getAvailableClassBreaksMethods(){\r\n        return [\"quantile\", \"k-means\", \"equidistant\"];\r\n    }\r\n}",
    "static": true,
    "longname": "src/Gisplay/GisplayOptions.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 14,
    "kind": "class",
    "name": "GisplayOptions",
    "memberof": "src/Gisplay/GisplayOptions.js",
    "static": true,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "access": null,
    "export": true,
    "importPath": "gisplay-es6-webpack/src/Gisplay/GisplayOptions.js",
    "importStyle": "{GisplayOptions}",
    "description": "This class will contain all the options available on the Gisplay API.",
    "see": [
      "Diogo's thesis page 50-52"
    ],
    "lineNumber": 5,
    "interface": false
  },
  {
    "__docId__": 15,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#constructor",
    "access": null,
    "description": "Creates a new Options object. User options take precedence over default options.",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "userOptions",
        "description": "The user defined options."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userOptions.attr",
        "description": "The attribute to be mapped."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "name": "userOptions.colorScheme",
        "description": "The color scheme to be used."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "userOptions.numberOfClasses",
        "description": "Number of classes to be used on the map Legend."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "quantile",
        "defaultRaw": "quantile",
        "name": "userOptions.classBreaksMethod",
        "description": "Algorithm to be used by the API to calculate classes intervals."
      },
      {
        "nullable": null,
        "types": [
          "number[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "userOptions.classBreaks",
        "description": "Class intervals."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "userOptions.interactive",
        "description": "Show pop-up when the user clicks on a Feature."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "userOptions.showPropertiesOnClick",
        "description": "Show pop-up when the user clicks on a Feature."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "userOptions.showLegend",
        "description": "Show map Legend."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "userOptions.minuend",
        "description": "The minimum property of the GeoJSON feature object."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "userOptions.subtrahend",
        "description": "The property to subtract from minuend."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "this.attr",
        "defaultRaw": "this.attr",
        "name": "userOptions.legendTitle",
        "description": "Legend title for the Legend."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "userOptions.showLoader",
        "description": "Show loader when loading data."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "userOptions.useCustomMapService",
        "description": "Use custom map service."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1.0",
        "defaultRaw": 1,
        "name": "userOptions.minPointSize",
        "description": "Minimum point size."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "10.0",
        "defaultRaw": 10,
        "name": "userOptions.maxPointSize",
        "description": "Maximum point size."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "userOptions.sizeByClass",
        "description": "Specify the size of the dots on a PSymbols Map using classes."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "userOptions.memorySaver",
        "description": "Save memory on Dot Maps."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "userOptions.colorSchemeId",
        "description": "The color scheme id to use."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "userOptions.legendOnClickFunction",
        "description": "Function to be called when the user clicks on a Legend class."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "userOptions.mapOnClickFunction",
        "description": "Function to be called when the user clicks on the Map (on a Feature)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0.8",
        "defaultRaw": 0.8,
        "name": "userOptions.alpha",
        "description": "Alpha to be used in WebGL."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "Number.MAX_VALUE",
        "defaultRaw": "Number.MAX_VALUE",
        "name": "userOptions.maxFeatures",
        "description": "The max number of features to be displayed."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "2",
        "defaultRaw": 2,
        "name": "userOptions.numberOfLegendItems",
        "description": "The number of Legend items (Used on PSymbols Map)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "userOptions.intensity",
        "description": "Intensity for Heat Map."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "br",
        "defaultRaw": "br",
        "name": "userOptions.legendPosition",
        "description": "The Legend position(br=bottom right)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "userOptions.legendNumberFormat",
        "description": "Number of decimal numbers to show on the numerical values of the Legend."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "256",
        "defaultRaw": 256,
        "name": "userOptions.tileSize",
        "description": "Size of each background map tile."
      }
    ]
  },
  {
    "__docId__": 16,
    "kind": "member",
    "name": "attr",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#attr",
    "access": null,
    "description": "The attribute to be mapped.",
    "see": [
      "Chapter 4 Page 50 of Diogo's thesis."
    ],
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 17,
    "kind": "member",
    "name": "colorScheme",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#colorScheme",
    "access": null,
    "description": "Array of colors to be used by the API. ",
    "see": [
      "Chapter 4 Page 50 of Diogo's thesis."
    ],
    "lineNumber": 52,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 18,
    "kind": "member",
    "name": "numberOfClasses",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#numberOfClasses",
    "access": null,
    "description": "Number of classes to be used on the map Legend. This option should be used when the user wants the API\nto calculate the classes (aka ranges) using the given number. Otherwise the API will calculate the appropriate number of classes to use.\n@type{number}",
    "lineNumber": 58,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 19,
    "kind": "member",
    "name": "classBreaksMethod",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#classBreaksMethod",
    "access": null,
    "description": "Algorithm to be used by the API to calculate classes intervals. \nDefaults to quantile if the user does not provide any or if it provides one that isn't on the list of available algorithms.\nAvailable options are 'quantile', 'equidistant', 'k-means'.",
    "lineNumber": 65,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 20,
    "kind": "member",
    "name": "classBreaks",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#classBreaks",
    "access": null,
    "description": "Class intervals. If this is defined then numberOfClasses and classBreakMethod are ignored.",
    "lineNumber": 70,
    "type": {
      "nullable": null,
      "types": [
        "number[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 21,
    "kind": "member",
    "name": "interactive",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#interactive",
    "access": null,
    "description": "When we click on a feature that is on the map, show properties of said Feature or not.",
    "lineNumber": 75,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 22,
    "kind": "member",
    "name": "showPropertiesOnClick",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#showPropertiesOnClick",
    "access": null,
    "description": "Properties and description to be shown when the user clicks on a Feature.",
    "lineNumber": 81,
    "todo": [
      "NOT USED? "
    ],
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 23,
    "kind": "member",
    "name": "showLegend",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#showLegend",
    "access": null,
    "description": "Whether or not to show the map Legend.",
    "lineNumber": 86,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 24,
    "kind": "member",
    "name": "minuend",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#minuend",
    "access": null,
    "description": "The minimum property of the GeoJSON feature object. Used on Change Map.",
    "lineNumber": 91,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 25,
    "kind": "member",
    "name": "subtrahend",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#subtrahend",
    "access": null,
    "description": "The property of the GeoJSON feature object to subtract from the minimum. Used on Change Map.",
    "lineNumber": 96,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 26,
    "kind": "member",
    "name": "legendTitle",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#legendTitle",
    "access": null,
    "description": "The title to be used on the Legend. Third option is used for Change Map.",
    "lineNumber": 101,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 27,
    "kind": "member",
    "name": "showLoader",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#showLoader",
    "access": null,
    "description": "Whether to show or not the loader when we the API is loading the needed data.",
    "lineNumber": 106,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 28,
    "kind": "member",
    "name": "useCustomMapService",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#useCustomMapService",
    "access": null,
    "description": "True when the user wants to use another background map service than those who are supported by default by the API.\nIf this is true then the user should send the custom map service when creating the new Map. ",
    "lineNumber": 112,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 29,
    "kind": "member",
    "name": "minPointSize",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#minPointSize",
    "access": null,
    "description": "The minimum size of the points to be drawn on the Map. Will be used on PSymbols and maybe on Dot Map/Heat Map.",
    "lineNumber": 117,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 30,
    "kind": "member",
    "name": "maxPointSize",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#maxPointSize",
    "access": null,
    "description": "The maximum size of the points to be drawn on the Map. Will be used on PSymbols. The dot with highest value \non the features will have the size given by the user.",
    "lineNumber": 123,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 31,
    "kind": "member",
    "name": "sizeByClass",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#sizeByClass",
    "access": null,
    "description": "If the user wants to specify the size of the dots on a PSymbols Map using classes, this attribute should be true.",
    "lineNumber": 128,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 32,
    "kind": "member",
    "name": "memorySaver",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#memorySaver",
    "access": null,
    "description": "If false each feature will have it's own WebGLBuffer, otherwise the geometry will be grouped creating one WebGLBuffer by\nAesthetic class. As the name implies allows memory saving and with this improves performance in lower end devices. \nOnly Available/Relevant to Dot Maps.",
    "lineNumber": 135,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 33,
    "kind": "member",
    "name": "colorSchemeId",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#colorSchemeId",
    "access": null,
    "description": "Allows the user to choose the color scheme id to be used to choose from the list of defaults color shemes availabe on the Map to be created.",
    "lineNumber": 140,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 34,
    "kind": "member",
    "name": "legendOnClickFunction",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#legendOnClickFunction",
    "access": null,
    "description": "Function to be called when the user clicks on a Legend class. This function should receive an object of type Aesthetic.",
    "lineNumber": 145,
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 35,
    "kind": "member",
    "name": "mapOnClickFunction",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#mapOnClickFunction",
    "access": null,
    "description": "Function to be called when the user clicks on the Map (on a Feature). This function should receive an array, which are the Feature properties.",
    "lineNumber": 150,
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 36,
    "kind": "member",
    "name": "alpha",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#alpha",
    "access": null,
    "description": "Alpha to be used in WebGL.\n0 means fully transparent <-> 1 fully opaque.",
    "lineNumber": 158,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 37,
    "kind": "member",
    "name": "maxFeatures",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#maxFeatures",
    "access": null,
    "description": "The max number of features to be displayed. If not given by the user then it is the maximum numnber allowed.\nNumber.MAX_VALUE = 1.79E+308",
    "lineNumber": 164,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 38,
    "kind": "member",
    "name": "numberOfLegendItems",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#numberOfLegendItems",
    "access": null,
    "description": "The number of legend items. Used for PSymbols Map.",
    "lineNumber": 169,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 39,
    "kind": "member",
    "name": "tileSize",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#tileSize",
    "access": null,
    "description": "The size of each background map tile. Used by most background map providers is 256.",
    "lineNumber": 174,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 40,
    "kind": "member",
    "name": "isDynamic",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#isDynamic",
    "access": null,
    "description": "If it is dynamic or not. When dynamic is set to true it will join all Features on one Aesthetic class in the same Feature and this way it can draw all elements at once.\nIt's the inverse of the memorySaver value.",
    "lineNumber": 182,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 41,
    "kind": "member",
    "name": "legendToggle",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#legendToggle",
    "access": null,
    "description": "Enable/Disable Legend toggle.",
    "lineNumber": 188,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 42,
    "kind": "member",
    "name": "intensity",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#intensity",
    "access": null,
    "description": "Intensity of a heat map. Higher values of intensity means more red in the end color. Otherwise more green.",
    "lineNumber": 196,
    "deprecated": "Not used ATM, should probably be used for Heat Maps.",
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 43,
    "kind": "member",
    "name": "legendPosition",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#legendPosition",
    "access": null,
    "description": "The user defined position of the Legend over the map. Allowed positions tl, tr, bl, br.",
    "lineNumber": 202,
    "deprecated": "Currently not in use. Maybe implement later.",
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 44,
    "kind": "member",
    "name": "legendNumberFormat",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#legendNumberFormat",
    "access": null,
    "description": "Number of decimal numbers to show on the numerical values of the Legend.",
    "lineNumber": 208,
    "deprecated": "Currently not in use. Maybe implement later.",
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 45,
    "kind": "member",
    "name": "profiling",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#profiling",
    "access": null,
    "description": "#####################      OTHER GLOBAL OPTIONS     ##############################",
    "lineNumber": 211,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 46,
    "kind": "method",
    "name": "getAvailableClassBreaksMethods",
    "memberof": "src/Gisplay/GisplayOptions.js~GisplayOptions",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/GisplayOptions.js~GisplayOptions#getAvailableClassBreaksMethods",
    "access": null,
    "description": "Returns the available class break methods.",
    "lineNumber": 219,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string[]} - All available class break methods under Gisplay API."
      },
      {
        "tagName": "@memberOf",
        "tagValue": "GisplayOptions"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": "All available class break methods under Gisplay API."
    }
  },
  {
    "__docId__": 47,
    "kind": "file",
    "name": "src/Gisplay/Maps/Aesthetic.js",
    "content": "import { Feature } from './Feature';\r\n\r\n/**\r\n * Class that represents an aesthetic element. There will be one Aesthetic class for each class on the Legend.\r\n * @export\r\n * @class Aesthetic\r\n */\r\nexport class Aesthetic {\r\n\r\n    /**\r\n     * Creates an instance of Aesthetic. \r\n     * There will be as many Aesthetic objects as the number of classes on the Legend. \r\n     * @example 1-> {\"id\":0,\"attr\":\"f3\",\"fcolor\":[255,255,255,0.8],\r\n     *         \"stroke\":[0,0,0,1],\"pointsize\":null,\"range\":[1,37]}\r\n     * @example 2-> {\"id\":1,\"attr\":\"f3\",\"fcolor\":[255,255,0,0.8],\r\n     *         \"stroke\":[0,0,0,1],\"pointsize\":null,\"range\":[37,78]}\r\n     * @param {number} id - The unique id of the Aesthetic object.\r\n     * @param {string} attr - The attribute being mapped on this Aesthetic.\r\n     * @param {number[]|Function} fcolor - The color to fill the Aesthetic element(RGBA).\r\n     * @param {number[]} stroke - Stroke color values(RGBA).\r\n     * @param {number|null} pointsize - Size of the Aesthetic point to be drawn (Used only in maps that require dots to be drawn).\r\n     * @param {number[]} range - The range for this particular Aesthetic element.\r\n     * \r\n     * @memberOf Aesthetic\r\n     */\r\n    constructor(id, attr, fcolor, stroke, pointsize, range) {\r\n        /**\r\n         * The unique id of the Aesthetic object. \r\n         * @type {number}\r\n         */\r\n        this.id = id;\r\n        /**\r\n         * The attribute being mapped on the Aesthetic.\r\n         * @type {string}\r\n         */\r\n        this._attr = attr;\r\n        /**\r\n         * The color to fill the Aesthetic element(RGBA) OR a function to create this color.\r\n         * @type {number[4]|Function}\r\n         */\r\n        this.fillColor = fcolor;\r\n        /**\r\n         * Stroke color values(RGBA).\r\n         * @type {number[4]}\r\n         */\r\n        this.strokeColor = stroke;\r\n        /**\r\n         * The size of the Aesthetic point to be drawn (Used only in maps that require dots to be drawn).\r\n         * @type {number|null}\r\n         */\r\n        this.pointSize = pointsize === null ? 1.0 : parseFloat(pointsize);\r\n        /**\r\n         * The range for this particular Aesthetic element.\r\n         * @type {number[2]}\r\n         */\r\n        this.range = range;\r\n        /**\r\n         * This Array will keep track of all Features associated with this Aesthetic object.\r\n         * @type {Array<Feature>}\r\n         */\r\n        this._features = new Array();\r\n        /**\r\n         * This Array is used for? \r\n         * @todo\r\n         * @type {Array<Feature>}\r\n         */\r\n        this._allFeatures = new Array();\r\n        /**\r\n         * This particular element will be active or not in the Legend.\r\n         * @type {boolean}\r\n         */\r\n        this.enabled = true;//Elemento da legenda ativo ou desativo\r\n        /**\r\n         * Outer is used for the last element of the Legend. Example [500, 1000]<\r\n         * @type {boolean}\r\n         */\r\n        this.outer = false;\r\n    }\r\n\r\n    /**\r\n     * Adds a new feature to this Aesthetic object.\r\n     * @param {number} id - The Feature id. Each feature will have a different id inside this Aesthetic object.\r\n     * @param {{fx: string, _gisplayid:number}} properties - Properties associated with the Feature.\r\n     * @param {{itemSize: number, numItems: number}} triangles - Number of triangles associated with the Feature.\r\n     * @param {{itemSize: number, numItems: number}} borders - Number of borders associated with the Feature.\r\n     * @param {{itemSize: number, numItems: number}} points - The points that belong to the Feature.\r\n     * \r\n     * @memberOf Aesthetic\r\n     */\r\n    addFeature(id, properties, triangles, borders, points) {\r\n        this._features.push(new Feature(id, properties, triangles, borders, points));\r\n    }\r\n\r\n    /**\r\n     * Gets this Aesthetic attribute.\r\n     * @returns {Aesthetic._attr} - The string representing the attr of this Aesthetic.\r\n     * \r\n     * @memberOf Aesthetic\r\n     */\r\n    getAttr() {\r\n        return this._attr;\r\n    }\r\n\r\n    /**\r\n     * Verifies the existence or not of the property Aesthethic._attr and if it fits inside this Aesthetic range.\r\n     * @param {string} value - The attribute ?.\r\n     * @returns {boolean} - True if there's no range or it is inside the range or ?, otherwise, false.\r\n     * \r\n     * @memberOf Aesthetic\r\n     */\r\n    checkProperty(value) {\r\n        if (this.range === null)\r\n            return true;\r\n        else {\r\n            if (typeof value === 'number')\r\n                return ((this.range[0] === null || value >= this.range[0]) &&\r\n                    (this.range[1] === null || (value < this.range[1] || (value <= this.range[1] && this.isOuter()))));\r\n            else\r\n                return (value === this.range[0]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add new grouped feature. Only used for Maps with points. \r\n     * @todo Finish document of this method.\r\n     * @param {number} id - The id of the Feature.\r\n     * @param {{buffer: WebGLBuffer, itemSize: number, numItems: number}} triangles - Triangles that belong to the Feature.\r\n     * @param {{buffer: WebGLBuffer, itemSize: number, numItems: number}} borders - Borders that belong to the Feature.\r\n     * @param {{buffer: WebGLBuffer, itemSize: number, numItems: number}} points - Points that belong to the Feature.\r\n     * @see Diogo's thesis page 57/58\r\n     */\r\n    addGroupedFeature(id, triangles, borders, points) {\r\n        this._allFeatures.push(new Feature(id, null, triangles, borders, points));\r\n    }\r\n\r\n    /**\r\n     * Inverts this Aesthetic element state in the Legend object.\r\n     * If it was enabled it will be disabled or vice-versa.\r\n     * @returns {boolean} Inverse of current enabled value.\r\n     */\r\n    enableDisable() {\r\n        this.enabled = !this.enabled;\r\n        return this.enabled;\r\n    }\r\n\r\n    /**\r\n     * Returns all Features that belong to this Aesthetic object.\r\n     * @returns {Array<Feature>} - All the Features of this Aeshtetic.\r\n     * @memberOf Aesthetic\r\n     */\r\n    getFeatures() {\r\n        return this._features;\r\n    }\r\n\r\n    /**\r\n     * Returns all Features as one?\r\n     * @returns {Array<Feature>} - All features grouped together?\r\n     * @memberOf Aesthetic\r\n     */\r\n    getAllFeatures() {\r\n        return this._allFeatures;\r\n    }\r\n\r\n    /**\r\n     * Returns the stroke color for this Aesthetic object.\r\n     * @returns {Aesthetic#strokeColor}\r\n     * @memberOf Aesthetic\r\n     */\r\n    getStrokeColor() {\r\n        return this.strokeColor;\r\n    }\r\n\r\n    /**\r\n     * Returns the fill color for this Aesthetic object.\r\n     * @returns {Aesthetic#fillColor}\r\n     * @memberOf Aesthetic\r\n     */\r\n    getFillColor() {\r\n        return this.fillColor;\r\n    }\r\n\r\n    /**\r\n     * Returns the size of this Aesthetic points.\r\n     * @returns {number} - The size of the point. \r\n     * @memberOf Aesthetic\r\n     */\r\n    getPointSize(){\r\n        return this.pointSize;\r\n    }\r\n\r\n    /**\r\n     * Returns if this Aesthetic is outer or not.\r\n     * @returns {boolean} - true if it is outer, false, otherwise.\r\n     * @memberOf Aesthetic\r\n     */\r\n    isOuter(){\r\n        return this.outer;\r\n    }\r\n\r\n    /**\r\n     * Verifies if this Aeshtetic element is enable on the Legend or not.\r\n     * @returns {boolean} - True if it's enabled, false, otherwise.\r\n     * @memberOf Aesthetic\r\n     */\r\n    isEnabled() {\r\n        return this.enabled;\r\n    }\r\n}",
    "static": true,
    "longname": "src/Gisplay/Maps/Aesthetic.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 48,
    "kind": "class",
    "name": "Aesthetic",
    "memberof": "src/Gisplay/Maps/Aesthetic.js",
    "static": true,
    "longname": "src/Gisplay/Maps/Aesthetic.js~Aesthetic",
    "access": null,
    "export": true,
    "importPath": "gisplay-es6-webpack/src/Gisplay/Maps/Aesthetic.js",
    "importStyle": "{Aesthetic}",
    "description": "Class that represents an aesthetic element. There will be one Aesthetic class for each class on the Legend.",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Aesthetic"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 49,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Gisplay/Maps/Aesthetic.js~Aesthetic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Aesthetic.js~Aesthetic#constructor",
    "access": null,
    "description": "Creates an instance of Aesthetic. \nThere will be as many Aesthetic objects as the number of classes on the Legend. ",
    "examples": [
      "1-> {\"id\":0,\"attr\":\"f3\",\"fcolor\":[255,255,255,0.8],\n        \"stroke\":[0,0,0,1],\"pointsize\":null,\"range\":[1,37]}",
      "2-> {\"id\":1,\"attr\":\"f3\",\"fcolor\":[255,255,0,0.8],\n        \"stroke\":[0,0,0,1],\"pointsize\":null,\"range\":[37,78]}"
    ],
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Aesthetic"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The unique id of the Aesthetic object."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "attr",
        "description": "The attribute being mapped on this Aesthetic."
      },
      {
        "nullable": null,
        "types": [
          "number[]",
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "fcolor",
        "description": "The color to fill the Aesthetic element(RGBA)."
      },
      {
        "nullable": null,
        "types": [
          "number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "stroke",
        "description": "Stroke color values(RGBA)."
      },
      {
        "nullable": null,
        "types": [
          "number",
          "null"
        ],
        "spread": false,
        "optional": false,
        "name": "pointsize",
        "description": "Size of the Aesthetic point to be drawn (Used only in maps that require dots to be drawn)."
      },
      {
        "nullable": null,
        "types": [
          "number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "range",
        "description": "The range for this particular Aesthetic element."
      }
    ]
  },
  {
    "__docId__": 50,
    "kind": "member",
    "name": "id",
    "memberof": "src/Gisplay/Maps/Aesthetic.js~Aesthetic",
    "static": false,
    "longname": "src/Gisplay/Maps/Aesthetic.js~Aesthetic#id",
    "access": null,
    "description": "The unique id of the Aesthetic object. ",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "_attr",
    "memberof": "src/Gisplay/Maps/Aesthetic.js~Aesthetic",
    "static": false,
    "longname": "src/Gisplay/Maps/Aesthetic.js~Aesthetic#_attr",
    "access": null,
    "description": "The attribute being mapped on the Aesthetic.",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "fillColor",
    "memberof": "src/Gisplay/Maps/Aesthetic.js~Aesthetic",
    "static": false,
    "longname": "src/Gisplay/Maps/Aesthetic.js~Aesthetic#fillColor",
    "access": null,
    "description": "The color to fill the Aesthetic element(RGBA) OR a function to create this color.",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "number[4]",
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "strokeColor",
    "memberof": "src/Gisplay/Maps/Aesthetic.js~Aesthetic",
    "static": false,
    "longname": "src/Gisplay/Maps/Aesthetic.js~Aesthetic#strokeColor",
    "access": null,
    "description": "Stroke color values(RGBA).",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "number[4]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "pointSize",
    "memberof": "src/Gisplay/Maps/Aesthetic.js~Aesthetic",
    "static": false,
    "longname": "src/Gisplay/Maps/Aesthetic.js~Aesthetic#pointSize",
    "access": null,
    "description": "The size of the Aesthetic point to be drawn (Used only in maps that require dots to be drawn).",
    "lineNumber": 51,
    "type": {
      "nullable": null,
      "types": [
        "number",
        "null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 55,
    "kind": "member",
    "name": "range",
    "memberof": "src/Gisplay/Maps/Aesthetic.js~Aesthetic",
    "static": false,
    "longname": "src/Gisplay/Maps/Aesthetic.js~Aesthetic#range",
    "access": null,
    "description": "The range for this particular Aesthetic element.",
    "lineNumber": 56,
    "type": {
      "nullable": null,
      "types": [
        "number[2]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "_features",
    "memberof": "src/Gisplay/Maps/Aesthetic.js~Aesthetic",
    "static": false,
    "longname": "src/Gisplay/Maps/Aesthetic.js~Aesthetic#_features",
    "access": null,
    "description": "This Array will keep track of all Features associated with this Aesthetic object.",
    "lineNumber": 61,
    "type": {
      "nullable": null,
      "types": [
        "Array<Feature>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 57,
    "kind": "member",
    "name": "_allFeatures",
    "memberof": "src/Gisplay/Maps/Aesthetic.js~Aesthetic",
    "static": false,
    "longname": "src/Gisplay/Maps/Aesthetic.js~Aesthetic#_allFeatures",
    "access": null,
    "description": "This Array is used for? ",
    "lineNumber": 67,
    "todo": [
      ""
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array<Feature>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 58,
    "kind": "member",
    "name": "enabled",
    "memberof": "src/Gisplay/Maps/Aesthetic.js~Aesthetic",
    "static": false,
    "longname": "src/Gisplay/Maps/Aesthetic.js~Aesthetic#enabled",
    "access": null,
    "description": "This particular element will be active or not in the Legend.",
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 59,
    "kind": "member",
    "name": "outer",
    "memberof": "src/Gisplay/Maps/Aesthetic.js~Aesthetic",
    "static": false,
    "longname": "src/Gisplay/Maps/Aesthetic.js~Aesthetic#outer",
    "access": null,
    "description": "Outer is used for the last element of the Legend. Example [500, 1000]<",
    "lineNumber": 77,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 60,
    "kind": "method",
    "name": "addFeature",
    "memberof": "src/Gisplay/Maps/Aesthetic.js~Aesthetic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Aesthetic.js~Aesthetic#addFeature",
    "access": null,
    "description": "Adds a new feature to this Aesthetic object.",
    "lineNumber": 90,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Aesthetic"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The Feature id. Each feature will have a different id inside this Aesthetic object."
      },
      {
        "nullable": null,
        "types": [
          "{fx: string, _gisplayid:number}"
        ],
        "spread": false,
        "optional": false,
        "name": "properties",
        "description": "Properties associated with the Feature."
      },
      {
        "nullable": null,
        "types": [
          "{itemSize: number, numItems: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "triangles",
        "description": "Number of triangles associated with the Feature."
      },
      {
        "nullable": null,
        "types": [
          "{itemSize: number, numItems: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "borders",
        "description": "Number of borders associated with the Feature."
      },
      {
        "nullable": null,
        "types": [
          "{itemSize: number, numItems: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "points",
        "description": "The points that belong to the Feature."
      }
    ]
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "getAttr",
    "memberof": "src/Gisplay/Maps/Aesthetic.js~Aesthetic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Aesthetic.js~Aesthetic#getAttr",
    "access": null,
    "description": "Gets this Aesthetic attribute.",
    "lineNumber": 100,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Aesthetic._attr} - The string representing the attr of this Aesthetic."
      },
      {
        "tagName": "@memberOf",
        "tagValue": "Aesthetic"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Aesthetic._attr"
      ],
      "spread": false,
      "description": "The string representing the attr of this Aesthetic."
    }
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "checkProperty",
    "memberof": "src/Gisplay/Maps/Aesthetic.js~Aesthetic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Aesthetic.js~Aesthetic#checkProperty",
    "access": null,
    "description": "Verifies the existence or not of the property Aesthethic._attr and if it fits inside this Aesthetic range.",
    "lineNumber": 111,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - True if there's no range or it is inside the range or ?, otherwise, false."
      },
      {
        "tagName": "@memberOf",
        "tagValue": "Aesthetic"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The attribute ?."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True if there's no range or it is inside the range or ?, otherwise, false."
    }
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "addGroupedFeature",
    "memberof": "src/Gisplay/Maps/Aesthetic.js~Aesthetic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Aesthetic.js~Aesthetic#addGroupedFeature",
    "access": null,
    "description": "Add new grouped feature. Only used for Maps with points. ",
    "see": [
      "Diogo's thesis page 57/58"
    ],
    "lineNumber": 132,
    "todo": [
      "Finish document of this method."
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The id of the Feature."
      },
      {
        "nullable": null,
        "types": [
          "{buffer: WebGLBuffer, itemSize: number, numItems: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "triangles",
        "description": "Triangles that belong to the Feature."
      },
      {
        "nullable": null,
        "types": [
          "{buffer: WebGLBuffer, itemSize: number, numItems: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "borders",
        "description": "Borders that belong to the Feature."
      },
      {
        "nullable": null,
        "types": [
          "{buffer: WebGLBuffer, itemSize: number, numItems: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "points",
        "description": "Points that belong to the Feature."
      }
    ]
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "enableDisable",
    "memberof": "src/Gisplay/Maps/Aesthetic.js~Aesthetic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Aesthetic.js~Aesthetic#enableDisable",
    "access": null,
    "description": "Inverts this Aesthetic element state in the Legend object.\nIf it was enabled it will be disabled or vice-versa.",
    "lineNumber": 141,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} Inverse of current enabled value."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Inverse of current enabled value."
    }
  },
  {
    "__docId__": 65,
    "kind": "member",
    "name": "enabled",
    "memberof": "src/Gisplay/Maps/Aesthetic.js~Aesthetic",
    "static": false,
    "longname": "src/Gisplay/Maps/Aesthetic.js~Aesthetic#enabled",
    "access": null,
    "description": null,
    "lineNumber": 142,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "getFeatures",
    "memberof": "src/Gisplay/Maps/Aesthetic.js~Aesthetic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Aesthetic.js~Aesthetic#getFeatures",
    "access": null,
    "description": "Returns all Features that belong to this Aesthetic object.",
    "lineNumber": 151,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<Feature>} - All the Features of this Aeshtetic."
      },
      {
        "tagName": "@memberOf",
        "tagValue": "Aesthetic"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Array<Feature>"
      ],
      "spread": false,
      "description": "All the Features of this Aeshtetic."
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "getAllFeatures",
    "memberof": "src/Gisplay/Maps/Aesthetic.js~Aesthetic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Aesthetic.js~Aesthetic#getAllFeatures",
    "access": null,
    "description": "Returns all Features as one?",
    "lineNumber": 160,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<Feature>} - All features grouped together?"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "Aesthetic"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Array<Feature>"
      ],
      "spread": false,
      "description": "All features grouped together?"
    }
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "getStrokeColor",
    "memberof": "src/Gisplay/Maps/Aesthetic.js~Aesthetic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Aesthetic.js~Aesthetic#getStrokeColor",
    "access": null,
    "description": "Returns the stroke color for this Aesthetic object.",
    "lineNumber": 169,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Aesthetic#strokeColor}"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "Aesthetic"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Aesthetic#strokeColor"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "getFillColor",
    "memberof": "src/Gisplay/Maps/Aesthetic.js~Aesthetic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Aesthetic.js~Aesthetic#getFillColor",
    "access": null,
    "description": "Returns the fill color for this Aesthetic object.",
    "lineNumber": 178,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Aesthetic#fillColor}"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "Aesthetic"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Aesthetic#fillColor"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "getPointSize",
    "memberof": "src/Gisplay/Maps/Aesthetic.js~Aesthetic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Aesthetic.js~Aesthetic#getPointSize",
    "access": null,
    "description": "Returns the size of this Aesthetic points.",
    "lineNumber": 187,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} - The size of the point. "
      },
      {
        "tagName": "@memberOf",
        "tagValue": "Aesthetic"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The size of the point."
    }
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "isOuter",
    "memberof": "src/Gisplay/Maps/Aesthetic.js~Aesthetic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Aesthetic.js~Aesthetic#isOuter",
    "access": null,
    "description": "Returns if this Aesthetic is outer or not.",
    "lineNumber": 196,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - true if it is outer, false, otherwise."
      },
      {
        "tagName": "@memberOf",
        "tagValue": "Aesthetic"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true if it is outer, false, otherwise."
    }
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "isEnabled",
    "memberof": "src/Gisplay/Maps/Aesthetic.js~Aesthetic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Aesthetic.js~Aesthetic#isEnabled",
    "access": null,
    "description": "Verifies if this Aeshtetic element is enable on the Legend or not.",
    "lineNumber": 205,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - True if it's enabled, false, otherwise."
      },
      {
        "tagName": "@memberOf",
        "tagValue": "Aesthetic"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True if it's enabled, false, otherwise."
    }
  },
  {
    "__docId__": 73,
    "kind": "file",
    "name": "src/Gisplay/Maps/BGMapWrapper.js",
    "content": "/**\r\n * This class represents a background map wrapper. Used to be a \"middle-man\" between the \r\n * background map provider and the Gisplay API.\r\n * @see https://www.mapbox.com/mapbox-gl-js/api/ \r\n * @see https://developers.google.com/maps/documentation/javascript/3.exp/reference\r\n * @see https://developer.here.com/develop/javascript-api \r\n * @see Diogo's thesis Page 70-72 + 59\r\n */\r\nexport class BGMapWrapper {\r\n\r\n    /**\r\n     * Creates an instance of BGMapWrapper.\r\n     * @param {Object} bgmap - The background map object that came from the provider (e.g., Mapbox, Google Maps). \r\n     */\r\n    constructor(bgmap) {\r\n        /**\r\n         * This is the background map object that comes from the background map provider(e.g., MapBox). \r\n         * @type {Object}\r\n         */\r\n        this.bgMapObject = bgmap;\r\n    }\r\n\r\n    /**\r\n     * Returns the map's containing HTML element.\r\n     * @return {HTMLElement} - The map's HTML element container.\r\n     */\r\n    getContainer() {\r\n        return this.bgMapObject.getContainer();\r\n    }\r\n\r\n    /**\r\n     * Returns the width of the canvas elment.\r\n     * @returns {number} the width of the canvas elment.\r\n     * @memberOf BGMapWrapper\r\n     */\r\n    getWidth() {\r\n        return this.getContainer().offsetWidth;\r\n    }\r\n\r\n    /**\r\n     * Returns the height of the canvas element.\r\n     * @returns {number} the height of the canvas elment.\r\n     * @memberOf BGMapWrapper\r\n     */\r\n    getHeight() {\r\n        return this.getContainer().offsetHeight;\r\n    }\r\n\r\n    /**\r\n     * Given one id it creates a canvas object.\r\n     * @todo Understand case mapbox comment bellow.\r\n     * @param {number} id - The id of the canvas to be created.\r\n     * @return {HTMLElement} Canvas object where everything will be drawn.\r\n     */\r\n    createCanvas(id) {\r\n        const mapCanvas = document.createElement('canvas');\r\n        mapCanvas.id = `mapCanvas${id}`;\r\n        mapCanvas.style.position = 'absolute';\r\n\r\n        const mapDiv = this.bgMapObject.getContainer();\r\n        mapCanvas.height = mapDiv.offsetHeight;\r\n        mapCanvas.width = mapDiv.offsetWidth;\r\n        //case mapbox\r\n        mapDiv.insertBefore(mapCanvas, mapDiv.firstChild.nextSibling);\r\n\r\n        const canvas = document.getElementById(`mapCanvas${id}`);\r\n        return canvas;\r\n    }\r\n\r\n    /**\r\n     * Returns the map's current zoom level.\r\n     * @return {number} - The map's current zoom level.\r\n     */\r\n    getZoom() {\r\n        return this.bgMapObject.getZoom();\r\n    }\r\n\r\n    /**\r\n     * Returns the longitude of the bounding box northwest corner.\r\n     * @return {number} - Longitude of northwest corner, measured in degrees.\r\n     */\r\n    getCenterLng() {\r\n        return ((((180 + this.bgMapObject.getCenter().lng) % 360) + 360) % 360) - 180;\r\n    }\r\n\r\n    /**\r\n     * Returns the latitude of the bounding box northwest corner.\r\n     * @return {number} - Latitude of northwest corner, measured in degrees.\r\n     */\r\n    getCenterLat() {\r\n        return this.bgMapObject.getCenter().lat;\r\n    }\r\n\r\n    /**\r\n     * Returns all the corner bounds(NW, SW, NE, SE) of the background map.\r\n     * @returns {{NW: {lng: number, lat: number}, SW: {lng: number, lat: number}, NE: {lng: number, lat: number}, SE: {lng: number, lat: number}}} description\r\n     * @deprecated Not used atm.\r\n     * @memberOf BGMapWrapper\r\n     */\r\n    getMapBounds() {\r\n        let map = this.bgMapObject;\r\n        return {\r\n            NW: {\r\n                lng: map.getBounds().getNorthWest().lng,\r\n                lat: map.getBounds().getNorthWest().lat\r\n            },\r\n            SW: {\r\n                lng: map.getBounds().getSouthWest().lng,\r\n                lat: map.getBounds().getSouthWest().lat\r\n            },\r\n            NE: {\r\n                lng: map.getBounds().getNorthEast().lng,\r\n                lat: map.getBounds().getNorthEast().lat\r\n            },\r\n            SE: {\r\n                lng: map.getBounds().getSouthEast().lng,\r\n                lat: map.getBounds().getSouthEast().lat\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Verifies if the background map being shown is in two different meridians.\r\n     * @param {{lng: number, lat: number}} NW - North west corner coordinates\r\n     * @param {{lng: number, lat: number}} NE - North East corner coordinates\r\n     * @deprecated Not used atm.\r\n     * @memberOf BGMapWrapper\r\n     */\r\n    isInMultipleMeridians(NW, NE) {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Adds a listener to a specified event type.\r\n     * @param {string} eventstr - The event type to add a listen for.\r\n     * @param {Function} eventfunction - The function to be called when the event is fired. The listener function is called with the data object passed to  fire , extended with  target and  type properties.\r\n     * @return {void} \r\n     */\r\n    addEventListener(eventstr, eventfunction) {\r\n        this.bgMapObject.on(eventstr, eventfunction);\r\n    }\r\n\r\n    /**\r\n     * Shows loader at the beginning when the API is loading the data.\r\n     * @return {void} \r\n     * @see Page 72 Diogo's thesis.\r\n     */\r\n    showLoader() {\r\n        if (this.loaderDiv === undefined) //@TODO: REMOVE If (See M1 + M8) \r\n            this.createLoader();\r\n        else {\r\n            if (this.loaderDiv.style.display === 'none')\r\n                this.loaderDiv.style.display = 'flex';\r\n            else\r\n                this.loaderDiv.style.display = 'none';\r\n\r\n            if (this.loaderDiv.className.includes('_gisplayhidden'))\r\n                this.loaderDiv.className = this.loaderDiv.className.replace(/(?:^|\\s)_gisplayhidden(?!\\S)/g, '_gisplayLoaderOuterDiv');\r\n            else\r\n                this.loaderDiv.className = this.loaderDiv.className.replace(/(?:^|\\s)_gisplayLoaderOuterDiv(?!\\S)/g, '_gisplayhidden');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Auxiliar method to be called when there is no loader  and we want to create one.\r\n     * @return {void} \r\n     */\r\n    createLoader() {\r\n        const outerDiv = document.createElement('div');\r\n        const innerDiv = document.createElement('div');\r\n        innerDiv.className = '_gisplayloader';\r\n\r\n        const mapDiv = this.getContainer();\r\n        outerDiv.className = '_gisplayLoaderOuterDiv';\r\n        outerDiv.style.height = mapDiv.offsetHeight;\r\n        outerDiv.style.width = mapDiv.offsetWidth;\r\n        outerDiv.appendChild(innerDiv);\r\n        /**\r\n         * The div that contains the loader.\r\n         * @type {HTMLDivElement}\r\n         */\r\n        this.loaderDiv = outerDiv;\r\n        mapDiv.parentElement.insertBefore(outerDiv, mapDiv);\r\n    }\r\n\r\n    /**\r\n     * Returns the background map object. This is the Background provider object (e.g., Mapbox, GMaps, HereMaps, Bing Maps).\r\n     * @returns {BGMapWrapper#bgMapObject} the background map object.\r\n     * @memberOf BGMapWrapper\r\n     */\r\n    getBackgroundMapProviderObject() {\r\n        return this.bgMapObject;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "src/Gisplay/Maps/BGMapWrapper.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 74,
    "kind": "class",
    "name": "BGMapWrapper",
    "memberof": "src/Gisplay/Maps/BGMapWrapper.js",
    "static": true,
    "longname": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper",
    "access": null,
    "export": true,
    "importPath": "gisplay-es6-webpack/src/Gisplay/Maps/BGMapWrapper.js",
    "importStyle": "{BGMapWrapper}",
    "description": "This class represents a background map wrapper. Used to be a \"middle-man\" between the \nbackground map provider and the Gisplay API.",
    "see": [
      "https://www.mapbox.com/mapbox-gl-js/api/ ",
      "https://developers.google.com/maps/documentation/javascript/3.exp/reference",
      "https://developer.here.com/develop/javascript-api ",
      "Diogo's thesis Page 70-72 + 59"
    ],
    "lineNumber": 9,
    "interface": false
  },
  {
    "__docId__": 75,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper#constructor",
    "access": null,
    "description": "Creates an instance of BGMapWrapper.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "bgmap",
        "description": "The background map object that came from the provider (e.g., Mapbox, Google Maps)."
      }
    ]
  },
  {
    "__docId__": 76,
    "kind": "member",
    "name": "bgMapObject",
    "memberof": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper",
    "static": false,
    "longname": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper#bgMapObject",
    "access": null,
    "description": "This is the background map object that comes from the background map provider(e.g., MapBox). ",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "getContainer",
    "memberof": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper#getContainer",
    "access": null,
    "description": "Returns the map's containing HTML element.",
    "lineNumber": 27,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": "The map's HTML element container."
    }
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "getWidth",
    "memberof": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper#getWidth",
    "access": null,
    "description": "Returns the width of the canvas elment.",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} the width of the canvas elment."
      },
      {
        "tagName": "@memberOf",
        "tagValue": "BGMapWrapper"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "the width of the canvas elment."
    }
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "getHeight",
    "memberof": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper#getHeight",
    "access": null,
    "description": "Returns the height of the canvas element.",
    "lineNumber": 45,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} the height of the canvas elment."
      },
      {
        "tagName": "@memberOf",
        "tagValue": "BGMapWrapper"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "the height of the canvas elment."
    }
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "createCanvas",
    "memberof": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper#createCanvas",
    "access": null,
    "description": "Given one id it creates a canvas object.",
    "lineNumber": 55,
    "todo": [
      "Understand case mapbox comment bellow."
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The id of the canvas to be created."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": "Canvas object where everything will be drawn."
    }
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "getZoom",
    "memberof": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper#getZoom",
    "access": null,
    "description": "Returns the map's current zoom level.",
    "lineNumber": 74,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The map's current zoom level."
    }
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "getCenterLng",
    "memberof": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper#getCenterLng",
    "access": null,
    "description": "Returns the longitude of the bounding box northwest corner.",
    "lineNumber": 82,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Longitude of northwest corner, measured in degrees."
    }
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "getCenterLat",
    "memberof": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper#getCenterLat",
    "access": null,
    "description": "Returns the latitude of the bounding box northwest corner.",
    "lineNumber": 90,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Latitude of northwest corner, measured in degrees."
    }
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "getMapBounds",
    "memberof": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper#getMapBounds",
    "access": null,
    "description": "Returns all the corner bounds(NW, SW, NE, SE) of the background map.",
    "lineNumber": 100,
    "deprecated": "Not used atm.",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{NW: {lng: number, lat: number}, SW: {lng: number, lat: number}, NE: {lng: number, lat: number}, SE: {lng: number, lat: number}}} description"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "BGMapWrapper"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "{NW: {lng: number, lat: number}, SW: {lng: number, lat: number}, NE: {lng: number, lat: number}, SE: {lng: number, lat: number}}"
      ],
      "spread": false,
      "description": "description"
    }
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "isInMultipleMeridians",
    "memberof": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper#isInMultipleMeridians",
    "access": null,
    "description": "Verifies if the background map being shown is in two different meridians.",
    "lineNumber": 129,
    "deprecated": "Not used atm.",
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "BGMapWrapper"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{lng: number, lat: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "NW",
        "description": "North west corner coordinates"
      },
      {
        "nullable": null,
        "types": [
          "{lng: number, lat: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "NE",
        "description": "North East corner coordinates"
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "addEventListener",
    "memberof": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper#addEventListener",
    "access": null,
    "description": "Adds a listener to a specified event type.",
    "lineNumber": 139,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "eventstr",
        "description": "The event type to add a listen for."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "eventfunction",
        "description": "The function to be called when the event is fired. The listener function is called with the data object passed to  fire , extended with  target and  type properties."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "showLoader",
    "memberof": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper#showLoader",
    "access": null,
    "description": "Shows loader at the beginning when the API is loading the data.",
    "see": [
      "Page 72 Diogo's thesis."
    ],
    "lineNumber": 148,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "createLoader",
    "memberof": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper#createLoader",
    "access": null,
    "description": "Auxiliar method to be called when there is no loader  and we want to create one.",
    "lineNumber": 168,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 89,
    "kind": "member",
    "name": "loaderDiv",
    "memberof": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper",
    "static": false,
    "longname": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper#loaderDiv",
    "access": null,
    "description": "The div that contains the loader.",
    "lineNumber": 182,
    "type": {
      "nullable": null,
      "types": [
        "HTMLDivElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "getBackgroundMapProviderObject",
    "memberof": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/BGMapWrapper.js~BGMapWrapper#getBackgroundMapProviderObject",
    "access": null,
    "description": "Returns the background map object. This is the Background provider object (e.g., Mapbox, GMaps, HereMaps, Bing Maps).",
    "lineNumber": 191,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{BGMapWrapper#bgMapObject} the background map object."
      },
      {
        "tagName": "@memberOf",
        "tagValue": "BGMapWrapper"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "BGMapWrapper#bgMapObject"
      ],
      "spread": false,
      "description": "the background map object."
    }
  },
  {
    "__docId__": 91,
    "kind": "file",
    "name": "src/Gisplay/Maps/Feature.js",
    "content": "//Intermediate API\r\n\r\n/**\r\n * This class represents a Feature. Each feature belongs to one Aesthetic element.\r\n * @exports Feature\r\n * @class Feature\r\n */\r\nexport class Feature {\r\n    /**\r\n     * Creates an instance of Feature.\r\n     * @example 1-> {\"id\":0,\"properties\":{\"f1\":\"Alabama\",\"f2\":\"Autauga\",\"f3\":150,\"_gisplayid\":0},\r\n                     \"triangles\":[{\"itemSize\":2,\"numItems\":417}],\"borders\":[{\"itemSize\":2,\"numItems\":141}],\"points\":[]}\r\n     * @param {number} id - This Feature id.\r\n     * @param {{fx: string, _gisplayid:number}} properties - Properties associated with this Feature.  \r\n     * @param {{itemSize: number, numItems: number}} triangles - Number of triangles associated with this Feature. \r\n     * @param {{itemSize: number, numItems: number}} borders - Number of borders associated with this Feature.\r\n     * @param {number[]} points - The points that belong to this Feature.\r\n     * \r\n     * @memberOf Feature\r\n     */\r\n    constructor(id, properties, triangles, borders, points) {\r\n        /**\r\n         * This Feature id.\r\n         * @type {number} \r\n         */\r\n        this._id = id;\r\n        /**\r\n         * Properties associated with this Feature.\r\n         * @type {{fx: string, _gisplayid:number}}  \r\n         */\r\n        this._properties = properties;\r\n        /**\r\n         * Number of triangles associated with this Feature. The Object that contains the itemSize and numItems is a WebGLBuffer.\r\n         * @type {{itemSize: number, numItems: number}}\r\n         */\r\n        this._triangles = triangles;\r\n        /**\r\n         * Number of borders associated with this Feature. The Object that contains the itemSize and numItems is a WebGLBuffer.\r\n         * @type {{itemSize: number, numItems: number}}\r\n         */\r\n        this._borders = borders;\r\n        /**\r\n         * The points that belong to this Feature.  The Object that contains the itemSize and numItems is a WebGLBuffer.\r\n         * @type {{itemSize: number, numItems: number}}\r\n         */\r\n        this._points = points;\r\n    }\r\n\r\n    /**\r\n     * Returns all triangles that belong to the Feature.\r\n     * @returns {Feature._triangles} - All triangles that belong to the Feature.\r\n     * @memberOf Feature\r\n     */\r\n    getTriangles(){\r\n        return this._triangles;\r\n    }\r\n\r\n     /**\r\n      * Returns all borders that belong to the Feature.\r\n      * @returns {Feature._borders} - All borders that belong to the Feature.\r\n      * @memberOf Feature\r\n      */\r\n    getBorders(){\r\n        return this._borders;\r\n    }\r\n\r\n     /**\r\n      * Returns all points that belong to the Feature.\r\n      * @returns {Feature._points} - All points that belong to the Feature.\r\n      * @memberOf Feature\r\n      */\r\n    getPoints(){\r\n        return this._points;\r\n    }\r\n\r\n    /**\r\n     * Returns all properties that belong to the Feature.\r\n     * @returns {Feature._properties}\r\n     * @memberOf Feature\r\n     */\r\n    getProperties(){\r\n        return this._properties;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "src/Gisplay/Maps/Feature.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 92,
    "kind": "class",
    "name": "Feature",
    "memberof": "src/Gisplay/Maps/Feature.js",
    "static": true,
    "longname": "src/Gisplay/Maps/Feature.js~Feature",
    "access": null,
    "export": true,
    "importPath": "gisplay-es6-webpack/src/Gisplay/Maps/Feature.js",
    "importStyle": "{Feature}",
    "description": "This class represents a Feature. Each feature belongs to one Aesthetic element.",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@exports",
        "tagValue": "Feature"
      },
      {
        "tagName": "@class",
        "tagValue": "Feature"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 93,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Gisplay/Maps/Feature.js~Feature",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Feature.js~Feature#constructor",
    "access": null,
    "description": "Creates an instance of Feature.",
    "examples": [
      "1-> {\"id\":0,\"properties\":{\"f1\":\"Alabama\",\"f2\":\"Autauga\",\"f3\":150,\"_gisplayid\":0},\n\"triangles\":[{\"itemSize\":2,\"numItems\":417}],\"borders\":[{\"itemSize\":2,\"numItems\":141}],\"points\":[]}"
    ],
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Feature"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "This Feature id."
      },
      {
        "nullable": null,
        "types": [
          "{fx: string, _gisplayid:number}"
        ],
        "spread": false,
        "optional": false,
        "name": "properties",
        "description": "Properties associated with this Feature."
      },
      {
        "nullable": null,
        "types": [
          "{itemSize: number, numItems: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "triangles",
        "description": "Number of triangles associated with this Feature."
      },
      {
        "nullable": null,
        "types": [
          "{itemSize: number, numItems: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "borders",
        "description": "Number of borders associated with this Feature."
      },
      {
        "nullable": null,
        "types": [
          "number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "points",
        "description": "The points that belong to this Feature."
      }
    ]
  },
  {
    "__docId__": 94,
    "kind": "member",
    "name": "_id",
    "memberof": "src/Gisplay/Maps/Feature.js~Feature",
    "static": false,
    "longname": "src/Gisplay/Maps/Feature.js~Feature#_id",
    "access": null,
    "description": "This Feature id.",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 95,
    "kind": "member",
    "name": "_properties",
    "memberof": "src/Gisplay/Maps/Feature.js~Feature",
    "static": false,
    "longname": "src/Gisplay/Maps/Feature.js~Feature#_properties",
    "access": null,
    "description": "Properties associated with this Feature.",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "{fx: string, _gisplayid:number}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 96,
    "kind": "member",
    "name": "_triangles",
    "memberof": "src/Gisplay/Maps/Feature.js~Feature",
    "static": false,
    "longname": "src/Gisplay/Maps/Feature.js~Feature#_triangles",
    "access": null,
    "description": "Number of triangles associated with this Feature. The Object that contains the itemSize and numItems is a WebGLBuffer.",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "{itemSize: number, numItems: number}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 97,
    "kind": "member",
    "name": "_borders",
    "memberof": "src/Gisplay/Maps/Feature.js~Feature",
    "static": false,
    "longname": "src/Gisplay/Maps/Feature.js~Feature#_borders",
    "access": null,
    "description": "Number of borders associated with this Feature. The Object that contains the itemSize and numItems is a WebGLBuffer.",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "{itemSize: number, numItems: number}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 98,
    "kind": "member",
    "name": "_points",
    "memberof": "src/Gisplay/Maps/Feature.js~Feature",
    "static": false,
    "longname": "src/Gisplay/Maps/Feature.js~Feature#_points",
    "access": null,
    "description": "The points that belong to this Feature.  The Object that contains the itemSize and numItems is a WebGLBuffer.",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "{itemSize: number, numItems: number}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "getTriangles",
    "memberof": "src/Gisplay/Maps/Feature.js~Feature",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Feature.js~Feature#getTriangles",
    "access": null,
    "description": "Returns all triangles that belong to the Feature.",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Feature._triangles} - All triangles that belong to the Feature."
      },
      {
        "tagName": "@memberOf",
        "tagValue": "Feature"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Feature._triangles"
      ],
      "spread": false,
      "description": "All triangles that belong to the Feature."
    }
  },
  {
    "__docId__": 100,
    "kind": "method",
    "name": "getBorders",
    "memberof": "src/Gisplay/Maps/Feature.js~Feature",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Feature.js~Feature#getBorders",
    "access": null,
    "description": "Returns all borders that belong to the Feature.",
    "lineNumber": 63,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Feature._borders} - All borders that belong to the Feature."
      },
      {
        "tagName": "@memberOf",
        "tagValue": "Feature"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Feature._borders"
      ],
      "spread": false,
      "description": "All borders that belong to the Feature."
    }
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "getPoints",
    "memberof": "src/Gisplay/Maps/Feature.js~Feature",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Feature.js~Feature#getPoints",
    "access": null,
    "description": "Returns all points that belong to the Feature.",
    "lineNumber": 72,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Feature._points} - All points that belong to the Feature."
      },
      {
        "tagName": "@memberOf",
        "tagValue": "Feature"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Feature._points"
      ],
      "spread": false,
      "description": "All points that belong to the Feature."
    }
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "getProperties",
    "memberof": "src/Gisplay/Maps/Feature.js~Feature",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Feature.js~Feature#getProperties",
    "access": null,
    "description": "Returns all properties that belong to the Feature.",
    "lineNumber": 81,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Feature._properties}"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "Feature"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Feature._properties"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 103,
    "kind": "file",
    "name": "src/Gisplay/Maps/Legend.js",
    "content": "/**\r\n * This class represents the Map Legend. 15/03\r\n * @see Diogo's thesis page 66/67 + 58/59 + 69(Figures)\r\n */\r\nexport class Legend {\r\n    /**\r\n     * Creates an instance of Legend class.\r\n     * @param {number} id -  The id of the legend.\r\n     * @param {string} title - The title for the legend.\r\n     * \r\n     * @memberOf Legend\r\n     */\r\n    constructor(id, title) {\r\n        /**\r\n         * Title of the Gisplay map Legend.\r\n         * @type {string}\r\n         */\r\n        this.title = title;\r\n        /**\r\n         * The div that contains the Legend.\r\n         * @type {HTMLDivElement}\r\n         */\r\n        this.legendDiv = null;\r\n        /**\r\n         * The table element where the legend elements will be apppended.\r\n         * @type {HTMLTableElement}\r\n         */\r\n        this.table = null;\r\n        /**\r\n         * Class name for the Legend? Not used?\r\n         * @type {string}\r\n         */\r\n        this.className = null;\r\n        /**\r\n         * The last div to insert in the legend. Only for PSymbol Maps.\r\n         * @type {HTMLDivElement}\r\n         */\r\n        this.lastdiv = undefined;\r\n        /**\r\n         * If it is the first insertion or not. Only for PSymbol Maps.\r\n         * @type {boolean}\r\n         */\r\n        this.firstInsertion = false;\r\n        /**\r\n         * Constant to use when it's a Polygon.\r\n         * @constant {number} POLYGON\r\n         */\r\n        this.POLYGON = 1;\r\n         /**\r\n         * Constant to use when it's a Point.\r\n         * @constant {number} POLYGON\r\n         */\r\n        this.POINT = 2;\r\n\r\n        this.init(id, null);\r\n    }\r\n\r\n    /**\r\n     * Initialise Legend. Creates a table element and appends title, color element and value element.\r\n     * @param {number} id - The id of this Legend.\r\n     * @param {string} classname - The class name to be usde by the Legend.\r\n     * @memberOf Legend\r\n     */\r\n    init(id, classname) {\r\n        //const mapCanvas = document.getElementById(`mapCanvas${id}`); //@TODO: Remove\r\n        this.legendDiv = document.createElement('div');\r\n        if (classname != undefined && classname != null)\r\n            this.legendDiv.className = classname;\r\n        else\r\n            this.legendDiv.className = '_gisplaylegendBR';\r\n\r\n        this.legendDiv.id = `legendDiv${id}`;\r\n\r\n        this.table = document.createElement('table');\r\n        this.table.style.zIndex = \"2000\";\r\n        const thvalue = document.createElement('th');\r\n        const thcolor = document.createElement('th');\r\n        thcolor.style.align = \"center\";\r\n\r\n        this.table.appendChild(thcolor);\r\n        this.table.appendChild(thvalue);\r\n\r\n        const titlerow = document.createElement('tr');\r\n        const titletd = document.createElement('td');\r\n        titletd.colSpan = 2;\r\n        titletd.style.textAlign = 'center';\r\n        titletd.style.width = 100;\r\n        const titletext = document.createTextNode(this.title);\r\n        titletd.appendChild(titletext);\r\n        titlerow.appendChild(titletd);\r\n        this.table.appendChild(titlerow);\r\n    }\r\n\r\n    /**\r\n     * Inserts one row for the Aesthetic object.\r\n     * Used in Dot Maps.\r\n     * @param {Aesthetic} currentaes - The Aesthetic object \r\n     * @param {Map} mapobj - The Map object where the point row will be added. \r\n     * @see Diogo's thesis Page 69 5.1c\r\n     * @memberOf Legend\r\n     */\r\n    insertPointRow(currentaes, mapobj) {\r\n        this.insertRow(currentaes, mapobj, this.POINT);\r\n    }\r\n\r\n    /**\r\n     * Inserts one polygon row into the Legend. Used for area based Maps (Choropleth and Chorocromatic).\r\n     * @param {Aesthetic} currentaes  - The Aesthetic object \r\n     * @param {Map} mapobj - The map where to insert a polygon row.\r\n     * @see Diogo's thesis Page 69 5.1b\r\n     * @memberOf Legend\r\n     */\r\n    insertPolygonRow(currentaes, mapobj) {\r\n        this.insertRow(currentaes, mapobj, this.POLYGON);\r\n    }\r\n\r\n    /**\r\n     * Adds one row to the Legend and attaches an on click event to said row.\r\n     * @param {Aesthetic} currentaes  - The Aesthetic object.\r\n     * @param {Map} mapobj - The map where to insert a polygon row.\r\n     * @param {number} type - The type of row to insert. 1=Polygon, 2=Point. @TODO: Should be constant\r\n     * @memberOf Legend\r\n     */\r\n    insertRow(currentaes, mapobj, type) {\r\n        const row = document.createElement('tr');\r\n        const value = document.createElement('td');\r\n        const color = document.createElement('td');\r\n        let text;\r\n        if (typeof currentaes.range[0] === 'number') {\r\n            const mininput = currentaes.range[0] != null ? currentaes.range[0] : mapobj.min;\r\n            const maxinput = currentaes.range[1] != null ? currentaes.range[1] : mapobj.max;\r\n            if (!currentaes.isOuter())\r\n                text = document.createTextNode(`[${mininput}, ${maxinput}[`);\r\n            else\r\n                text = document.createTextNode(`[${mininput}, ${maxinput}]`);\r\n        }\r\n        else\r\n            text = document.createTextNode(currentaes.range[0]);\r\n\r\n        value.appendChild(text);\r\n        const colorDiv = document.createElement('div');\r\n        colorDiv.style.position = 'relative';\r\n\r\n        const [r, g, b, a] = currentaes.getFillColor();\r\n        const rgba = `rgba(${r},${g},${b},${a})`;\r\n        colorDiv.style['backgroundColor'] = rgba;\r\n        if (type === this.POLYGON) {//polygon\r\n            colorDiv.style.height = 25;\r\n            colorDiv.style.width = 80;\r\n            if (currentaes.getStrokeColor() != null) {//&& currentaes != undefined\r\n                const [r, g, b, a] = currentaes.getStrokeColor();\r\n                colorDiv.style['borderColor'] = `rgba(${r},${g},${b},${a})`;\r\n            }\r\n            colorDiv.className = '_gisplayrectangle';\r\n        }\r\n        else if (type === this.POINT) {//point\r\n            let size;\r\n            if (currentaes.getPointSize() != null)\r\n                size = Math.max(currentaes.getPointSize(), 5);\r\n            else\r\n                size = 25;\r\n            colorDiv.style.height = size;\r\n            colorDiv.style.width = size;\r\n            colorDiv.className = '_gisplaycircle';\r\n        }\r\n\r\n        color.appendChild(colorDiv);\r\n        row.appendChild(color);\r\n        row.appendChild(value);\r\n\r\n        row.onclick = function () {\r\n            if (mapobj.gisplayOptions.legendToggle) {\r\n                const toFade = !currentaes.enableDisable();\r\n                if (toFade)\r\n                    this.className += \" _gisplayfade\";\r\n                else\r\n                    this.className = this.className.replace(/(?:^|\\s)_gisplayfade(?!\\S)/g, '');\r\n            }\r\n            if (mapobj.gisplayOptions.legendOnClickFunction != null && mapobj.gisplayOptions.legendOnClickFunction != undefined)\r\n                mapobj.gisplayOptions.legendOnClickFunction(currentaes);\r\n            mapobj.draw();\r\n        };\r\n        this.table.appendChild(row);\r\n    }\r\n\r\n    /**\r\n     * Inserts in the Legend one gradient according to the Aesthetic object.\r\n     * Use in Change Maps. \r\n     * @param {Map} mapobj - The map where to insert the gradient row.\r\n     * @param {number} left - Left value of the Legend (minimum change).\r\n     * @param {number} middle - Value at the center of the change(aka break point).\r\n     * @param {number} right - Right value of the legend (maximum value).\r\n     * @see Diogo's thesis page 69 Figure 5.1d\r\n     * @memberOf Legend\r\n     */\r\n    insertGradient(mapobj, left, middle, right) {\r\n        const row = document.createElement('tr');\r\n        const value = document.createElement('td');\r\n        const valueDiv = document.createElement('div');\r\n        value.colSpan = 2;\r\n        value.style.textAlign = 'center';\r\n        let numberofAesthetics = 5;\r\n        if (mapobj.aesthetics.length > 5)\r\n            numberofAesthetics = mapobj.aesthetics.length;\r\n\r\n        let strcolor = '';\r\n        for (let i = 0; i < numberofAesthetics; i++) {\r\n            let [r, g, b] = mapobj.fcolor(i / numberofAesthetics).rgb();\r\n            let [roundR, roundG, roundB] = [Math.round(r), Math.round(g), Math.round(b)];\r\n            strcolor += `,rgba(${roundR},${roundG},${roundB},${mapobj.gisplayOptions.alpha})`;\r\n        }\r\n        valueDiv.style.background = `-webkit-linear-gradient(left${strcolor})`;\r\n\r\n        valueDiv.style.height = 25;\r\n        valueDiv.style.width = 130;\r\n\r\n        const row2 = document.createElement('tr');\r\n        const value2 = document.createElement('td');\r\n        const divleft = document.createElement('div');\r\n\r\n        value2.colSpan = 2;\r\n        divleft.style.textAlign = 'left';\r\n        divleft.style.width = '33%';\r\n        divleft.style.display = \"inline-block\";\r\n        const lefttext = document.createTextNode(left);\r\n        const divmid = document.createElement('div');\r\n        divmid.style.textAlign = 'center';\r\n        divmid.style.width = '33%';\r\n        divmid.style.display = \"inline-block\";\r\n        const text = document.createTextNode(middle);\r\n        const divright = document.createElement('div');\r\n        divright.style.textAlign = 'right';\r\n        divright.style.width = '33%';\r\n        divright.style.display = \"inline-block\";\r\n        const righttext = document.createTextNode(right);\r\n\r\n        divleft.appendChild(lefttext);\r\n        divmid.appendChild(text);\r\n        divright.appendChild(righttext);\r\n        value2.appendChild(divleft);\r\n        value2.appendChild(divmid);\r\n        value2.appendChild(divright);\r\n        value.appendChild(valueDiv);\r\n        row2.appendChild(value2);\r\n        row.appendChild(value);\r\n        this.table.appendChild(row);\r\n        this.table.appendChild(row2);\r\n    }\r\n\r\n    /**\r\n     * Inserts one Proportional symbols legend element.\r\n     * Used by PSymbols Maps.\r\n     * @param {Aesthetic} currentaes  - The Aesthetic object.\r\n     * @param {Map} mapobj - The map where to insert the proportion symbols element.\r\n     * @param {number} numLegendItems - Number of items to be created.\r\n     * @see Diogo's thesis Page 69 5.1a\r\n     * @memberOf Legend\r\n     */\r\n    insertProportionalSymbols(currentaes, mapobj, numLegendItems) {\r\n        if (this.lastdiv === undefined) {//First insertion\r\n            var row = document.createElement('tr');\r\n            var value = document.createElement('td');\r\n            value.colSpan = 2;\r\n            value.style.textAlign = 'center';\r\n            this.firstInsertion = true;\r\n        }\r\n        else\r\n            this.firstInsertion = false;\r\n\r\n        let strokecolor;\r\n        let [sr, sg, sb, sa] = currentaes.getStrokeColor();//console.log(\"PropSymbols Insert >>>\", sr, sg, sb, sa);\r\n        let [r, g, b, a] = currentaes.getFillColor(); //console.log(\"PropSymbols Insert >>>\", r, g, b, a);\r\n        const rgba = `rgba(${r},${g},${b},${a})`;// const rgbc = `rgba(${currentaes.fillColor[0]},${currentaes.fillColor[1]},${currentaes.fillColor[2]},${1})`;\r\n\r\n        if (currentaes.getStrokeColor() != null && currentaes != undefined) //TODO: Remove && curr..\r\n            strokecolor = `rgba(${sr},${sg},${sb},${sa})`;\r\n        else\r\n            strokecolor = `rgba(${0},${0},${0},${1})`;\r\n\r\n        for (let i = numLegendItems - 1; i >= 0; i--) {\r\n            const current = document.createElement('div');\r\n            let propvalue;\r\n            if (!this.firstInsertion && i === (numLegendItems - 1) || numLegendItems === 1)\r\n                propvalue = currentaes.range[1];\r\n            else\r\n                propvalue = mapobj.min + i / (numLegendItems - 1) * (mapobj.max - mapobj.min);\r\n\r\n            const text = document.createTextNode(Math.round(propvalue)); //TODO: this.round(propValue) ?\r\n            current.appendChild(text);\r\n            const colorDiv = document.createElement('div');\r\n            colorDiv.style.position = 'relative';\r\n            colorDiv.style.backgroundColor = rgba;\r\n            colorDiv.className = '_gisplayproportionalcircle';\r\n            colorDiv.style.borderColor = strokecolor;\r\n            const temppointsize = ((mapobj.gisplayOptions.maxPointSize - mapobj.gisplayOptions.minPointSize) / (mapobj.max - mapobj.min)) * (propvalue - mapobj.min);\r\n            const size = Math.max(temppointsize, 7.5);\r\n            colorDiv.style.height = size;\r\n            colorDiv.style.width = size;\r\n            colorDiv.style.inherit = false;\r\n\r\n            colorDiv.onclick = function (e) {\r\n                if (mapobj.gisplayOptions.legendToggle) {\r\n                    const toFade = !currentaes.enableDisable();\r\n                    if (toFade)\r\n                        this.className += \" _gisplayfade\";\r\n                    else\r\n                        this.className = this.className.replace(/(?:^|\\s)_gisplayfade(?!\\S)/g, '');\r\n                }\r\n                if (mapobj.gisplayOptions.legendOnClickFunction != null && mapobj.gisplayOptions.legendOnClickFunction != undefined)\r\n                    mapobj.gisplayOptions.legendOnClickFunction(currentaes);\r\n                mapobj.draw();\r\n\r\n                /*if (!e)\r\n                    var e = window.event; //TODO: Remove??*/\r\n                e.cancelBubble = true;\r\n                if (e.stopPropagation)\r\n                    e.stopPropagation();\r\n            };\r\n\r\n            current.appendChild(colorDiv);\r\n            if (this.lastdiv != undefined) {\r\n                this.lastdiv.appendChild(current);\r\n                this.lastdiv = colorDiv;\r\n            }\r\n            else {//1st insertion\r\n                value.appendChild(current);\r\n                this.lastdiv = colorDiv;\r\n            }\r\n        }\r\n\r\n        if (this.firstInsertion) {//1st insertion\r\n            row.appendChild(value);\r\n            this.table.appendChild(row);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Appends the legend div element to the map container. Used by all Maps.\r\n     * @param {BGMapWrapper} bgMap - The background map where the legend will be appended to. \r\n     */\r\n    insertLegend(bgMap) {\r\n        this.legendDiv.appendChild(this.table);\r\n        bgMap.getContainer().appendChild(this.legendDiv);\r\n    }\r\n}",
    "static": true,
    "longname": "src/Gisplay/Maps/Legend.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 104,
    "kind": "class",
    "name": "Legend",
    "memberof": "src/Gisplay/Maps/Legend.js",
    "static": true,
    "longname": "src/Gisplay/Maps/Legend.js~Legend",
    "access": null,
    "export": true,
    "importPath": "gisplay-es6-webpack/src/Gisplay/Maps/Legend.js",
    "importStyle": "{Legend}",
    "description": "This class represents the Map Legend. 15/03",
    "see": [
      "Diogo's thesis page 66/67 + 58/59 + 69(Figures)"
    ],
    "lineNumber": 5,
    "interface": false
  },
  {
    "__docId__": 105,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Gisplay/Maps/Legend.js~Legend",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Legend.js~Legend#constructor",
    "access": null,
    "description": "Creates an instance of Legend class.",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Legend"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The id of the legend."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": "The title for the legend."
      }
    ]
  },
  {
    "__docId__": 106,
    "kind": "member",
    "name": "title",
    "memberof": "src/Gisplay/Maps/Legend.js~Legend",
    "static": false,
    "longname": "src/Gisplay/Maps/Legend.js~Legend#title",
    "access": null,
    "description": "Title of the Gisplay map Legend.",
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 107,
    "kind": "member",
    "name": "legendDiv",
    "memberof": "src/Gisplay/Maps/Legend.js~Legend",
    "static": false,
    "longname": "src/Gisplay/Maps/Legend.js~Legend#legendDiv",
    "access": null,
    "description": "The div that contains the Legend.",
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "HTMLDivElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 108,
    "kind": "member",
    "name": "table",
    "memberof": "src/Gisplay/Maps/Legend.js~Legend",
    "static": false,
    "longname": "src/Gisplay/Maps/Legend.js~Legend#table",
    "access": null,
    "description": "The table element where the legend elements will be apppended.",
    "lineNumber": 28,
    "type": {
      "nullable": null,
      "types": [
        "HTMLTableElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 109,
    "kind": "member",
    "name": "className",
    "memberof": "src/Gisplay/Maps/Legend.js~Legend",
    "static": false,
    "longname": "src/Gisplay/Maps/Legend.js~Legend#className",
    "access": null,
    "description": "Class name for the Legend? Not used?",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 110,
    "kind": "member",
    "name": "lastdiv",
    "memberof": "src/Gisplay/Maps/Legend.js~Legend",
    "static": false,
    "longname": "src/Gisplay/Maps/Legend.js~Legend#lastdiv",
    "access": null,
    "description": "The last div to insert in the legend. Only for PSymbol Maps.",
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "HTMLDivElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 111,
    "kind": "member",
    "name": "firstInsertion",
    "memberof": "src/Gisplay/Maps/Legend.js~Legend",
    "static": false,
    "longname": "src/Gisplay/Maps/Legend.js~Legend#firstInsertion",
    "access": null,
    "description": "If it is the first insertion or not. Only for PSymbol Maps.",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 112,
    "kind": "member",
    "name": "POLYGON",
    "memberof": "src/Gisplay/Maps/Legend.js~Legend",
    "static": false,
    "longname": "src/Gisplay/Maps/Legend.js~Legend#POLYGON",
    "access": null,
    "description": "Constant to use when it's a Polygon.",
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@constant",
        "tagValue": "{number} POLYGON"
      }
    ],
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 113,
    "kind": "member",
    "name": "POINT",
    "memberof": "src/Gisplay/Maps/Legend.js~Legend",
    "static": false,
    "longname": "src/Gisplay/Maps/Legend.js~Legend#POINT",
    "access": null,
    "description": "Constant to use when it's a Point.",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@constant",
        "tagValue": "{number} POLYGON"
      }
    ],
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "init",
    "memberof": "src/Gisplay/Maps/Legend.js~Legend",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Legend.js~Legend#init",
    "access": null,
    "description": "Initialise Legend. Creates a table element and appends title, color element and value element.",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Legend"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The id of this Legend."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "classname",
        "description": "The class name to be usde by the Legend."
      }
    ]
  },
  {
    "__docId__": 115,
    "kind": "member",
    "name": "legendDiv",
    "memberof": "src/Gisplay/Maps/Legend.js~Legend",
    "static": false,
    "longname": "src/Gisplay/Maps/Legend.js~Legend#legendDiv",
    "access": null,
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 116,
    "kind": "member",
    "name": "table",
    "memberof": "src/Gisplay/Maps/Legend.js~Legend",
    "static": false,
    "longname": "src/Gisplay/Maps/Legend.js~Legend#table",
    "access": null,
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 117,
    "kind": "method",
    "name": "insertPointRow",
    "memberof": "src/Gisplay/Maps/Legend.js~Legend",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Legend.js~Legend#insertPointRow",
    "access": null,
    "description": "Inserts one row for the Aesthetic object.\nUsed in Dot Maps.",
    "see": [
      "Diogo's thesis Page 69 5.1c"
    ],
    "lineNumber": 102,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Legend"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Aesthetic"
        ],
        "spread": false,
        "optional": false,
        "name": "currentaes",
        "description": "The Aesthetic object"
      },
      {
        "nullable": null,
        "types": [
          "Map"
        ],
        "spread": false,
        "optional": false,
        "name": "mapobj",
        "description": "The Map object where the point row will be added."
      }
    ]
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "insertPolygonRow",
    "memberof": "src/Gisplay/Maps/Legend.js~Legend",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Legend.js~Legend#insertPolygonRow",
    "access": null,
    "description": "Inserts one polygon row into the Legend. Used for area based Maps (Choropleth and Chorocromatic).",
    "see": [
      "Diogo's thesis Page 69 5.1b"
    ],
    "lineNumber": 113,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Legend"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Aesthetic"
        ],
        "spread": false,
        "optional": false,
        "name": "currentaes",
        "description": "The Aesthetic object"
      },
      {
        "nullable": null,
        "types": [
          "Map"
        ],
        "spread": false,
        "optional": false,
        "name": "mapobj",
        "description": "The map where to insert a polygon row."
      }
    ]
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "insertRow",
    "memberof": "src/Gisplay/Maps/Legend.js~Legend",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Legend.js~Legend#insertRow",
    "access": null,
    "description": "Adds one row to the Legend and attaches an on click event to said row.",
    "lineNumber": 124,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Legend"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Aesthetic"
        ],
        "spread": false,
        "optional": false,
        "name": "currentaes",
        "description": "The Aesthetic object."
      },
      {
        "nullable": null,
        "types": [
          "Map"
        ],
        "spread": false,
        "optional": false,
        "name": "mapobj",
        "description": "The map where to insert a polygon row."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The type of row to insert. 1=Polygon, 2=Point. @TODO: Should be constant"
      }
    ]
  },
  {
    "__docId__": 120,
    "kind": "member",
    "name": "className",
    "memberof": "src/Gisplay/Maps/Legend.js~Legend",
    "static": false,
    "longname": "src/Gisplay/Maps/Legend.js~Legend#className",
    "access": null,
    "description": null,
    "lineNumber": 175,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 121,
    "kind": "member",
    "name": "className",
    "memberof": "src/Gisplay/Maps/Legend.js~Legend",
    "static": false,
    "longname": "src/Gisplay/Maps/Legend.js~Legend#className",
    "access": null,
    "description": null,
    "lineNumber": 177,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "method",
    "name": "insertGradient",
    "memberof": "src/Gisplay/Maps/Legend.js~Legend",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Legend.js~Legend#insertGradient",
    "access": null,
    "description": "Inserts in the Legend one gradient according to the Aesthetic object.\nUse in Change Maps. ",
    "see": [
      "Diogo's thesis page 69 Figure 5.1d"
    ],
    "lineNumber": 196,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Legend"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Map"
        ],
        "spread": false,
        "optional": false,
        "name": "mapobj",
        "description": "The map where to insert the gradient row."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "left",
        "description": "Left value of the Legend (minimum change)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "middle",
        "description": "Value at the center of the change(aka break point)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "right",
        "description": "Right value of the legend (maximum value)."
      }
    ]
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "insertProportionalSymbols",
    "memberof": "src/Gisplay/Maps/Legend.js~Legend",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Legend.js~Legend#insertProportionalSymbols",
    "access": null,
    "description": "Inserts one Proportional symbols legend element.\nUsed by PSymbols Maps.",
    "see": [
      "Diogo's thesis Page 69 5.1a"
    ],
    "lineNumber": 259,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Legend"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Aesthetic"
        ],
        "spread": false,
        "optional": false,
        "name": "currentaes",
        "description": "The Aesthetic object."
      },
      {
        "nullable": null,
        "types": [
          "Map"
        ],
        "spread": false,
        "optional": false,
        "name": "mapobj",
        "description": "The map where to insert the proportion symbols element."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "numLegendItems",
        "description": "Number of items to be created."
      }
    ]
  },
  {
    "__docId__": 124,
    "kind": "member",
    "name": "firstInsertion",
    "memberof": "src/Gisplay/Maps/Legend.js~Legend",
    "static": false,
    "longname": "src/Gisplay/Maps/Legend.js~Legend#firstInsertion",
    "access": null,
    "description": null,
    "lineNumber": 265,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 125,
    "kind": "member",
    "name": "firstInsertion",
    "memberof": "src/Gisplay/Maps/Legend.js~Legend",
    "static": false,
    "longname": "src/Gisplay/Maps/Legend.js~Legend#firstInsertion",
    "access": null,
    "description": null,
    "lineNumber": 268,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 126,
    "kind": "member",
    "name": "className",
    "memberof": "src/Gisplay/Maps/Legend.js~Legend",
    "static": false,
    "longname": "src/Gisplay/Maps/Legend.js~Legend#className",
    "access": null,
    "description": null,
    "lineNumber": 305,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 127,
    "kind": "member",
    "name": "className",
    "memberof": "src/Gisplay/Maps/Legend.js~Legend",
    "static": false,
    "longname": "src/Gisplay/Maps/Legend.js~Legend#className",
    "access": null,
    "description": null,
    "lineNumber": 307,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "member",
    "name": "lastdiv",
    "memberof": "src/Gisplay/Maps/Legend.js~Legend",
    "static": false,
    "longname": "src/Gisplay/Maps/Legend.js~Legend#lastdiv",
    "access": null,
    "description": null,
    "lineNumber": 323,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 129,
    "kind": "member",
    "name": "lastdiv",
    "memberof": "src/Gisplay/Maps/Legend.js~Legend",
    "static": false,
    "longname": "src/Gisplay/Maps/Legend.js~Legend#lastdiv",
    "access": null,
    "description": null,
    "lineNumber": 327,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "insertLegend",
    "memberof": "src/Gisplay/Maps/Legend.js~Legend",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Legend.js~Legend#insertLegend",
    "access": null,
    "description": "Appends the legend div element to the map container. Used by all Maps.",
    "lineNumber": 341,
    "params": [
      {
        "nullable": null,
        "types": [
          "BGMapWrapper"
        ],
        "spread": false,
        "optional": false,
        "name": "bgMap",
        "description": "The background map where the legend will be appended to."
      }
    ]
  },
  {
    "__docId__": 131,
    "kind": "file",
    "name": "src/Gisplay/Maps/Map.js",
    "content": "import { BGMapWrapper } from './BGMapWrapper';\r\nimport { Aesthetic } from './Aesthetic';\r\nimport { GisplayOptions } from '../GisplayOptions';\r\nimport { WebGLUtils } from './WebGLUtils';\r\n\r\n/**\r\n * This class contains the Map class which represents the current map.\r\n * Each map has a group of functions available. There is only one map yet(maybe there will be two if we want to compare two).\r\n * @see Diogo's thesis 57-60 + 64/65\r\n */\r\nexport class Map {\r\n\r\n    /**\r\n     * Map constructor. All Map subclasses should call this first with super(...).\r\n     * @param {BGMapWrapper|Object} bgmap - Background map.\r\n     * @param {JSON} geometry - Geometry read from the file.\r\n     * @param {Object} userOptions - The user defined options. \r\n     * @todo With the type of the map we can do an if statement inside constructor to use or not some of the variables.\r\n     */\r\n    constructor(bgmap, geometry, userOptions) {\r\n        //console.log(\"Map constructor called -> super()\");\r\n        /**\r\n          * This object holds for each point it's long, lat and associated properties. \r\n          * This points will be used by k-d Tree. And k-d Tree is used to find the closest point to where the user clicked.\r\n          * @type {Array<{lon: number, lat: number, properties: JSON}>}\r\n          */\r\n        this.treepoints = [];\r\n\r\n        // ####################### DOT MAP ONLY\r\n        /**\r\n          * Holds the points for each Aesthethic object.\r\n          * @type {Array<Array<number>>}\r\n          */\r\n        this.tempAestheticPoints = new Array();\r\n\r\n        // ####################### ALL MAPS\r\n        /**\r\n         * Aesthetic objects that were saved.\r\n         * @type {Array<Aesthetic>}\r\n         */\r\n        this.aesthetics = new Array();\r\n        /**\r\n         * JSON object with the geometry that was read from the file.\r\n         * @type {JSON}\r\n         */\r\n        this.geometry = geometry;\r\n        /**\r\n         * This map unique identifier.\r\n         * @type {number}\r\n         */\r\n        this.id = window.mapcount++;\r\n\r\n        /**\r\n         * KdTree object to hold that will be used to calculate the closest point to the coordinates where the user made a click.\r\n         * @type {kdTree}\r\n         * @see Diogo's thesis Page 61.\r\n         * @see https://github.com/ubilabs/kd-tree-javascript\r\n         */\r\n        this.kdtree = undefined;\r\n        /**\r\n         * RBush(Rtree implementation) that is used to calculate the polygon closest to the coordinates where the user made a click.\r\n         * @type {PolygonLookup}\r\n         * @see Diogo's thesis page 61.\r\n         * @see https://github.com/pelias/polygon-lookup\r\n         * @see https://github.com/mourner/rbush\r\n         */\r\n        this.rtree = undefined;\r\n        /**\r\n         * Polygons do/do not exist. This is used to know if it to create a rtree or not on buildTrees method.\r\n         * @type {boolean}\r\n         */\r\n        this.hasPolygons = false;\r\n\r\n        /**\r\n         * This is the maixmum value found on the dataset. The final value for the break. E.g. [2, 37[ 37 is the max. \r\n         * Used for PSymbol Map and Change Map because on those maps it's important to take in consideration this values to define the Feature color.\r\n         * @see Diogo's thesis page 63 5.1.3 \r\n         * @type {number}\r\n         */\r\n        this.max = null;\r\n        /**\r\n         * This is the minimum value found on the dataset. The initial value for the break. E.g. [2, 37[ 2 is the min.\r\n         * Used for PSymbol Map and Change Map because on those maps it's important to take in consideration this values to define the Feature color.\r\n         * @see Diogo's thesis page 63 5.1.3\r\n         * @type {number}\r\n         */\r\n        this.min = null;\r\n    }\r\n\r\n    /**\r\n     * M1) Loads user and default options. For each case if it isn't provided by the user, then it uses\r\n     * the default option. 1st method to be called.\r\n     * @param {Object} userOptions - Options given by the user. \r\n     * @param {Object} bgmap  - The background map provider.\r\n     */\r\n    loadOptions(userOptions, bgmap) {\r\n        /**\r\n         * All the options available in the Gisplay API.\r\n         * @type {GisplayOptions}\r\n         */\r\n        this.gisplayOptions = new GisplayOptions(userOptions);\r\n\r\n        /**\r\n         * This is the Gisplay API Background map wrapper. It contains the background map provider object to access it's methods (zoom, coordinates,etc).\r\n         * This map(Gisplay Map) will  be drawn over the background map(bGMap).\r\n         * @type {BGMapWrapper}\r\n         */\r\n        this.bGMap = this.gisplayOptions.useCustomMapService ? bgmap : new BGMapWrapper(bgmap);\r\n        if (this.gisplayOptions.showLoader)\r\n            this.showLoader();\r\n    }\r\n\r\n    /**\r\n     * M2) Calls the Background Map Wrapper to create the loader to be used later when the user feeds data to the API.\r\n     * @deprecated Not used anymore\r\n     */\r\n    showLoader() {\r\n        this.bGMap.showLoader();\r\n    }\r\n\r\n    /**\r\n     * M3) Initializes the API by: creating canvas, the WebGL program and setting up all needed events.\r\n     * @return {void}\r\n     */\r\n    initializeCanvasAndEvents() {\r\n        this.createCanvas();\r\n        WebGLUtils.createWebGLProgram(this._webgl);\r\n        this.setupEvents(this.id);\r\n    }\r\n\r\n    /**\r\n     * M4) Creates a canvas element and WebGL associated information.\r\n     */\r\n    createCanvas() {\r\n        const canvas = this.bGMap.createCanvas(this.id);\r\n\r\n        /**\r\n         * @type {Object} _webgl - WebGL object.  Init webgl properties\r\n         * @property  {WebGLRenderingContext} _webgl.gl - The WebGLRenderingContext to be used.\r\n         * @property  {WebGLProgram} _webgl.program -  The WebGLProgram to be used. \r\n         * @property  {Float32Array} _webgl.projection - The projection to be used. Deprecated in favor of better projection to work with multiple map background providers.\r\n         * @see Diogo's thesis page 64+\r\n         */\r\n        this._webgl = {\r\n            gl: null,\r\n            program: null\r\n        };\r\n\r\n        this._webgl.gl = canvas.getContext(\"webgl\");\r\n        window.canvas = canvas;\r\n        this._webgl.gl.viewport(0, 0, this.bGMap.getContainer().offsetWidth, this.bGMap.getContainer().offsetHeight);\r\n        this._webgl.gl.disable(this._webgl.gl.DEPTH_TEST);\r\n    }\r\n\r\n    /**\r\n     * M8) Setup all events used by the API. Right now the API uses: drag, zoom and click events. \r\n     * This events will be fired by the background map provider and we can use them to draw(zoom and pan) or alert information(click).\r\n     * Pan/Zoom = move, click = click\r\n     * rtree will be used to find the closest polygon to the where the clicked event happened.\r\n     * kdtree will be used to find the closest point to where the click event happened.\r\n     * @todo This method is doing uneccessary job if the user set interative to false and mapOnClickFunction is undefined.\r\n     * @param {number} mappos - This map id. \r\n     * @return {void}\r\n     * @see https://www.mapbox.com/mapbox-gl-js/api/#events\r\n     * @see http://stackoverflow.com/a/34349737\r\n     */\r\n    setupEvents(mappos) {\r\n        /*if(!this.gisplayOptions.interactive && this.gisplayOptions.mapOnClickFunction === undefined)\r\n            return;*/\r\n        this.bGMap.addEventListener('move', () => { this.draw(); });\r\n        this.bGMap.addEventListener('click', e => { //TODO: Create 2 methods (1 for rtree another for kdtree)\r\n            const lng = ((((180 + e.latlng.lng) % 360) + 360) % 360) - 180;\r\n            const lat = e.latlng.lat;\r\n            /**\r\n             * When dealing with polygons rtree will be used.\r\n             * @see Diogo's thesis Page 62\r\n             */\r\n            if (this.rtree !== undefined)\r\n                this.searchRTree(lng, lat);\r\n\r\n            /**\r\n             * When dealing with points kdtree will be used.\r\n             * @see Diogo's thesis page 62\r\n             */\r\n            if (this.kdtree !== undefined)\r\n                this.searchKdTree(lng, lat);\r\n\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Search the rtree for the closest polygon from the lng, lat that was clicked.\r\n     * @param {number} lng - The longitude of the click.\r\n     * @param {number} lat - The latitude of the click.\r\n     * @returns \r\n     * \r\n     * @memberOf Map\r\n     */\r\n    searchRTree(lng, lat) {\r\n        let rtreeSearchResult = this.rtree.search(lng, lat);\r\n        if (rtreeSearchResult === undefined)\r\n            return;\r\n        else {\r\n            let res = \"\";\r\n            let showPrtOnClick = this.gisplayOptions.showPropertiesOnClick;\r\n            if (showPrtOnClick !== null) {\r\n                for (let i = 0; i < showPrtOnClick.length; i += 2) {\r\n                    if (i === 0)\r\n                        res += `${showPrtOnClick[i + 1]}: ${rtreeSearchResult.properties[showPrtOnClick[i]]}`;\r\n                    else\r\n                        res += `\\n${showPrtOnClick[i + 1]}: ${rtreeSearchResult.properties[showPrtOnClick[i]]}`;\r\n                }\r\n            }\r\n            else {\r\n                let keys = Object.keys(rtreeSearchResult.properties);\r\n                for (let [i, key] of keys.entries())\r\n                    if (key !== \"_gisplayid\")\r\n                        i == 0 ? res += `${key}: ${rtreeSearchResult.properties[key]}` : res += `\\n${key}: ${rtreeSearchResult.properties[key]}`;\r\n            }\r\n\r\n            if (this.gisplayOptions.interactive)\r\n                alert(res);//todo\r\n            if (this.gisplayOptions.mapOnClickFunction !== undefined)\r\n                this.gisplayOptions.mapOnClickFunction(rtreeSearchResult);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Search the rtree for the closest point from the lng, lat that was clicked. \r\n     * @param {number} lon - The longitude of the click.\r\n     * @param {number} lat - The latitude of the click.\r\n     * @returns \r\n     * @memberOf Map\r\n     */\r\n    searchKdTree(lon, lat) {\r\n        let nearest = this.kdtree.nearest({ lon, lat }, 1, 128 / ((2 ** (this.bGMap.getZoom() * 2))));\r\n        console.log(\"21\", nearest)\r\n        if (nearest.length <= 0)\r\n            return;\r\n        else {\r\n            console.log(\"22\")\r\n            let kdTreeSearchResult = nearest[0][0];\r\n            let res = \"\";\r\n            let showPrtOnClick = this.gisplayOptions.showPropertiesOnClick;\r\n            if (showPrtOnClick !== null) { //TODO: Remove if dentro do for e passar a começar no i=1 e passar o if para antes do for\r\n                for (let i = 0; i < showPrtOnClick.length; i += 2) {\r\n                    if (i === 0)\r\n                        res += `${showPrtOnClick[i + 1]}: ${kdTreeSearchResult.properties[showPrtOnClick[i]]}`;\r\n                    else\r\n                        res += `\\n${showPrtOnClick[i + 1]}: ${kdTreeSearchResult.properties[showPrtOnClick[i]]}`;\r\n                }\r\n            }\r\n            else {\r\n                let keys = Object.keys(kdTreeSearchResult.properties);\r\n                for (let [i, key] of keys.entries())\r\n                    if (key !== \"_gisplayid\")\r\n                        i == 0 ? res += `${key}: ${kdTreeSearchResult.properties[key]}` : res += `\\n${key}: ${kdTreeSearchResult.properties[key]}`;\r\n            }\r\n\r\n            if (this.gisplayOptions.interactive)\r\n                alert(res);\r\n            if (this.gisplayOptions.mapOnClickFunction !== undefined)\r\n                this.gisplayOptions.mapOnClickFunction(kdTreeSearchResult);\r\n        }\r\n    }\r\n\r\n    /** ########################   METHOD from Gisplay.js    ######################## */\r\n    /**\r\n     * M9) Method that executes all the process associated with the creation of the thematic map.\r\n     * @memberOf Map\r\n     */\r\n    makeMap() {\r\n        let opts = this.gisplayOptions;\r\n        setTimeout(console => {\r\n            if (opts.colorScheme === undefined)\r\n                opts.colorScheme = this.defaults(opts.colorSchemeId).colorScheme;\r\n            if (opts.classBreaks === undefined) {\r\n                if (opts.numberOfClasses === undefined)\r\n                    opts.numberOfClasses = this.defaults(opts.colorSchemeId).numberOfClasses;\r\n                this.preProcessData(this.geometry, opts.numberOfClasses, opts.classBreaksMethod, opts.colorScheme);\r\n            }\r\n\r\n            this.loadGeoJSON(this.geometry);\r\n            this.draw();\r\n\r\n            if (opts.showLegend)\r\n                this.buildLegend();\r\n            if (opts.showLoader) //@TODO: Change this if to be the 1st thing done inside the setTimeout\r\n                this.showLoader();\r\n        }, 1);\r\n    }\r\n\r\n    /**\r\n     * M11) Creates Aesthetic objects. If there's the need to calculate the class intervals,\r\n     * the method calcClassBreaks is called \r\n     * @param {JSON} geojson - GeoJSON object.\r\n     * @param {number} numberOfClasses - Number of classes that the Legend will contain.\r\n     * @param {string} classBreaksMethod - Algorithm to be used to calculate class breaks. Only used it class breaks are not given by the user.\r\n     * @param {string[]} colorscheme - Color scheme to be used by this map.\r\n     * @memberOf Map\r\n     */\r\n    preProcessData(geojson, numberOfClasses, classBreaksMethod, colorscheme) {\r\n        /**\r\n         * @type {Array<Aesthetic>}\r\n         */\r\n        const aesarray = []; //Array of aesthetic objects loaded from the file\r\n        const numberValues = []; //The attr is a number\r\n        const stringValues = []; //The attr is a string\r\n        let classBreaks; //Class Breaks given by the user or calculated by the API\r\n        let fcolor; //Colors to be used\r\n        let opts = this.gisplayOptions; //Options given by the user and defaults\r\n\r\n        let geoJsonFeaturesLength = geojson.features.length;\r\n        for (let i = 0; i < geoJsonFeaturesLength && (i < opts.maxFeatures); i++) { //@TODO?: Two fors one if attr is a string another if it a number\r\n            let attrValue = geojson.features[i].properties[opts.attr];\r\n            if (attrValue !== null && typeof attrValue === 'number') { //If \"f3\" exists and its a number\r\n                numberValues.push(attrValue);\r\n                this.max = Math.max(this.max, attrValue);\r\n                this.min = Math.min(this.min, attrValue);\r\n            }\r\n            else if (!stringValues.includes(attrValue)) //If its a string\r\n                stringValues.push(geojson.features[i].properties[opts.attr]);\r\n        }\r\n\r\n        if (numberValues.length > 0) { //Quantitative\r\n            if (opts.classBreaks === undefined) { //Not given by the user then calculate them\r\n                if (numberOfClasses > 1)\r\n                    classBreaks = this.calcClassBreaks(numberValues, classBreaksMethod, numberOfClasses);\r\n                else\r\n                    classBreaks = [this.min, this.max]; //Change Map\r\n            }\r\n            else //Given by the user\r\n                classBreaks = opts.classBreaks;\r\n\r\n            if (classBreaks.length > 2) {\r\n                fcolor = chroma.scale(colorscheme).colors(classBreaks.length - 1);\r\n                for (let i = 0; i < classBreaks.length - 1; i++) {\r\n                    let [r, g, b] = chroma(fcolor[i]).rgb(); // let color = chroma(fcolor[i]).rgb();\r\n                    let aes;\r\n                    if (i !== classBreaks.length - 2)\r\n                        aes = new Aesthetic(i, opts.attr, [Math.round(r), Math.round(g), Math.round(b), opts.alpha], [0, 0, 0, 1], null, [classBreaks[i], classBreaks[i + 1]]);\r\n                    else {\r\n                        aes = new Aesthetic(i, opts.attr, [Math.round(r), Math.round(g), Math.round(b), opts.alpha], [0, 0, 0, 1], null, [classBreaks[i], classBreaks[i + 1]]);\r\n                        aes.outer = true;\r\n                    }\r\n                    aesarray.push(aes);\r\n                }\r\n            }\r\n            else {\r\n                let [r, g, b] = chroma(colorscheme[0]).rgb();// let color = chroma(colorscheme[0]).rgb();\r\n                let aes = new Aesthetic(0, opts.attr, [Math.round(r), Math.round(g), Math.round(b), opts.alpha], [0, 0, 0, 1], null, [classBreaks[0], classBreaks[1]]);\r\n                aes.outer = true;\r\n                aesarray.push(aes);\r\n            }\r\n        }\r\n        else { //Qualitative\r\n            if (stringValues.length > 0) {\r\n                classBreaks = stringValues;\r\n                if (typeof colorscheme === 'string') //string\r\n                    fcolor = chroma.scale(colorscheme).colors(classBreaks.length);\r\n                else  //array\r\n                    fcolor = chroma.scale(colorscheme).colors(classBreaks.length);\r\n\r\n                for (let i = 0; i < classBreaks.length; i++) {\r\n                    let [r, g, b] = chroma(fcolor[i]).rgb();// let color = chroma(fcolor[i]).rgb();\r\n                    let aes = new Aesthetic(i, opts.attr, [Math.round(r), Math.round(g), Math.round(b), 1], [0, 0, 0, 1], null, [stringValues[i]]);\r\n                    aesarray.push(aes);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * All the Aesthetics that were read from the GeoJSON file.\r\n         * @type {Array<Aesthetic>}\r\n         */\r\n        this.aesthetics = aesarray;\r\n    }\r\n\r\n    /**\r\n     * M12) Calculates the class breaks using the algorithm given(k-means, quantile or equidistant). \r\n     * There will be as many class breaks as number of classes(numberOfClasses) given as input. \r\n     * @param {number[]} numberValues - The data values that will be used to be compute the breaks. \r\n     * @param {string} classBreakMethod - The algorithm to use to calculate the class breaks.\r\n     * @param {number} numberOfClasses - Number of classes the result expects.\r\n     * @returns {number[]} - The class breaks resulting from the use of the given algorithm and the number of classes.\r\n     * @see http://gka.github.io/chroma.js/#chroma-limits\r\n     * @memberOf Map\r\n     */\r\n    calcClassBreaks(numberValues, classBreakMethod, numberOfClasses) {\r\n        let classBreaks;\r\n        switch (classBreakMethod) {\r\n            case 'equidistant':\r\n                classBreaks = chroma.limits(numberValues, 'e', numberOfClasses);\r\n                break;\r\n\r\n            case 'quantile':\r\n                classBreaks = chroma.limits(numberValues, 'q', numberOfClasses);\r\n                break;\r\n\r\n            case 'k-means':\r\n                classBreaks = chroma.limits(numberValues, 'k', numberOfClasses);\r\n                break;\r\n\r\n            default:\r\n                classBreaks = chroma.limits(numberValues, 'q', numberOfClasses);\r\n                break;\r\n        }\r\n        return classBreaks;\r\n    }\r\n\r\n    /**\r\n     * M13) Loads GeoJSON object that came from the file uploaded by the user. \r\n     * Extracts the Features present in the geometry object and inserts them in Aesthetic object(s)\r\n     * This method will create and insert features to Aesthetic objects and build trees of relationships between points or polygons.\r\n     * @param {JSON} geojson - GeoJSON read from the file.\r\n     * @see https://www.dashingd3js.com/lessons/geojson\r\n     * @memberOf Map\r\n     */\r\n    loadGeoJSON(geojson) {\r\n        for (let i = 0; i < geojson.features.length && (this.gisplayOptions.maxFeatures === undefined || i < this.gisplayOptions.maxFeatures); i++) {\r\n            geojson.features[i].properties['_gisplayid'] = i;\r\n            const geometry = geojson.features[i].geometry;\r\n            const properties = geojson.features[i].properties;\r\n            this.createAndInsertFeature(i, geometry, properties);\r\n        }\r\n        this.buildTrees(geojson); //@TODO: Only call this method if it's a low end device aka options.memorySaver is on\r\n    }\r\n\r\n    /**\r\n     * M14) Creates a Feature and then calls a method to insert said Feature in one or more Aesthetic objects.\r\n     * @param {number} featureId - Id of the Feature.\r\n     * @param {JSON} geometry - GeoJSON Geometry Object. \r\n     * @param {JSON} properties - GeoJSON properties Object.\r\n     * @see http://geojson.org/geojson-spec.html#geometry-objects\r\n     * @memberOf Map\r\n     */\r\n    createAndInsertFeature(featureId, geometry, properties) {\r\n        const gl = this._webgl.gl;\r\n        /**\r\n         * @type {GisplayOptions}\r\n         */\r\n        let opts = this.gisplayOptions;\r\n        if (opts.minuend !== undefined && opts.subtrahend !== undefined\r\n            && typeof properties[opts.minuend] === 'number' && typeof properties[opts.subtrahend] === 'number'\r\n            && properties[opts.minuend] !== undefined && properties[opts.subtrahend] !== undefined) {\r\n            properties[opts.attr] = properties[opts.minuend] - properties[opts.subtrahend]; //Used for Change map\r\n        }\r\n\r\n        //let isPoint = geometry.type == \"Point\";\r\n        if (geometry.type === \"Polygon\" || geometry.type === \"MultiPolygon\") {\r\n            this.hasPolygons = true;\r\n            const polygons = this.processPolygon({ geometry, properties });\r\n\r\n            const currentTriangles = []; //Polygon Triangles vertices\r\n            const bufferT = []; //WebGL Buffers with  triangles\r\n            const currentBorders = []; //Polygon Borders vertices\r\n            const bufferB = []; //Buffer borders\r\n\r\n            for (let i = 0; i < polygons.length; i++) { //For each Polygon\r\n                const trianglesPolygon = polygons[i].triangles;\r\n                const border = polygons[i].vertices;\r\n                currentTriangles[i] = new Array(); //Add This Polygon triangles\r\n                currentBorders[i] = new Array(); //Add this Polygon borders\r\n\r\n                for (let j = 0; j < trianglesPolygon.length; j++) { //Triangles\r\n                    currentTriangles[i].push(border[trianglesPolygon[j] * 2], border[trianglesPolygon[j] * 2 + 1]);\r\n\r\n                    if (j === trianglesPolygon.length - 1) {\r\n                        bufferT.push(gl.createBuffer());\r\n\r\n                        let vertArray = new Float32Array(currentTriangles[i]);\r\n                        gl.fsize = vertArray.BYTES_PER_ELEMENT;\r\n                        gl.bindBuffer(gl.ARRAY_BUFFER, bufferT[i]);\r\n                        gl.bufferData(gl.ARRAY_BUFFER, vertArray, gl.STATIC_DRAW);\r\n\r\n                        bufferT[i].itemSize = 2;\r\n                        bufferT[i].numItems = vertArray.length / 2;\r\n                    }\r\n                }\r\n\r\n                for (let k = 0; k < border.length; k += 2) { //Borders\r\n                    currentBorders[i].push(border[k], border[k + 1]);\r\n\r\n                    if (k === border.length - 2) {\r\n                        bufferB.push(gl.createBuffer());\r\n\r\n                        let vertArray = new Float32Array(currentBorders[i]);\r\n                        gl.fsize = vertArray.BYTES_PER_ELEMENT;\r\n                        gl.bindBuffer(gl.ARRAY_BUFFER, bufferB[i]);\r\n                        gl.bufferData(gl.ARRAY_BUFFER, vertArray, gl.STATIC_DRAW);\r\n\r\n                        bufferB[i].itemSize = 2;\r\n                        bufferB[i].numItems = vertArray.length / 2;\r\n                    }\r\n                }\r\n            }\r\n            this.insertFeature(featureId, properties, bufferT, bufferB, []);\r\n        }\r\n\r\n        else if (geometry.type === \"Point\" && opts.isDynamic) {\r\n            const currentPoints = new Array();\r\n            currentPoints.push(geometry.coordinates[0], geometry.coordinates[1]);\r\n            const bufferPoints = [];//Buffer points\r\n            let vertArray = new Float32Array(currentPoints);\r\n\r\n            bufferPoints.push(gl.createBuffer());\r\n            gl.fsize = vertArray.BYTES_PER_ELEMENT;\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, bufferPoints[0]);\r\n            gl.bufferData(gl.ARRAY_BUFFER, vertArray, gl.STATIC_DRAW);\r\n\r\n            bufferPoints[0].itemSize = 2;\r\n            bufferPoints[0].numItems = vertArray.length / 2;\r\n\r\n            this.insertFeature(featureId, properties, [], [], bufferPoints);\r\n            this.treepoints.push({ lon: geometry.coordinates[0], lat: geometry.coordinates[1], properties });\r\n        }\r\n\r\n        else if (geometry.type === \"Point\" && !opts.isDynamic) {\r\n            if (this.tempAestheticPoints.length === 0)\r\n                for (let i = 0; i < this.aesthetics.length; i++)\r\n                    this.tempAestheticPoints[i] = [];\r\n\r\n            const aesPositions = this.fitFeature(properties);\r\n            for (const aesPos of aesPositions)\r\n                this.tempAestheticPoints[aesPos].push(geometry.coordinates[0], geometry.coordinates[1]);\r\n\r\n            this.treepoints.push({ lon: geometry.coordinates[0], lat: geometry.coordinates[1], properties });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * M15) Deals with polygon triangulation.\r\n     * @param {{geometry: JSON, properties: JSON}} polygon - The geometry and properties of the polygon.\r\n     * @returns {{triangles: Array<number>, vertices: Array<number>}} - The triangles and vertices calculated by earcut triangulation. The vertices are the outside of the polygon, the triangles are the inside.\r\n     * @see http://www.macwright.org/2015/03/23/geojson-second-bite.html#polygons\r\n     * @memberOf Map\r\n     */\r\n    processPolygon(polygon) {\r\n        let polyarray = [];\r\n        if (polygon.geometry.type === \"Polygon\") { //@TODO: [Demos never use this if statement.]\r\n            let outsidepolygon = polygon.geometry.coordinates[0]; //See: http://geojson.org/geojson-spec.html#polygon\r\n            let tempVerts = new Array();\r\n            for (let out = 0; out < outsidepolygon.length - 1; out++)\r\n                tempVerts.push(outsidepolygon[out][0], outsidepolygon[out][1]);//_vertexcount += (outsidepolygon.length + 1) / 2;\r\n            let triangles_vert = earcut(tempVerts); // _tricount += (triangles_vert.length / 3);\r\n            polyarray.push({ triangles: triangles_vert, vertices: tempVerts });\r\n        }\r\n        else if (polygon.geometry.type == \"MultiPolygon\") { //See http://geojson.org/geojson-spec.html#multipolygon\r\n            for (const cs of polygon.geometry.coordinates) {\r\n                let outsidepolygon = cs[0];\r\n                let tempVerts = new Array();\r\n                for (const c of outsidepolygon)\r\n                    tempVerts.push(c[0], c[1]);\r\n                let triangles_vert = earcut(tempVerts);\r\n                polyarray.push({ triangles: triangles_vert, vertices: tempVerts });\r\n            }\r\n        }\r\n        return polyarray;\r\n    }\r\n\r\n    /**\r\n     * M16) Converts geographic coordinates(latitude, longitude) to canvas coordinate pixels.\r\n     * @param {number} longitude - The longitude.\r\n     * @param {number} latitude - The latitude.\r\n     * @returns {x: number, y: number} - canvas coordinate system pixels.\r\n     * @see http://gisgeography.com/latitude-longitude-coordinates/\r\n     * @see https://www.w3schools.com/graphics/canvas_coordinates.asp\r\n     * @deprecated Not used anymore. YEAH...\r\n     * @memberOf Map\r\n     */\r\n    latLongToPixelXY(longitude, latitude) {\r\n        const pi_180 = Math.PI / 180.0;\r\n        const pi_4 = Math.PI * 4;\r\n        const sinLatitude = Math.sin(latitude * pi_180);\r\n        const pixelY = (0.5 - Math.log((1 + sinLatitude) / (1 - sinLatitude)) / (pi_4)) * 256;\r\n        const pixelX = ((longitude + 180) / 360) * 256;\r\n\r\n        const pixel = { x: pixelX, y: pixelY };\r\n        return pixel;\r\n    }\r\n\r\n    /**\r\n     * M17) Inserts the Feature into one or more Aesthetic objects. If the Feature does not fit in any Aesthetic then does nothing.\r\n     * @param {number} id - The Feature id. \r\n     * @param {JSON} properties - The Feature properties. \r\n     * @param {{itemSize: number, numItems: number}} triangles - Triangles, each in one WebGLBuffer.\r\n     * @param {{itemSize: number, numItems: number}} borders - Borders, each in one WebGLBuffer.\r\n     * @param {{itemSize: number, numItems: number}} points - Points, each in one WebGLBuffer.\r\n     * @return {void}\r\n     * @memberOf Map\r\n     */\r\n    insertFeature(id, properties, triangles, borders, points) {\r\n        for (const aes of this.aesthetics)\r\n            if (aes.checkProperty(properties[aes.getAttr()]))\r\n                aes.addFeature(id, properties, triangles, borders, points);\r\n        /* for (let i = 0; i < this.aesthetics.length; i++)\r\n             if (this.aesthetics[i].checkProperty(properties[this.aesthetics[i].getAttr()]))\r\n                 this.aesthetics[i].addFeature(id, properties, triangles, borders, points);*/\r\n    }\r\n\r\n    /**\r\n     * M18) Returns an array of Aesthetic ids that tells us the objects where the Feature belongs.\r\n     * @param {JSON} properties - The Feature properties\r\n     * @returns {Array<number>} - The Aesthetic ids where the Feature belongs.\r\n     * @memberOf Map\r\n     */\r\n    fitFeature(properties) {\r\n        const res = [];\r\n        for (let i = 0; i < this.aesthetics.length; i++)\r\n            if (this.aesthetics[i].checkProperty(properties[this.aesthetics[i].getAttr()]))\r\n                res.push(i);\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * M19) Receives the dataset as parameter. This dataset in each row contains geometry and associated properties, then it creates one tree\r\n     * either for points or polygons. This tree can be k-d Treee or RBush(RTree)\r\n     * @param {JSON} geojson \r\n     * @return {void}\r\n     * @see Diogo's thesis page 62\r\n     * @memberOf Map\r\n     */\r\n    buildTrees(geojson) {\r\n        const gl = this._webgl.gl;\r\n        if (this.tempAestheticPoints.length > 0) {\r\n            for (let i = 0; i < this.tempAestheticPoints.length; i++) {\r\n                if (this.tempAestheticPoints[i].length > 0) {\r\n                    const vertArray = new Float32Array(this.tempAestheticPoints[i]);\r\n                    const bufferP = [];\r\n                    bufferP.push(gl.createBuffer());\r\n\r\n                    gl.fsize = vertArray.BYTES_PER_ELEMENT;\r\n                    gl.bindBuffer(gl.ARRAY_BUFFER, bufferP[0]);\r\n                    gl.bufferData(gl.ARRAY_BUFFER, vertArray, gl.STATIC_DRAW);\r\n                    bufferP[0].itemSize = 2;\r\n                    bufferP[0].numItems = vertArray.length / 2;\r\n                    this.insertGroupedFeature(i, [], [], bufferP);\r\n                }\r\n            }\r\n        }\r\n        if (this.treepoints !== null)\r\n            this.kdtree = new kdTree(this.treepoints, (a, b) => (a.lon - b.lon) ** 2 + (a.lat - b.lat) ** 2, [\"lon\", \"lat\", \"properties\"]);\r\n        if (this.hasPolygons)\r\n            this.rtree = new PolygonLookup(geojson);\r\n    }\r\n\r\n    /**\r\n     * M20) Similar to insertFeature, in this case inserts a group of Features like it was only one.\r\n     * It creates one WebGLBuffer with all the points instead of one WebGLBuffer per point.\r\n     * This method should only be used when we already grouped the Features by Aesthetic class (fitFeature() method).\r\n     * This method exists to provide one alternative less expensive in terms of memory for low end devices.\r\n     * Used only on Dot Map because on those we can easily end up with millions of different Features.\r\n     * @param {number} id - Aesthethics id. \r\n     * @param {{itemSize: number, numItems: number}} triangles - Not used ?\r\n     * @param {{itemSize: number, numItems: number}} borders - Not used ?\r\n     * @param {{itemSize: number, numItems: number}} points - All the points for the Aesthethic object in one WebGLBuffer.\r\n     * @memberOf Map\r\n     */\r\n    insertGroupedFeature(id, triangles, borders, points) {\r\n        this.aesthetics[id].addGroupedFeature(null, triangles, borders, points);\r\n    }\r\n\r\n    /** ########################    LEGEND METHODS    ######################## */\r\n    /**\r\n     * M17) Creates a Legend element suitable for polygons based on the Aesthethic objects.\r\n     * Should be overriden by subclasses.\r\n     * @return {void}\r\n     * @abstract\r\n     * @memberOf Map\r\n     */\r\n    buildLegend() {\r\n        const mapCanvas = document.getElementById(`mapCanvas${this.id}`);\r\n        const legendDiv = document.createElement('div');\r\n        legendDiv.id = `legendDiv${this.id}`;\r\n        legendDiv.style.position = 'absolute';\r\n        legendDiv.style.backgroundColor = 'white';\r\n        legendDiv.style.width = 250;\r\n        legendDiv.style.bottom = 20;\r\n        legendDiv.style.right = 0;\r\n        legendDiv.style.borderColor = 'black';\r\n        legendDiv.style.border = 'solid';\r\n\r\n        const table = document.createElement('table');\r\n        const thvalue = document.createElement('th');\r\n        const thcolor = document.createElement('th');\r\n        table.style.zIndex = \"2000\";\r\n        thcolor.style.width = 100;\r\n        table.appendChild(thcolor);\r\n        table.appendChild(thvalue);\r\n\r\n        for (const currentaes of this.aesthetics) {\r\n            const row = document.createElement('tr');\r\n            const value = document.createElement('td');\r\n            const color = document.createElement('td');\r\n            const ptext = document.createElement('p');\r\n            let text;\r\n            if (typeof currentaes.range[0] === 'number')\r\n                text = document.createTextNode(`[${currentaes.range[0]}, ${currentaes.range[1]}[`);\r\n            else\r\n                text = document.createTextNode(currentaes.range[0]);\r\n            ptext.appendChild(text);\r\n            value.appendChild(ptext);\r\n\r\n            const colorDiv = document.createElement('div');\r\n            colorDiv.style.position = 'relative';\r\n            const rgbc = `rgba(${currentaes.fillColor[0]},${currentaes.fillColor[1]},${currentaes.fillColor[2]},${currentaes.fillColor[3]})`;\r\n            colorDiv.style['backgroundColor'] = rgbc;\r\n            colorDiv.style.height = 25;\r\n            colorDiv.style.width = 80;\r\n            color.appendChild(colorDiv);\r\n\r\n            row.appendChild(color);\r\n            row.appendChild(value);\r\n            table.appendChild(row);\r\n        }\r\n\r\n        legendDiv.appendChild(table);\r\n        this.bGMap.getContainer().appendChild(legendDiv);\r\n    }\r\n\r\n    /** ########################    WEBGL METHODS    ######################## */\r\n    /**\r\n     * M22) Clear current buffers to preset values.\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/clear\r\n     * @memberOf Map\r\n     */\r\n    clear() {\r\n        const gl = this._webgl.gl;\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n        gl.disable(gl.DEPTH_TEST);\r\n    }\r\n\r\n    /**\r\n     * M23) Receiving an Aesthetics object, draws the triangles contained in it's Features,\r\n     * using the color that the Aesthethics object has.\r\n     * @param {Aesthetic} aes - The Aesthetic object.\r\n     * @returns {void}\r\n     * @see Diogo's thesis Page 58/59\r\n     * @memberOf Map\r\n     */\r\n    drawTriangles(aes) {\r\n        const gl = this._webgl.gl;\r\n        if (gl === null)\r\n            return;\r\n\r\n        const fsize = Float32Array.BYTES_PER_ELEMENT;\r\n        const currentZoom = this.bGMap.getZoom();\r\n        const pointSize = Math.max(currentZoom - 5.0, 1.0);\r\n        const vertexCoordsLocation = gl.getAttribLocation(this._webgl.program, 'coords');\r\n        const vertexSizeLocation = gl.getAttribLocation(this._webgl.program, 'aPointSize');\r\n        const fragmentColorLocation = gl.getUniformLocation(this._webgl.program, \"u_color\");\r\n        const isPointLocation = gl.getUniformLocation(this._webgl.program, 'isPoint');\r\n        let [r, g, b, a] = aes.getFillColor();\r\n\r\n        this.setMatrices(gl);\r\n        gl.vertexAttrib1f(vertexSizeLocation, pointSize);\r\n        gl.uniform1f(isPointLocation, 0.0);\r\n        gl.uniform4f(fragmentColorLocation, r / 255, g / 255, b / 255, a);// Draw Polygons' Interior\r\n\r\n        let features = aes.getFeatures();\r\n        for (const f of features) { // Draw Polygons' Interior\r\n            let triangles = f.getTriangles();\r\n            for (const t of triangles) {\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, t);\r\n                gl.enableVertexAttribArray(vertexCoordsLocation);\r\n                gl.vertexAttribPointer(vertexCoordsLocation, 2, gl.FLOAT, false, fsize * 2, 0);\r\n                gl.drawArrays(gl.TRIANGLES, 0, t.numItems);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * M24) Receiving an Aesthetics object, draws the borders contained in it's Features, \r\n     * aplying the color specified in the Aeshteic object for the line color(Aeshteic.strokeColor).\r\n     * @param {Aesthetic} aes - The Aesthetic object.\r\n     * @returns {void}\r\n     * @memberOf Map\r\n     */\r\n    drawBorders(aes) {\r\n        const gl = this._webgl.gl;\r\n        if (gl === null)\r\n            return;\r\n\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n        const fsize = Float32Array.BYTES_PER_ELEMENT;\r\n        const currentZoom = this.bGMap.getZoom();\r\n        const pointSize = Math.max(currentZoom - 5.0, 1.0);\r\n        const vertexCoordsLocation = gl.getAttribLocation(this._webgl.program, 'coords');\r\n        const vertexSizeLocation = gl.getAttribLocation(this._webgl.program, 'aPointSize');\r\n        const fragmentColorLocation = gl.getUniformLocation(this._webgl.program, \"u_color\");\r\n        const isPointLocation = gl.getUniformLocation(this._webgl.program, 'isPoint');\r\n        let [r, g, b, a] = aes.getStrokeColor();\r\n\r\n        this.setMatrices(gl);\r\n        gl.vertexAttrib1f(vertexSizeLocation, pointSize);\r\n        gl.uniform1f(isPointLocation, 0.0);\r\n        gl.uniform4f(fragmentColorLocation, r / 255, g / 255, b / 255, a);\r\n\r\n        let features = aes.getFeatures();\r\n        for (const f of features) {\r\n            let borders = f.getBorders();\r\n            for (const b of borders) {\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, b);\r\n                gl.enableVertexAttribArray(vertexCoordsLocation);\r\n                gl.vertexAttribPointer(vertexCoordsLocation, 2, gl.FLOAT, false, fsize * 2, 0);\r\n                gl.drawArrays(gl.LINE_LOOP, 0, b.numItems);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * M25) Receiving an Aesthetics object, draws the borders contained in it's Features, \r\n     * aplying the filling color calculated using the attribute and the color scheme.\r\n     * @param {Aesthetic} aes - The Aesthetic object.\r\n     * @returns {void}\r\n     * @memberOf Map\r\n     */\r\n    drawContinuousPolygons(aes) {\r\n        const gl = this._webgl.gl;\r\n        if (gl === null)\r\n            return;\r\n\r\n        const fsize = Float32Array.BYTES_PER_ELEMENT;\r\n        const currentZoom = this.bGMap.getZoom();\r\n        const pointSize = Math.max(currentZoom - 5.0, 1.0);\r\n        const vertexCoordsLocation = gl.getAttribLocation(this._webgl.program, 'coords');\r\n        const vertexSizeLocation = gl.getAttribLocation(this._webgl.program, 'aPointSize');\r\n        const fragmentColorLocation = gl.getUniformLocation(this._webgl.program, \"u_color\");\r\n        const isPointLocation = gl.getUniformLocation(this._webgl.program, 'isPoint');\r\n\r\n        this.setMatrices(gl);\r\n        gl.vertexAttrib1f(vertexSizeLocation, pointSize);\r\n        gl.uniform1f(isPointLocation, 0.0);\r\n\r\n        let features = aes.getFeatures();\r\n        for (const f of features) {\r\n            let color;\r\n            const diff = f.getProperties()[this.gisplayOptions.attr];\r\n            if (diff === 0)\r\n                color = aes.fillColor(0.5).rgb();\r\n            else {\r\n                if (diff > 0)\r\n                    color = aes.fillColor(0.5 + diff / this.max / 2).rgb();\r\n                else\r\n                    color = aes.fillColor(0.5 - diff / this.min / 2).rgb();\r\n            }\r\n            let [r, g, b, a] = [Math.round(color[0]) / 255, Math.round(color[1]) / 255, Math.round(color[2]) / 255, this.gisplayOptions.alpha];\r\n            gl.uniform4f(fragmentColorLocation, r, g, b, a);\r\n\r\n            let triangles = f.getTriangles();\r\n            for (const t of triangles) {\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, t);\r\n                gl.enableVertexAttribArray(vertexCoordsLocation);\r\n                gl.vertexAttribPointer(vertexCoordsLocation, 2, gl.FLOAT, false, fsize * 2, 0);//gl.vertexAttribPointer(vertexColorLocation, 4, gl.FLOAT, false, fsize * 6, fsize * 2);\r\n                gl.drawArrays(gl.TRIANGLES, 0, t.numItems);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * M26) Receiving an Aesthetics object, draws the points contained in it's Features, \r\n     * aplying the values specified in that Aesthetic object visual variables (color and size).\r\n     * @param {Aesthetic} aes - The Aesthetic object.\r\n     * @returns {void}\r\n     * @memberOf Map\r\n     */\r\n    drawPoints(aes) {\r\n        const gl = this._webgl.gl;\r\n        if (gl === null)\r\n            return;\r\n\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n        const fsize = Float32Array.BYTES_PER_ELEMENT;\r\n        const currentZoom = this.bGMap.getZoom();\r\n        const pointSize = Math.max(currentZoom - 4.0 + aes.getPointSize(), aes.getPointSize());\r\n        const vertexCoordsLocation = gl.getAttribLocation(this._webgl.program, 'coords');\r\n        const vertexSizeLocation = gl.getAttribLocation(this._webgl.program, 'aPointSize');\r\n        const fragmentColorLocation = gl.getUniformLocation(this._webgl.program, \"u_color\");\r\n        const isPointLocation = gl.getUniformLocation(this._webgl.program, 'isPoint');\r\n        let [r, g, b, a] = aes.getFillColor();\r\n\r\n        this.setMatrices(gl); //Set M1, M2 and M3\r\n        gl.vertexAttrib1f(vertexSizeLocation, pointSize);\r\n        gl.uniform1f(isPointLocation, 1.0);\r\n        gl.uniform4f(fragmentColorLocation, r / 255, g / 255, b / 255, a);\r\n\r\n        let features = aes.getFeatures();\r\n        let allFeatures = aes.getAllFeatures();\r\n        if (this.gisplayOptions.isDynamic && aes.getFeatures().length > 0) {\r\n            for (const f of features) {\r\n                let points = f.getPoints();\r\n                for (const p of points) {\r\n                    gl.bindBuffer(gl.ARRAY_BUFFER, p);\r\n                    gl.enableVertexAttribArray(vertexCoordsLocation);\r\n                    gl.vertexAttribPointer(vertexCoordsLocation, 2, gl.FLOAT, false, fsize * 2, 0);\r\n                    gl.drawArrays(gl.POINTS, 0, p.numItems);\r\n                }\r\n            }\r\n        }\r\n        else if (allFeatures !== null && !this.gisplayOptions.isDynamic) {\r\n            for (const allF of allFeatures) {\r\n                let points = allF.getPoints();\r\n                for (const p of points) {\r\n                    gl.bindBuffer(gl.ARRAY_BUFFER, p);\r\n                    gl.enableVertexAttribArray(vertexCoordsLocation);\r\n                    gl.vertexAttribPointer(vertexCoordsLocation, 2, gl.FLOAT, false, fsize * 2, 0);\r\n                    gl.drawArrays(gl.POINTS, 0, p.numItems);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * M27) Receiving an Aesthetics object, draws the points contained in it's Features, \r\n     * aplying the color specified in the Aeshteic object for the line color(Aeshteic.strokeColor) \r\n     * and the size of the point is based on the attribute value and the specified limits.\r\n     * @param {Aesthetic} aes - The Aesthetic object. \r\n     * @returns {void} \r\n     * @memberOf Map\r\n     */\r\n    drawProportionalPoints(aes) {\r\n        const gl = this._webgl.gl;\r\n        if (gl === null)\r\n            return;\r\n\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n        const currentZoom = this.bGMap.getZoom();\r\n        const vertexCoordsLocation = gl.getAttribLocation(this._webgl.program, 'coords');\r\n        const vertexSizeLocation = gl.getAttribLocation(this._webgl.program, 'aPointSize');\r\n        const fragmentColorLocation = gl.getUniformLocation(this._webgl.program, \"u_color\");\r\n        const isPointLocation = gl.getUniformLocation(this._webgl.program, 'isPoint');\r\n        let [r, g, b] = aes.getFillColor();\r\n\r\n        this.setMatrices(gl);\r\n        gl.uniform1f(isPointLocation, 1.0);\r\n        gl.uniform4f(fragmentColorLocation, r / 255, g / 255, b / 255, this.gisplayOptions.alpha); //TODO: Para 2.5D usar alpha a 0?\r\n\r\n        const fsize = Float32Array.BYTES_PER_ELEMENT;\r\n        let opts = this.gisplayOptions;\r\n        if (this.gisplayOptions.isDynamic) {\r\n            let features = aes.getFeatures();\r\n            for (const f of features) {\r\n                const propvalue = parseFloat(f.getProperties()[opts.attr]);\r\n                const temppointsize = ((opts.maxPointSize - opts.minPointSize) / (this.max - this.min)) * (propvalue - this.min);\r\n                const pointSize = Math.max(currentZoom - 4.0 + temppointsize * currentZoom / 4, 2);\r\n\r\n                let points = f.getPoints();\r\n                for (let p of points) {\r\n                    gl.bindBuffer(gl.ARRAY_BUFFER, p);\r\n                    gl.vertexAttrib1f(vertexSizeLocation, pointSize);\r\n                    gl.enableVertexAttribArray(vertexCoordsLocation);\r\n                    gl.vertexAttribPointer(vertexCoordsLocation, 2, gl.FLOAT, false, fsize * 2, 0);\r\n                    gl.drawArrays(gl.POINTS, 0, p.numItems);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method will set all matrices needed to compute each point/vertex position. This will use the \r\n     * Before sending the matrix to webGL we change the last column transformation in X and Y to the last row X and Y \r\n     * because WebGL is column major. See MMatrix[6] =...\r\n     * @memberOf Map\r\n     */\r\n    setMatrices(gl) {\r\n        let lngCenter = this.bGMap.getCenterLng();\r\n        let latCenter = this.bGMap.getCenterLat();\r\n        let zoom = this.bGMap.getZoom();\r\n        let tileSize = this.gisplayOptions.tileSize;\r\n        let width = this.bGMap.getWidth();\r\n        let height = this.bGMap.getHeight();\r\n        /* if(window.first){\r\n             console.log(\"HERE\")\r\n             width = 2432;\r\n         }*/\r\n        let mercator = WebGLUtils.webMercatorProjection(lngCenter, latCenter, zoom, tileSize, width, height);\r\n      /*  let M1Matrix = WebGLUtils.createM1(this._webgl.gl.drawingBufferWidth, this._webgl.gl.drawingBufferHeight); //TODO: This does not solve the resizing issue 100%.\r\n        let M2Matrix = WebGLUtils.createM2(mercator.scale, mercator.offsetX, mercator.offsetY);\r\n        let M3Matrix = WebGLUtils.createM3();\r\n\r\n        let M1xM2 = WebGLUtils.matrixMultiplication(M1Matrix, M2Matrix);\r\n        let MMatrix = WebGLUtils.matrixMultiplication(M1xM2, M3Matrix);\r\n        MMatrix[6] = MMatrix[2];\r\n        MMatrix[7] = MMatrix[5];\r\n        MMatrix[2] = 0;\r\n        MMatrix[5] = 0;*/\r\n        let MMatrix = WebGLUtils.finalMatrix(mercator.scale, width, height, mercator.offsetX, mercator.offsetY);\r\n        const Mloc = gl.getUniformLocation(this._webgl.program, 'M')\r\n        gl.uniformMatrix3fv(Mloc, false, MMatrix);\r\n    }\r\n\r\n    /**\r\n     * M28) Scale matrix with the given x(scaleX) and y(scaleY) values.\r\n     * Scaling x and y, which is just scaling first two rows of matrix\r\n     * @param {Float32Array} matrix \r\n     * @param {number} scaleX - Scale in X axis.\r\n     * @param {number} scaleY - Scale in Y axis.\r\n     * @see http://www.c-jump.com/bcc/common/Talk3/Math/Matrices/const_images/applying_scaling.png\r\n     * @see http://ptgmedia.pearsoncmg.com/images/chap3_9780321902924/elementLinks/03fig27.jpg Remember WebGL is Column major\r\n     * @see http://prntscr.com/eononb\r\n     * @memberOf Map\r\n     */\r\n    scaleProjection(matrix, scaleX, scaleY) {\r\n        for (let i = 0; i < 8; i++)\r\n            i < 4 ? (matrix[i] *= scaleX) : (matrix[i] *= scaleY);\r\n    }\r\n\r\n    /**\r\n     * M29) The translation is performed in the last row of the matrix. \r\n     * @param {Float32Array} matrix - The matrix to hold the result.\r\n     * @param {number} tx - Translation in X axis.  \r\n     * @param {number} ty - Translation in Y axis.\r\n     * @see http://polymathprogrammer.com/images/blog/200809/translationmatrix.png\r\n     * @see http://prntscr.com/eononb\r\n     * @memberOf Map\r\n     */\r\n    translateProjection(matrix, tx, ty) {\r\n        for (let i = 0; i < 4; i++)\r\n            matrix[i + 12] += (matrix[i] * tx) + (matrix[i + 4] * ty);\r\n    }\r\n\r\n    /** ########################    ABSTRACT METHODS    ######################## */\r\n    /**\r\n     * M21) Draw map function. Must be overriden by subclasses.\r\n     * @abstract \r\n     */\r\n    draw() {\r\n        throw new Error(\"Draw must be implemented by subclass.\");\r\n    }\r\n\r\n    /**\r\n     * M10) Defaults for each map. Subclasses should override this method.\r\n     * @param {any} defaultId \r\n     * @abstract \r\n     * @memberOf Map\r\n     */\r\n    defaults(defaultId) {\r\n        throw new Error(\"This map has no defaults defined.\");\r\n    }\r\n\r\n    /**\r\n     * This function should be implemented by any subclass that wants to use another way of processing data.\r\n     * By default it loads GeoJSON but if the user wants to load another type of data it should do so by implementing this method.\r\n     * A function similar to loadGeoJSON should also be implemented\r\n     * @param {Object|JSON} data - Dataset to be used. \r\n     * TODO: Add static to this method.\r\n     * @abstract\r\n     */\r\n    processData(data) {\r\n        this.loadGeoJSON(geojson);\r\n    }\r\n}",
    "static": true,
    "longname": "src/Gisplay/Maps/Map.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 132,
    "kind": "class",
    "name": "Map",
    "memberof": "src/Gisplay/Maps/Map.js",
    "static": true,
    "longname": "src/Gisplay/Maps/Map.js~Map",
    "access": null,
    "export": true,
    "importPath": "gisplay-es6-webpack/src/Gisplay/Maps/Map.js",
    "importStyle": "{Map}",
    "description": "This class contains the Map class which represents the current map.\nEach map has a group of functions available. There is only one map yet(maybe there will be two if we want to compare two).",
    "see": [
      "Diogo's thesis 57-60 + 64/65"
    ],
    "lineNumber": 11,
    "interface": false
  },
  {
    "__docId__": 133,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#constructor",
    "access": null,
    "description": "Map constructor. All Map subclasses should call this first with super(...).",
    "lineNumber": 20,
    "todo": [
      "With the type of the map we can do an if statement inside constructor to use or not some of the variables."
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "BGMapWrapper",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "bgmap",
        "description": "Background map."
      },
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "geometry",
        "description": "Geometry read from the file."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "userOptions",
        "description": "The user defined options."
      }
    ]
  },
  {
    "__docId__": 134,
    "kind": "member",
    "name": "treepoints",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#treepoints",
    "access": null,
    "description": "This object holds for each point it's long, lat and associated properties. \nThis points will be used by k-d Tree. And k-d Tree is used to find the closest point to where the user clicked.",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "Array<{lon: number, lat: number, properties: JSON}>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 135,
    "kind": "member",
    "name": "tempAestheticPoints",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#tempAestheticPoints",
    "access": null,
    "description": "Holds the points for each Aesthethic object.",
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "Array<Array<number>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 136,
    "kind": "member",
    "name": "aesthetics",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#aesthetics",
    "access": null,
    "description": "Aesthetic objects that were saved.",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "Array<Aesthetic>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 137,
    "kind": "member",
    "name": "geometry",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#geometry",
    "access": null,
    "description": "JSON object with the geometry that was read from the file.",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "JSON"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 138,
    "kind": "member",
    "name": "id",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#id",
    "access": null,
    "description": "This map unique identifier.",
    "lineNumber": 51,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 139,
    "kind": "member",
    "name": "kdtree",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#kdtree",
    "access": null,
    "description": "KdTree object to hold that will be used to calculate the closest point to the coordinates where the user made a click.",
    "see": [
      "Diogo's thesis Page 61.",
      "https://github.com/ubilabs/kd-tree-javascript"
    ],
    "lineNumber": 59,
    "type": {
      "nullable": null,
      "types": [
        "kdTree"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 140,
    "kind": "member",
    "name": "rtree",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#rtree",
    "access": null,
    "description": "RBush(Rtree implementation) that is used to calculate the polygon closest to the coordinates where the user made a click.",
    "see": [
      "Diogo's thesis page 61.",
      "https://github.com/pelias/polygon-lookup",
      "https://github.com/mourner/rbush"
    ],
    "lineNumber": 67,
    "type": {
      "nullable": null,
      "types": [
        "PolygonLookup"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 141,
    "kind": "member",
    "name": "hasPolygons",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#hasPolygons",
    "access": null,
    "description": "Polygons do/do not exist. This is used to know if it to create a rtree or not on buildTrees method.",
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 142,
    "kind": "member",
    "name": "max",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#max",
    "access": null,
    "description": "This is the maixmum value found on the dataset. The final value for the break. E.g. [2, 37[ 37 is the max. \nUsed for PSymbol Map and Change Map because on those maps it's important to take in consideration this values to define the Feature color.",
    "see": [
      "Diogo's thesis page 63 5.1.3 "
    ],
    "lineNumber": 80,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 143,
    "kind": "member",
    "name": "min",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#min",
    "access": null,
    "description": "This is the minimum value found on the dataset. The initial value for the break. E.g. [2, 37[ 2 is the min.\nUsed for PSymbol Map and Change Map because on those maps it's important to take in consideration this values to define the Feature color.",
    "see": [
      "Diogo's thesis page 63 5.1.3"
    ],
    "lineNumber": 87,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 144,
    "kind": "method",
    "name": "loadOptions",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#loadOptions",
    "access": null,
    "description": "M1) Loads user and default options. For each case if it isn't provided by the user, then it uses\nthe default option. 1st method to be called.",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "userOptions",
        "description": "Options given by the user."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "bgmap",
        "description": "The background map provider."
      }
    ]
  },
  {
    "__docId__": 145,
    "kind": "member",
    "name": "gisplayOptions",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#gisplayOptions",
    "access": null,
    "description": "All the options available in the Gisplay API.",
    "lineNumber": 101,
    "type": {
      "nullable": null,
      "types": [
        "GisplayOptions"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 146,
    "kind": "member",
    "name": "bGMap",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#bGMap",
    "access": null,
    "description": "This is the Gisplay API Background map wrapper. It contains the background map provider object to access it's methods (zoom, coordinates,etc).\nThis map(Gisplay Map) will  be drawn over the background map(bGMap).",
    "lineNumber": 108,
    "type": {
      "nullable": null,
      "types": [
        "BGMapWrapper"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 147,
    "kind": "method",
    "name": "showLoader",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#showLoader",
    "access": null,
    "description": "M2) Calls the Background Map Wrapper to create the loader to be used later when the user feeds data to the API.",
    "lineNumber": 117,
    "deprecated": "Not used anymore",
    "params": []
  },
  {
    "__docId__": 148,
    "kind": "method",
    "name": "initializeCanvasAndEvents",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#initializeCanvasAndEvents",
    "access": null,
    "description": "M3) Initializes the API by: creating canvas, the WebGL program and setting up all needed events.",
    "lineNumber": 125,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "createCanvas",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#createCanvas",
    "access": null,
    "description": "M4) Creates a canvas element and WebGL associated information.",
    "lineNumber": 134,
    "params": []
  },
  {
    "__docId__": 150,
    "kind": "member",
    "name": "_webgl",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#_webgl",
    "access": null,
    "description": "",
    "see": [
      "Diogo's thesis page 64+"
    ],
    "lineNumber": 144,
    "properties": [
      {
        "nullable": null,
        "types": [
          "WebGLRenderingContext"
        ],
        "spread": false,
        "optional": false,
        "name": "_webgl.gl",
        "description": "The WebGLRenderingContext to be used."
      },
      {
        "nullable": null,
        "types": [
          "WebGLProgram"
        ],
        "spread": false,
        "optional": false,
        "name": "_webgl.program",
        "description": "The WebGLProgram to be used."
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "_webgl.projection",
        "description": "The projection to be used. Deprecated in favor of better projection to work with multiple map background providers."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 151,
    "kind": "method",
    "name": "setupEvents",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#setupEvents",
    "access": null,
    "description": "M8) Setup all events used by the API. Right now the API uses: drag, zoom and click events. \nThis events will be fired by the background map provider and we can use them to draw(zoom and pan) or alert information(click).\nPan/Zoom = move, click = click\nrtree will be used to find the closest polygon to the where the clicked event happened.\nkdtree will be used to find the closest point to where the click event happened.",
    "see": [
      "https://www.mapbox.com/mapbox-gl-js/api/#events",
      "http://stackoverflow.com/a/34349737"
    ],
    "lineNumber": 167,
    "todo": [
      "This method is doing uneccessary job if the user set interative to false and mapOnClickFunction is undefined."
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "mappos",
        "description": "This map id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 152,
    "kind": "method",
    "name": "searchRTree",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#searchRTree",
    "access": null,
    "description": "Search the rtree for the closest polygon from the lng, lat that was clicked.",
    "lineNumber": 199,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      },
      {
        "tagName": "@memberOf",
        "tagValue": "Map"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lng",
        "description": "The longitude of the click."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lat",
        "description": "The latitude of the click."
      }
    ]
  },
  {
    "__docId__": 153,
    "kind": "method",
    "name": "searchKdTree",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#searchKdTree",
    "access": null,
    "description": "Search the rtree for the closest point from the lng, lat that was clicked. ",
    "lineNumber": 235,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      },
      {
        "tagName": "@memberOf",
        "tagValue": "Map"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lon",
        "description": "The longitude of the click."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lat",
        "description": "The latitude of the click."
      }
    ]
  },
  {
    "__docId__": 154,
    "kind": "method",
    "name": "makeMap",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#makeMap",
    "access": null,
    "description": "M9) Method that executes all the process associated with the creation of the thematic map.",
    "lineNumber": 272,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Map"
      }
    ],
    "params": []
  },
  {
    "__docId__": 155,
    "kind": "method",
    "name": "preProcessData",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#preProcessData",
    "access": null,
    "description": "M11) Creates Aesthetic objects. If there's the need to calculate the class intervals,\nthe method calcClassBreaks is called ",
    "lineNumber": 302,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Map"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "geojson",
        "description": "GeoJSON object."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "numberOfClasses",
        "description": "Number of classes that the Legend will contain."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "classBreaksMethod",
        "description": "Algorithm to be used to calculate class breaks. Only used it class breaks are not given by the user."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "colorscheme",
        "description": "Color scheme to be used by this map."
      }
    ]
  },
  {
    "__docId__": 156,
    "kind": "member",
    "name": "max",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#max",
    "access": null,
    "description": null,
    "lineNumber": 318,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 157,
    "kind": "member",
    "name": "min",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#min",
    "access": null,
    "description": null,
    "lineNumber": 319,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 158,
    "kind": "member",
    "name": "aesthetics",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#aesthetics",
    "access": null,
    "description": "All the Aesthetics that were read from the GeoJSON file.",
    "lineNumber": 376,
    "type": {
      "nullable": null,
      "types": [
        "Array<Aesthetic>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 159,
    "kind": "method",
    "name": "calcClassBreaks",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#calcClassBreaks",
    "access": null,
    "description": "M12) Calculates the class breaks using the algorithm given(k-means, quantile or equidistant). \nThere will be as many class breaks as number of classes(numberOfClasses) given as input. ",
    "see": [
      "http://gka.github.io/chroma.js/#chroma-limits"
    ],
    "lineNumber": 389,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number[]} - The class breaks resulting from the use of the given algorithm and the number of classes."
      },
      {
        "tagName": "@memberOf",
        "tagValue": "Map"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "numberValues",
        "description": "The data values that will be used to be compute the breaks."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "classBreakMethod",
        "description": "The algorithm to use to calculate the class breaks."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "numberOfClasses",
        "description": "Number of classes the result expects."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number[]"
      ],
      "spread": false,
      "description": "The class breaks resulting from the use of the given algorithm and the number of classes."
    }
  },
  {
    "__docId__": 160,
    "kind": "method",
    "name": "loadGeoJSON",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#loadGeoJSON",
    "access": null,
    "description": "M13) Loads GeoJSON object that came from the file uploaded by the user. \nExtracts the Features present in the geometry object and inserts them in Aesthetic object(s)\nThis method will create and insert features to Aesthetic objects and build trees of relationships between points or polygons.",
    "see": [
      "https://www.dashingd3js.com/lessons/geojson"
    ],
    "lineNumber": 419,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Map"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "geojson",
        "description": "GeoJSON read from the file."
      }
    ]
  },
  {
    "__docId__": 161,
    "kind": "method",
    "name": "createAndInsertFeature",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#createAndInsertFeature",
    "access": null,
    "description": "M14) Creates a Feature and then calls a method to insert said Feature in one or more Aesthetic objects.",
    "see": [
      "http://geojson.org/geojson-spec.html#geometry-objects"
    ],
    "lineNumber": 437,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Map"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "featureId",
        "description": "Id of the Feature."
      },
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "geometry",
        "description": "GeoJSON Geometry Object."
      },
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "properties",
        "description": "GeoJSON properties Object."
      }
    ]
  },
  {
    "__docId__": 162,
    "kind": "member",
    "name": "hasPolygons",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#hasPolygons",
    "access": null,
    "description": null,
    "lineNumber": 451,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 163,
    "kind": "method",
    "name": "processPolygon",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#processPolygon",
    "access": null,
    "description": "M15) Deals with polygon triangulation.",
    "see": [
      "http://www.macwright.org/2015/03/23/geojson-second-bite.html#polygons"
    ],
    "lineNumber": 538,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{triangles: Array<number>, vertices: Array<number>}} - The triangles and vertices calculated by earcut triangulation. The vertices are the outside of the polygon, the triangles are the inside."
      },
      {
        "tagName": "@memberOf",
        "tagValue": "Map"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{geometry: JSON, properties: JSON}"
        ],
        "spread": false,
        "optional": false,
        "name": "polygon",
        "description": "The geometry and properties of the polygon."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{triangles: Array<number>, vertices: Array<number>}"
      ],
      "spread": false,
      "description": "The triangles and vertices calculated by earcut triangulation. The vertices are the outside of the polygon, the triangles are the inside."
    }
  },
  {
    "__docId__": 164,
    "kind": "method",
    "name": "latLongToPixelXY",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#latLongToPixelXY",
    "access": null,
    "description": "M16) Converts geographic coordinates(latitude, longitude) to canvas coordinate pixels.",
    "see": [
      "http://gisgeography.com/latitude-longitude-coordinates/",
      "https://www.w3schools.com/graphics/canvas_coordinates.asp"
    ],
    "lineNumber": 571,
    "deprecated": "Not used anymore. YEAH...",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{x: number, y: number} - canvas coordinate system pixels."
      },
      {
        "tagName": "@memberOf",
        "tagValue": "Map"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "longitude",
        "description": "The longitude."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "latitude",
        "description": "The latitude."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "x: number, y: number"
      ],
      "spread": false,
      "description": "canvas coordinate system pixels."
    }
  },
  {
    "__docId__": 165,
    "kind": "method",
    "name": "insertFeature",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#insertFeature",
    "access": null,
    "description": "M17) Inserts the Feature into one or more Aesthetic objects. If the Feature does not fit in any Aesthetic then does nothing.",
    "lineNumber": 592,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Map"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The Feature id."
      },
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "properties",
        "description": "The Feature properties."
      },
      {
        "nullable": null,
        "types": [
          "{itemSize: number, numItems: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "triangles",
        "description": "Triangles, each in one WebGLBuffer."
      },
      {
        "nullable": null,
        "types": [
          "{itemSize: number, numItems: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "borders",
        "description": "Borders, each in one WebGLBuffer."
      },
      {
        "nullable": null,
        "types": [
          "{itemSize: number, numItems: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "points",
        "description": "Points, each in one WebGLBuffer."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 166,
    "kind": "method",
    "name": "fitFeature",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#fitFeature",
    "access": null,
    "description": "M18) Returns an array of Aesthetic ids that tells us the objects where the Feature belongs.",
    "lineNumber": 607,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<number>} - The Aesthetic ids where the Feature belongs."
      },
      {
        "tagName": "@memberOf",
        "tagValue": "Map"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "properties",
        "description": "The Feature properties"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<number>"
      ],
      "spread": false,
      "description": "The Aesthetic ids where the Feature belongs."
    }
  },
  {
    "__docId__": 167,
    "kind": "method",
    "name": "buildTrees",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#buildTrees",
    "access": null,
    "description": "M19) Receives the dataset as parameter. This dataset in each row contains geometry and associated properties, then it creates one tree\neither for points or polygons. This tree can be k-d Treee or RBush(RTree)",
    "see": [
      "Diogo's thesis page 62"
    ],
    "lineNumber": 623,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Map"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "geojson",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 168,
    "kind": "member",
    "name": "kdtree",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#kdtree",
    "access": null,
    "description": null,
    "lineNumber": 642,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 169,
    "kind": "member",
    "name": "rtree",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#rtree",
    "access": null,
    "description": null,
    "lineNumber": 644,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 170,
    "kind": "method",
    "name": "insertGroupedFeature",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#insertGroupedFeature",
    "access": null,
    "description": "M20) Similar to insertFeature, in this case inserts a group of Features like it was only one.\nIt creates one WebGLBuffer with all the points instead of one WebGLBuffer per point.\nThis method should only be used when we already grouped the Features by Aesthetic class (fitFeature() method).\nThis method exists to provide one alternative less expensive in terms of memory for low end devices.\nUsed only on Dot Map because on those we can easily end up with millions of different Features.",
    "lineNumber": 659,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Map"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Aesthethics id."
      },
      {
        "nullable": null,
        "types": [
          "{itemSize: number, numItems: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "triangles",
        "description": "Not used ?"
      },
      {
        "nullable": null,
        "types": [
          "{itemSize: number, numItems: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "borders",
        "description": "Not used ?"
      },
      {
        "nullable": null,
        "types": [
          "{itemSize: number, numItems: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "points",
        "description": "All the points for the Aesthethic object in one WebGLBuffer."
      }
    ]
  },
  {
    "__docId__": 171,
    "kind": "method",
    "name": "buildLegend",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#buildLegend",
    "access": null,
    "description": "M17) Creates a Legend element suitable for polygons based on the Aesthethic objects.\nShould be overriden by subclasses.",
    "lineNumber": 671,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Map"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true
  },
  {
    "__docId__": 172,
    "kind": "method",
    "name": "clear",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#clear",
    "access": null,
    "description": "M22) Clear current buffers to preset values.",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/clear"
    ],
    "lineNumber": 727,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Map"
      }
    ],
    "params": []
  },
  {
    "__docId__": 173,
    "kind": "method",
    "name": "drawTriangles",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#drawTriangles",
    "access": null,
    "description": "M23) Receiving an Aesthetics object, draws the triangles contained in it's Features,\nusing the color that the Aesthethics object has.",
    "see": [
      "Diogo's thesis Page 58/59"
    ],
    "lineNumber": 741,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "Map"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Aesthetic"
        ],
        "spread": false,
        "optional": false,
        "name": "aes",
        "description": "The Aesthetic object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 174,
    "kind": "method",
    "name": "drawBorders",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#drawBorders",
    "access": null,
    "description": "M24) Receiving an Aesthetics object, draws the borders contained in it's Features, \naplying the color specified in the Aeshteic object for the line color(Aeshteic.strokeColor).",
    "lineNumber": 779,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "Map"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Aesthetic"
        ],
        "spread": false,
        "optional": false,
        "name": "aes",
        "description": "The Aesthetic object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 175,
    "kind": "method",
    "name": "drawContinuousPolygons",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#drawContinuousPolygons",
    "access": null,
    "description": "M25) Receiving an Aesthetics object, draws the borders contained in it's Features, \naplying the filling color calculated using the attribute and the color scheme.",
    "lineNumber": 820,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "Map"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Aesthetic"
        ],
        "spread": false,
        "optional": false,
        "name": "aes",
        "description": "The Aesthetic object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "drawPoints",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#drawPoints",
    "access": null,
    "description": "M26) Receiving an Aesthetics object, draws the points contained in it's Features, \naplying the values specified in that Aesthetic object visual variables (color and size).",
    "lineNumber": 869,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "Map"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Aesthetic"
        ],
        "spread": false,
        "optional": false,
        "name": "aes",
        "description": "The Aesthetic object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 177,
    "kind": "method",
    "name": "drawProportionalPoints",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#drawProportionalPoints",
    "access": null,
    "description": "M27) Receiving an Aesthetics object, draws the points contained in it's Features, \naplying the color specified in the Aeshteic object for the line color(Aeshteic.strokeColor) \nand the size of the point is based on the attribute value and the specified limits.",
    "lineNumber": 925,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void} "
      },
      {
        "tagName": "@memberOf",
        "tagValue": "Map"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Aesthetic"
        ],
        "spread": false,
        "optional": false,
        "name": "aes",
        "description": "The Aesthetic object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 178,
    "kind": "method",
    "name": "setMatrices",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#setMatrices",
    "access": null,
    "description": "This method will set all matrices needed to compute each point/vertex position. This will use the \nBefore sending the matrix to webGL we change the last column transformation in X and Y to the last row X and Y \nbecause WebGL is column major. See MMatrix[6] =...",
    "lineNumber": 971,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Map"
      }
    ],
    "params": [
      {
        "name": "gl",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 179,
    "kind": "method",
    "name": "scaleProjection",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#scaleProjection",
    "access": null,
    "description": "M28) Scale matrix with the given x(scaleX) and y(scaleY) values.\nScaling x and y, which is just scaling first two rows of matrix",
    "see": [
      "http://www.c-jump.com/bcc/common/Talk3/Math/Matrices/const_images/applying_scaling.png",
      "http://ptgmedia.pearsoncmg.com/images/chap3_9780321902924/elementLinks/03fig27.jpg Remember WebGL is Column major",
      "http://prntscr.com/eononb"
    ],
    "lineNumber": 1009,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Map"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "matrix",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "scaleX",
        "description": "Scale in X axis."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "scaleY",
        "description": "Scale in Y axis."
      }
    ]
  },
  {
    "__docId__": 180,
    "kind": "method",
    "name": "translateProjection",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#translateProjection",
    "access": null,
    "description": "M29) The translation is performed in the last row of the matrix. ",
    "see": [
      "http://polymathprogrammer.com/images/blog/200809/translationmatrix.png",
      "http://prntscr.com/eononb"
    ],
    "lineNumber": 1023,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Map"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "matrix",
        "description": "The matrix to hold the result."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "tx",
        "description": "Translation in X axis."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ty",
        "description": "Translation in Y axis."
      }
    ]
  },
  {
    "__docId__": 181,
    "kind": "method",
    "name": "draw",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#draw",
    "access": null,
    "description": "M21) Draw map function. Must be overriden by subclasses.",
    "lineNumber": 1033,
    "params": [],
    "abstract": true
  },
  {
    "__docId__": 182,
    "kind": "method",
    "name": "defaults",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#defaults",
    "access": null,
    "description": "M10) Defaults for each map. Subclasses should override this method.",
    "lineNumber": 1043,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Map"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultId",
        "description": ""
      }
    ],
    "abstract": true
  },
  {
    "__docId__": 183,
    "kind": "method",
    "name": "processData",
    "memberof": "src/Gisplay/Maps/Map.js~Map",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Map.js~Map#processData",
    "access": null,
    "description": "This function should be implemented by any subclass that wants to use another way of processing data.\nBy default it loads GeoJSON but if the user wants to load another type of data it should do so by implementing this method.\nA function similar to loadGeoJSON should also be implemented",
    "lineNumber": 1055,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object",
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Dataset to be used. \nTODO: Add static to this method."
      }
    ],
    "abstract": true
  },
  {
    "__docId__": 184,
    "kind": "file",
    "name": "src/Gisplay/Maps/Types/ChangeMap.js",
    "content": "import { Map } from '../Map';\r\nimport { Legend } from '../Legend';\r\nimport { Aesthetic } from '../Aesthetic';\r\n\r\n/**\r\n * ChangeMap implementation 07/03\r\n */\r\nexport class ChangeMap extends Map {\r\n\r\n    /**\r\n     * Creates an instance of ChangeMap.\r\n     * @param {BGMapWrapper} bgmap - Background map object.\r\n     * @param {JSON} geometry - JSON object with the geometry that was read from the file.\r\n     * @param {Object} options - User options to be used.\r\n     * @memberOf ChangeMap\r\n     */\r\n    constructor(bgmap, geometry, options) {\r\n        super(bgmap, geometry, options);\r\n        options.attr = \"change\"; //this.gisplayOptions.attr = \"change\"; // this.type = 'CM'; //window.maps.push(this);\r\n        this.loadOptions(options, bgmap);\r\n        this.initializeCanvasAndEvents();\r\n    }\r\n\r\n    /**\r\n     * Draw Change map, at the beginning and when the map is moved.\r\n     * @see initialize() and makeMap() methods.\r\n     * @override \r\n     * @memberOf ChangeMap\r\n     */\r\n    draw() {\r\n        this.clear();\r\n        for (const aes of this.aesthetics) {\r\n            if (aes.isEnabled())\r\n                this.drawContinuousPolygons(aes);\r\n            this.drawBorders(aes);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Process data loaded by the user. This mothed overrides the parent(Map class) default processData method.\r\n     * @param {JSON} geojson - GeoJSON object.\r\n     * @param {number} numberOfClasses - Number of classes that the Legend will contain.\r\n     * @param {string} classBreaksMethod - Algorithm to be used to calculate class breaks. Only used it class breaks are not given by the user.\r\n     * @param {string[]} colorscheme - Color scheme to be used by this map.\r\n     * @override \r\n     * @memberOf ChangeMap\r\n     */\r\n    preProcessData(geojson, numberOfClasses, classBreaksMethod, colorscheme) {\r\n        let opts = this.gisplayOptions;\r\n        let gjonFeatures = geojson.features;\r\n        for (let i = 0; i < gjonFeatures.length && i < opts.maxFeatures; i++) {\r\n            let gjsonMinuend = gjonFeatures[i].properties[opts.minuend];\r\n            let gjsonSubtrahend = gjonFeatures[i].properties[opts.subtrahend];\r\n            if (typeof gjsonMinuend === 'number' && typeof gjsonSubtrahend === 'number') { //  && gjonminuend != null && gjonSubtrahend != null\r\n                this.max = Math.max(this.max, gjsonMinuend - gjsonSubtrahend);\r\n                this.min = Math.min(this.min, gjsonMinuend - gjsonSubtrahend);\r\n            }\r\n        }\r\n\r\n        let breaks = [this.min, this.max];\r\n        /**\r\n         * The color to fill the Aesthetic element(RGBA) OR a function to create this color.\r\n         * @type {number[]}\r\n         */\r\n        this.fcolor = chroma.scale(colorscheme);\r\n        const aes = new Aesthetic(0, opts.attr, this.fcolor, [0, 0, 0, 1], null, [breaks[0], breaks[1]]);\r\n        aes.outer = true;\r\n        /**\r\n         * Aesthetic object. In the case of a Change Map only one Aesthetic exists.\r\n         * @type {Array<Aesthetic>}\r\n         */\r\n        this.aesthetics = [aes];\r\n    }\r\n\r\n    /**\r\n     * Method called to build the Map Legend.\r\n     * Create a gradient and insert legend onto background map.\r\n     * @override \r\n     * @memberOf ChangeMap\r\n     */\r\n    buildLegend() {\r\n        /**\r\n         * The Legend to be used through the life of the map.\r\n         * @type {Legend} \r\n         */\r\n        this.legend = new Legend(this.id, this.gisplayOptions.legendTitle);\r\n        this.legend.insertGradient(this, this.min, 0, this.max);\r\n        this.legend.insertLegend(this.bGMap);\r\n    }\r\n\r\n    /**\r\n     * Returns empty object.\r\n     * @param {number} defaultColorSchemeId - The id of the default color scheme to choose the colors.\r\n     * @override \r\n     * @memberOf ChangeMap\r\n     */\r\n    defaults(defaultColorSchemeId) {\r\n        return {};\r\n    }\r\n}",
    "static": true,
    "longname": "src/Gisplay/Maps/Types/ChangeMap.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 185,
    "kind": "class",
    "name": "ChangeMap",
    "memberof": "src/Gisplay/Maps/Types/ChangeMap.js",
    "static": true,
    "longname": "src/Gisplay/Maps/Types/ChangeMap.js~ChangeMap",
    "access": null,
    "export": true,
    "importPath": "gisplay-es6-webpack/src/Gisplay/Maps/Types/ChangeMap.js",
    "importStyle": "{ChangeMap}",
    "description": "ChangeMap implementation 07/03",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "src/Gisplay/Maps/Map.js~Map"
    ]
  },
  {
    "__docId__": 186,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Gisplay/Maps/Types/ChangeMap.js~ChangeMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Types/ChangeMap.js~ChangeMap#constructor",
    "access": null,
    "description": "Creates an instance of ChangeMap.",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "ChangeMap"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "BGMapWrapper"
        ],
        "spread": false,
        "optional": false,
        "name": "bgmap",
        "description": "Background map object."
      },
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "geometry",
        "description": "JSON object with the geometry that was read from the file."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "User options to be used."
      }
    ]
  },
  {
    "__docId__": 187,
    "kind": "method",
    "name": "draw",
    "memberof": "src/Gisplay/Maps/Types/ChangeMap.js~ChangeMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Types/ChangeMap.js~ChangeMap#draw",
    "access": null,
    "description": "Draw Change map, at the beginning and when the map is moved.",
    "see": [
      "initialize() and makeMap() methods."
    ],
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "ChangeMap"
      }
    ],
    "params": [],
    "override": true
  },
  {
    "__docId__": 188,
    "kind": "method",
    "name": "preProcessData",
    "memberof": "src/Gisplay/Maps/Types/ChangeMap.js~ChangeMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Types/ChangeMap.js~ChangeMap#preProcessData",
    "access": null,
    "description": "Process data loaded by the user. This mothed overrides the parent(Map class) default processData method.",
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "ChangeMap"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "geojson",
        "description": "GeoJSON object."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "numberOfClasses",
        "description": "Number of classes that the Legend will contain."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "classBreaksMethod",
        "description": "Algorithm to be used to calculate class breaks. Only used it class breaks are not given by the user."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "colorscheme",
        "description": "Color scheme to be used by this map."
      }
    ],
    "override": true
  },
  {
    "__docId__": 189,
    "kind": "member",
    "name": "max",
    "memberof": "src/Gisplay/Maps/Types/ChangeMap.js~ChangeMap",
    "static": false,
    "longname": "src/Gisplay/Maps/Types/ChangeMap.js~ChangeMap#max",
    "access": null,
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 190,
    "kind": "member",
    "name": "min",
    "memberof": "src/Gisplay/Maps/Types/ChangeMap.js~ChangeMap",
    "static": false,
    "longname": "src/Gisplay/Maps/Types/ChangeMap.js~ChangeMap#min",
    "access": null,
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 191,
    "kind": "member",
    "name": "fcolor",
    "memberof": "src/Gisplay/Maps/Types/ChangeMap.js~ChangeMap",
    "static": false,
    "longname": "src/Gisplay/Maps/Types/ChangeMap.js~ChangeMap#fcolor",
    "access": null,
    "description": "The color to fill the Aesthetic element(RGBA) OR a function to create this color.",
    "lineNumber": 65,
    "type": {
      "nullable": null,
      "types": [
        "number[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 192,
    "kind": "member",
    "name": "aesthetics",
    "memberof": "src/Gisplay/Maps/Types/ChangeMap.js~ChangeMap",
    "static": false,
    "longname": "src/Gisplay/Maps/Types/ChangeMap.js~ChangeMap#aesthetics",
    "access": null,
    "description": "Aesthetic object. In the case of a Change Map only one Aesthetic exists.",
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "Array<Aesthetic>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 193,
    "kind": "method",
    "name": "buildLegend",
    "memberof": "src/Gisplay/Maps/Types/ChangeMap.js~ChangeMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Types/ChangeMap.js~ChangeMap#buildLegend",
    "access": null,
    "description": "Method called to build the Map Legend.\nCreate a gradient and insert legend onto background map.",
    "lineNumber": 81,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "ChangeMap"
      }
    ],
    "params": [],
    "override": true
  },
  {
    "__docId__": 194,
    "kind": "member",
    "name": "legend",
    "memberof": "src/Gisplay/Maps/Types/ChangeMap.js~ChangeMap",
    "static": false,
    "longname": "src/Gisplay/Maps/Types/ChangeMap.js~ChangeMap#legend",
    "access": null,
    "description": "The Legend to be used through the life of the map.",
    "lineNumber": 86,
    "type": {
      "nullable": null,
      "types": [
        "Legend"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 195,
    "kind": "method",
    "name": "defaults",
    "memberof": "src/Gisplay/Maps/Types/ChangeMap.js~ChangeMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Types/ChangeMap.js~ChangeMap#defaults",
    "access": null,
    "description": "Returns empty object.",
    "lineNumber": 97,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "ChangeMap"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultColorSchemeId",
        "description": "The id of the default color scheme to choose the colors."
      }
    ],
    "return": {
      "types": [
        "{}"
      ]
    },
    "override": true
  },
  {
    "__docId__": 196,
    "kind": "file",
    "name": "src/Gisplay/Maps/Types/ChorochromaticMap.js",
    "content": "import { Choropleth } from './Choropleth';\r\n\r\n/**\r\n * Chorochormatic Map implemenetation.\r\n */\r\nexport class ChorochromaticMap extends Choropleth {\r\n\r\n    /**\r\n     * Creates an instance of ChorochromaticMap.\r\n     * @param {BGMapWrapper} bgmap - Background map object.\r\n     * @param {JSON} geometry - JSON object with the geometry that was read from the file.\r\n     * @param {Object} options - User options to be used. \r\n     * @memberOf ChorochromaticMap\r\n     */\r\n    constructor(bgmap, geometry, options) {\r\n        super(bgmap, geometry, options);\r\n    }\r\n\r\n    /**\r\n     * Returns the color scheme associated with the id given.\r\n     * @param {number} defaultColorSchemeId - The id of the color scheme to choose the colors.\r\n     * @returns {colorScheme: string[]} - The color scheme.\r\n     * @override\r\n     * @memberOf ChorochromaticMap\r\n     */\r\n    defaults(defaultColorSchemeId) {\r\n        const options = {};\r\n        switch (defaultColorSchemeId) {\r\n            case 1:\r\n                options.colorScheme = [\"#440154\", \"#440256\", \"#450457\", \"#450559\", \"#46075a\", \"#46085c\", \"#460a5d\", \"#460b5e\", \"#470d60\", \"#470e61\", \"#471063\", \"#471164\", \"#471365\", \"#481467\", \"#481668\", \"#481769\", \"#48186a\", \"#481a6c\", \"#481b6d\", \"#481c6e\", \"#481d6f\", \"#481f70\", \"#482071\", \"#482173\", \"#482374\", \"#482475\", \"#482576\", \"#482677\", \"#482878\", \"#482979\", \"#472a7a\", \"#472c7a\", \"#472d7b\", \"#472e7c\", \"#472f7d\", \"#46307e\", \"#46327e\", \"#46337f\", \"#463480\", \"#453581\", \"#453781\", \"#453882\", \"#443983\", \"#443a83\", \"#443b84\", \"#433d84\", \"#433e85\", \"#423f85\", \"#424086\", \"#424186\", \"#414287\", \"#414487\", \"#404588\", \"#404688\", \"#3f4788\", \"#3f4889\", \"#3e4989\", \"#3e4a89\", \"#3e4c8a\", \"#3d4d8a\", \"#3d4e8a\", \"#3c4f8a\", \"#3c508b\", \"#3b518b\", \"#3b528b\", \"#3a538b\", \"#3a548c\", \"#39558c\", \"#39568c\", \"#38588c\", \"#38598c\", \"#375a8c\", \"#375b8d\", \"#365c8d\", \"#365d8d\", \"#355e8d\", \"#355f8d\", \"#34608d\", \"#34618d\", \"#33628d\", \"#33638d\", \"#32648e\", \"#32658e\", \"#31668e\", \"#31678e\", \"#31688e\", \"#30698e\", \"#306a8e\", \"#2f6b8e\", \"#2f6c8e\", \"#2e6d8e\", \"#2e6e8e\", \"#2e6f8e\", \"#2d708e\", \"#2d718e\", \"#2c718e\", \"#2c728e\", \"#2c738e\", \"#2b748e\", \"#2b758e\", \"#2a768e\", \"#2a778e\", \"#2a788e\", \"#29798e\", \"#297a8e\", \"#297b8e\", \"#287c8e\", \"#287d8e\", \"#277e8e\", \"#277f8e\", \"#27808e\", \"#26818e\", \"#26828e\", \"#26828e\", \"#25838e\", \"#25848e\", \"#25858e\", \"#24868e\", \"#24878e\", \"#23888e\", \"#23898e\", \"#238a8d\", \"#228b8d\", \"#228c8d\", \"#228d8d\", \"#218e8d\", \"#218f8d\", \"#21908d\", \"#21918c\", \"#20928c\", \"#20928c\", \"#20938c\", \"#1f948c\", \"#1f958b\", \"#1f968b\", \"#1f978b\", \"#1f988b\", \"#1f998a\", \"#1f9a8a\", \"#1e9b8a\", \"#1e9c89\", \"#1e9d89\", \"#1f9e89\", \"#1f9f88\", \"#1fa088\", \"#1fa188\", \"#1fa187\", \"#1fa287\", \"#20a386\", \"#20a486\", \"#21a585\", \"#21a685\", \"#22a785\", \"#22a884\", \"#23a983\", \"#24aa83\", \"#25ab82\", \"#25ac82\", \"#26ad81\", \"#27ad81\", \"#28ae80\", \"#29af7f\", \"#2ab07f\", \"#2cb17e\", \"#2db27d\", \"#2eb37c\", \"#2fb47c\", \"#31b57b\", \"#32b67a\", \"#34b679\", \"#35b779\", \"#37b878\", \"#38b977\", \"#3aba76\", \"#3bbb75\", \"#3dbc74\", \"#3fbc73\", \"#40bd72\", \"#42be71\", \"#44bf70\", \"#46c06f\", \"#48c16e\", \"#4ac16d\", \"#4cc26c\", \"#4ec36b\", \"#50c46a\", \"#52c569\", \"#54c568\", \"#56c667\", \"#58c765\", \"#5ac864\", \"#5cc863\", \"#5ec962\", \"#60ca60\", \"#63cb5f\", \"#65cb5e\", \"#67cc5c\", \"#69cd5b\", \"#6ccd5a\", \"#6ece58\", \"#70cf57\", \"#73d056\", \"#75d054\", \"#77d153\", \"#7ad151\", \"#7cd250\", \"#7fd34e\", \"#81d34d\", \"#84d44b\", \"#86d549\", \"#89d548\", \"#8bd646\", \"#8ed645\", \"#90d743\", \"#93d741\", \"#95d840\", \"#98d83e\", \"#9bd93c\", \"#9dd93b\", \"#a0da39\", \"#a2da37\", \"#a5db36\", \"#a8db34\", \"#aadc32\", \"#addc30\", \"#b0dd2f\", \"#b2dd2d\", \"#b5de2b\", \"#b8de29\", \"#bade28\", \"#bddf26\", \"#c0df25\", \"#c2df23\", \"#c5e021\", \"#c8e020\", \"#cae11f\", \"#cde11d\", \"#d0e11c\", \"#d2e21b\", \"#d5e21a\", \"#d8e219\", \"#dae319\", \"#dde318\", \"#dfe318\", \"#e2e418\", \"#e5e419\", \"#e7e419\", \"#eae51a\", \"#ece51b\", \"#efe51c\", \"#f1e51d\", \"#f4e61e\", \"#f6e620\", \"#f8e621\", \"#fbe723\", \"#fde725\"];\r\n                break;\r\n            case 2:\r\n                options.colorScheme = ['purple', 'orange', 'blue', 'yellow', 'pink', 'green', 'red', 'navy'];\r\n                break;\r\n            default:\r\n                options.colorScheme = [\"#440154\", \"#440256\", \"#450457\", \"#450559\", \"#46075a\", \"#46085c\", \"#460a5d\", \"#460b5e\", \"#470d60\", \"#470e61\", \"#471063\", \"#471164\", \"#471365\", \"#481467\", \"#481668\", \"#481769\", \"#48186a\", \"#481a6c\", \"#481b6d\", \"#481c6e\", \"#481d6f\", \"#481f70\", \"#482071\", \"#482173\", \"#482374\", \"#482475\", \"#482576\", \"#482677\", \"#482878\", \"#482979\", \"#472a7a\", \"#472c7a\", \"#472d7b\", \"#472e7c\", \"#472f7d\", \"#46307e\", \"#46327e\", \"#46337f\", \"#463480\", \"#453581\", \"#453781\", \"#453882\", \"#443983\", \"#443a83\", \"#443b84\", \"#433d84\", \"#433e85\", \"#423f85\", \"#424086\", \"#424186\", \"#414287\", \"#414487\", \"#404588\", \"#404688\", \"#3f4788\", \"#3f4889\", \"#3e4989\", \"#3e4a89\", \"#3e4c8a\", \"#3d4d8a\", \"#3d4e8a\", \"#3c4f8a\", \"#3c508b\", \"#3b518b\", \"#3b528b\", \"#3a538b\", \"#3a548c\", \"#39558c\", \"#39568c\", \"#38588c\", \"#38598c\", \"#375a8c\", \"#375b8d\", \"#365c8d\", \"#365d8d\", \"#355e8d\", \"#355f8d\", \"#34608d\", \"#34618d\", \"#33628d\", \"#33638d\", \"#32648e\", \"#32658e\", \"#31668e\", \"#31678e\", \"#31688e\", \"#30698e\", \"#306a8e\", \"#2f6b8e\", \"#2f6c8e\", \"#2e6d8e\", \"#2e6e8e\", \"#2e6f8e\", \"#2d708e\", \"#2d718e\", \"#2c718e\", \"#2c728e\", \"#2c738e\", \"#2b748e\", \"#2b758e\", \"#2a768e\", \"#2a778e\", \"#2a788e\", \"#29798e\", \"#297a8e\", \"#297b8e\", \"#287c8e\", \"#287d8e\", \"#277e8e\", \"#277f8e\", \"#27808e\", \"#26818e\", \"#26828e\", \"#26828e\", \"#25838e\", \"#25848e\", \"#25858e\", \"#24868e\", \"#24878e\", \"#23888e\", \"#23898e\", \"#238a8d\", \"#228b8d\", \"#228c8d\", \"#228d8d\", \"#218e8d\", \"#218f8d\", \"#21908d\", \"#21918c\", \"#20928c\", \"#20928c\", \"#20938c\", \"#1f948c\", \"#1f958b\", \"#1f968b\", \"#1f978b\", \"#1f988b\", \"#1f998a\", \"#1f9a8a\", \"#1e9b8a\", \"#1e9c89\", \"#1e9d89\", \"#1f9e89\", \"#1f9f88\", \"#1fa088\", \"#1fa188\", \"#1fa187\", \"#1fa287\", \"#20a386\", \"#20a486\", \"#21a585\", \"#21a685\", \"#22a785\", \"#22a884\", \"#23a983\", \"#24aa83\", \"#25ab82\", \"#25ac82\", \"#26ad81\", \"#27ad81\", \"#28ae80\", \"#29af7f\", \"#2ab07f\", \"#2cb17e\", \"#2db27d\", \"#2eb37c\", \"#2fb47c\", \"#31b57b\", \"#32b67a\", \"#34b679\", \"#35b779\", \"#37b878\", \"#38b977\", \"#3aba76\", \"#3bbb75\", \"#3dbc74\", \"#3fbc73\", \"#40bd72\", \"#42be71\", \"#44bf70\", \"#46c06f\", \"#48c16e\", \"#4ac16d\", \"#4cc26c\", \"#4ec36b\", \"#50c46a\", \"#52c569\", \"#54c568\", \"#56c667\", \"#58c765\", \"#5ac864\", \"#5cc863\", \"#5ec962\", \"#60ca60\", \"#63cb5f\", \"#65cb5e\", \"#67cc5c\", \"#69cd5b\", \"#6ccd5a\", \"#6ece58\", \"#70cf57\", \"#73d056\", \"#75d054\", \"#77d153\", \"#7ad151\", \"#7cd250\", \"#7fd34e\", \"#81d34d\", \"#84d44b\", \"#86d549\", \"#89d548\", \"#8bd646\", \"#8ed645\", \"#90d743\", \"#93d741\", \"#95d840\", \"#98d83e\", \"#9bd93c\", \"#9dd93b\", \"#a0da39\", \"#a2da37\", \"#a5db36\", \"#a8db34\", \"#aadc32\", \"#addc30\", \"#b0dd2f\", \"#b2dd2d\", \"#b5de2b\", \"#b8de29\", \"#bade28\", \"#bddf26\", \"#c0df25\", \"#c2df23\", \"#c5e021\", \"#c8e020\", \"#cae11f\", \"#cde11d\", \"#d0e11c\", \"#d2e21b\", \"#d5e21a\", \"#d8e219\", \"#dae319\", \"#dde318\", \"#dfe318\", \"#e2e418\", \"#e5e419\", \"#e7e419\", \"#eae51a\", \"#ece51b\", \"#efe51c\", \"#f1e51d\", \"#f4e61e\", \"#f6e620\", \"#f8e621\", \"#fbe723\", \"#fde725\"];\r\n                break;\r\n        }\r\n        return options;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "src/Gisplay/Maps/Types/ChorochromaticMap.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 197,
    "kind": "class",
    "name": "ChorochromaticMap",
    "memberof": "src/Gisplay/Maps/Types/ChorochromaticMap.js",
    "static": true,
    "longname": "src/Gisplay/Maps/Types/ChorochromaticMap.js~ChorochromaticMap",
    "access": null,
    "export": true,
    "importPath": "gisplay-es6-webpack/src/Gisplay/Maps/Types/ChorochromaticMap.js",
    "importStyle": "{ChorochromaticMap}",
    "description": "Chorochormatic Map implemenetation.",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "src/Gisplay/Maps/Types/Choropleth.js~Choropleth"
    ]
  },
  {
    "__docId__": 198,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Gisplay/Maps/Types/ChorochromaticMap.js~ChorochromaticMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Types/ChorochromaticMap.js~ChorochromaticMap#constructor",
    "access": null,
    "description": "Creates an instance of ChorochromaticMap.",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "ChorochromaticMap"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "BGMapWrapper"
        ],
        "spread": false,
        "optional": false,
        "name": "bgmap",
        "description": "Background map object."
      },
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "geometry",
        "description": "JSON object with the geometry that was read from the file."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "User options to be used."
      }
    ]
  },
  {
    "__docId__": 199,
    "kind": "method",
    "name": "defaults",
    "memberof": "src/Gisplay/Maps/Types/ChorochromaticMap.js~ChorochromaticMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Types/ChorochromaticMap.js~ChorochromaticMap#defaults",
    "access": null,
    "description": "Returns the color scheme associated with the id given.",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{colorScheme: string[]} - The color scheme."
      },
      {
        "tagName": "@memberOf",
        "tagValue": "ChorochromaticMap"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultColorSchemeId",
        "description": "The id of the color scheme to choose the colors."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "colorScheme: string[]"
      ],
      "spread": false,
      "description": "The color scheme."
    },
    "override": true
  },
  {
    "__docId__": 200,
    "kind": "file",
    "name": "src/Gisplay/Maps/Types/Choropleth.js",
    "content": "import { Map } from '../Map';\r\nimport { Legend } from '../Legend';\r\n\r\n/**\r\n * Choropleth implementation 06/03 - 23/03\r\n */\r\nexport class Choropleth extends Map {\r\n\r\n    /**\r\n     * Creates an instance of Choropleth.\r\n     * @param {BGMapWrapper} bgmap - Background map object.\r\n     * @param {JSON} geometry - JSON object with the geometry that was read from the file.\r\n     * @param {Object} userOptions - User options to be used.\r\n     * @memberOf Choropleth\r\n     */\r\n    constructor(bgmap, geometry, userOptions) {\r\n        super(bgmap, geometry, userOptions);\r\n        this.loadOptions(userOptions, bgmap);// this.type = 'CP'; window.maps.push(this);\r\n        this.initializeCanvasAndEvents();\r\n    }\r\n\r\n    /**\r\n     * Draw Choropleth map, at the beginning and when the map is moved.\r\n     * @see initialize() and makeMap() methods.\r\n     * @override  \r\n     * @memberOf Choropleth\r\n     */\r\n    draw() {\r\n        this.clear();\r\n        for (const aes of this.aesthetics) {\r\n            if (aes.isEnabled())\r\n                this.drawTriangles(aes);\r\n            this.drawBorders(aes);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Method called to build the Map Legend.\r\n     * For all Aesthethics that exist crate one polygon row and then insert the Legend to the map. \r\n     * @override \r\n     * @memberOf Choropleth\r\n     */\r\n    buildLegend() {\r\n        /**\r\n         * The Legend to be used through the life of the map.\r\n         * @type {Legend} \r\n         */\r\n        this.legend = new Legend(this.id, this.gisplayOptions.legendTitle);\r\n        for (const aes of this.aesthetics)\r\n            this.legend.insertPolygonRow(aes, this);\r\n        this.legend.insertLegend(this.bGMap);\r\n    }\r\n\r\n    /**\r\n     * Returns the color scheme and number of classes associated with the id given.\r\n     * @param {number} defaultColorSchemeId - The id of the default color scheme to choose the colors.\r\n     * @returns {{colorScheme: string[], numberOfClasses: number}} - Color scheme and number of classes associated with the id given, empty object otherwise.\r\n     * @override \r\n     * @memberOf Choropleth\r\n     */\r\n    defaults(defaultColorSchemeId) {\r\n        const options = {};\r\n        switch (defaultColorSchemeId) {\r\n            case 1:\r\n                options.colorScheme = ['white', 'yellow', 'orange', 'red'];\r\n                options.numberOfClasses = 4;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return options;\r\n    }\r\n}",
    "static": true,
    "longname": "src/Gisplay/Maps/Types/Choropleth.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 201,
    "kind": "class",
    "name": "Choropleth",
    "memberof": "src/Gisplay/Maps/Types/Choropleth.js",
    "static": true,
    "longname": "src/Gisplay/Maps/Types/Choropleth.js~Choropleth",
    "access": null,
    "export": true,
    "importPath": "gisplay-es6-webpack/src/Gisplay/Maps/Types/Choropleth.js",
    "importStyle": "{Choropleth}",
    "description": "Choropleth implementation 06/03 - 23/03",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/Gisplay/Maps/Map.js~Map"
    ]
  },
  {
    "__docId__": 202,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Gisplay/Maps/Types/Choropleth.js~Choropleth",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Types/Choropleth.js~Choropleth#constructor",
    "access": null,
    "description": "Creates an instance of Choropleth.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Choropleth"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "BGMapWrapper"
        ],
        "spread": false,
        "optional": false,
        "name": "bgmap",
        "description": "Background map object."
      },
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "geometry",
        "description": "JSON object with the geometry that was read from the file."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "userOptions",
        "description": "User options to be used."
      }
    ]
  },
  {
    "__docId__": 203,
    "kind": "method",
    "name": "draw",
    "memberof": "src/Gisplay/Maps/Types/Choropleth.js~Choropleth",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Types/Choropleth.js~Choropleth#draw",
    "access": null,
    "description": "Draw Choropleth map, at the beginning and when the map is moved.",
    "see": [
      "initialize() and makeMap() methods."
    ],
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Choropleth"
      }
    ],
    "params": [],
    "override": true
  },
  {
    "__docId__": 204,
    "kind": "method",
    "name": "buildLegend",
    "memberof": "src/Gisplay/Maps/Types/Choropleth.js~Choropleth",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Types/Choropleth.js~Choropleth#buildLegend",
    "access": null,
    "description": "Method called to build the Map Legend.\nFor all Aesthethics that exist crate one polygon row and then insert the Legend to the map. ",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Choropleth"
      }
    ],
    "params": [],
    "override": true
  },
  {
    "__docId__": 205,
    "kind": "member",
    "name": "legend",
    "memberof": "src/Gisplay/Maps/Types/Choropleth.js~Choropleth",
    "static": false,
    "longname": "src/Gisplay/Maps/Types/Choropleth.js~Choropleth#legend",
    "access": null,
    "description": "The Legend to be used through the life of the map.",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "Legend"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 206,
    "kind": "method",
    "name": "defaults",
    "memberof": "src/Gisplay/Maps/Types/Choropleth.js~Choropleth",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Types/Choropleth.js~Choropleth#defaults",
    "access": null,
    "description": "Returns the color scheme and number of classes associated with the id given.",
    "lineNumber": 61,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{colorScheme: string[], numberOfClasses: number}} - Color scheme and number of classes associated with the id given, empty object otherwise."
      },
      {
        "tagName": "@memberOf",
        "tagValue": "Choropleth"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultColorSchemeId",
        "description": "The id of the default color scheme to choose the colors."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{colorScheme: string[], numberOfClasses: number}"
      ],
      "spread": false,
      "description": "Color scheme and number of classes associated with the id given, empty object otherwise."
    },
    "override": true
  },
  {
    "__docId__": 207,
    "kind": "file",
    "name": "src/Gisplay/Maps/Types/DotMap.js",
    "content": "import { Map } from '../Map';\r\nimport { Legend } from '../Legend';\r\n\r\n/**\r\n * DotMap implemenetation\r\n */\r\nexport class DotMap extends Map {\r\n\r\n    /**\r\n     * Creates an instance of DotMap.\r\n     * @param {BGMapWrapper} bgmap - Background map object.\r\n     * @param {JSON} geometry - JSON object with the geometry that was read from the file.\r\n     * @param {Object} options - User options to be used.\r\n     * @memberOf DotMap\r\n     */\r\n    constructor(bgmap, geometry, options) {\r\n        super(bgmap, geometry, options);\r\n        this.loadOptions(options, bgmap);\r\n        this.initializeCanvasAndEvents();\r\n    }\r\n\r\n    /**\r\n     * Draw Dot map, at the beginning and when the map is moved.\r\n     * @see initialize() and makeMap() methods.\r\n     * @override\r\n     * @memberOf DotMap\r\n     */\r\n    draw() {\r\n        this.clear();\r\n        for (const aes of this.aesthetics)\r\n            if (aes.isEnabled())\r\n                this.drawPoints(aes);\r\n    }\r\n\r\n    /**\r\n     * Method called to build the Map Legend.\r\n     * For all Aesthethics that exist crate one point row and then insert the Legend to the map\r\n     * @override \r\n     * @memberOf DotMap\r\n     */\r\n    buildLegend() {\r\n        /**\r\n         * The Legend to be used through the life of the map.\r\n         * @type {Legend} \r\n         */\r\n        this.legend = new Legend(this.id, this.gisplayOptions.legendTitle);\r\n        for (const aes of this.aesthetics)\r\n            this.legend.insertPointRow(aes, this);\r\n        this.legend.insertLegend(this.bGMap);\r\n    }\r\n\r\n    /**\r\n     * Returns the color scheme and number of classes associated with the id given.\r\n     * @param {number} defaultColorSchemeId \r\n     * @returns {{colorScheme: string[], numberOfClasses: number}}\r\n     * @override \r\n     * @memberOf DotMap\r\n     */\r\n    defaults(defaultColorSchemeId) {\r\n        const options = {};\r\n        switch (defaultColorSchemeId) {\r\n            case 1:\r\n                options.colorScheme = [\"#440154\", \"#440256\", \"#450457\", \"#450559\", \"#46075a\", \"#46085c\", \"#460a5d\", \"#460b5e\", \"#470d60\", \"#470e61\", \"#471063\", \"#471164\", \"#471365\", \"#481467\", \"#481668\", \"#481769\", \"#48186a\", \"#481a6c\", \"#481b6d\", \"#481c6e\", \"#481d6f\", \"#481f70\", \"#482071\", \"#482173\", \"#482374\", \"#482475\", \"#482576\", \"#482677\", \"#482878\", \"#482979\", \"#472a7a\", \"#472c7a\", \"#472d7b\", \"#472e7c\", \"#472f7d\", \"#46307e\", \"#46327e\", \"#46337f\", \"#463480\", \"#453581\", \"#453781\", \"#453882\", \"#443983\", \"#443a83\", \"#443b84\", \"#433d84\", \"#433e85\", \"#423f85\", \"#424086\", \"#424186\", \"#414287\", \"#414487\", \"#404588\", \"#404688\", \"#3f4788\", \"#3f4889\", \"#3e4989\", \"#3e4a89\", \"#3e4c8a\", \"#3d4d8a\", \"#3d4e8a\", \"#3c4f8a\", \"#3c508b\", \"#3b518b\", \"#3b528b\", \"#3a538b\", \"#3a548c\", \"#39558c\", \"#39568c\", \"#38588c\", \"#38598c\", \"#375a8c\", \"#375b8d\", \"#365c8d\", \"#365d8d\", \"#355e8d\", \"#355f8d\", \"#34608d\", \"#34618d\", \"#33628d\", \"#33638d\", \"#32648e\", \"#32658e\", \"#31668e\", \"#31678e\", \"#31688e\", \"#30698e\", \"#306a8e\", \"#2f6b8e\", \"#2f6c8e\", \"#2e6d8e\", \"#2e6e8e\", \"#2e6f8e\", \"#2d708e\", \"#2d718e\", \"#2c718e\", \"#2c728e\", \"#2c738e\", \"#2b748e\", \"#2b758e\", \"#2a768e\", \"#2a778e\", \"#2a788e\", \"#29798e\", \"#297a8e\", \"#297b8e\", \"#287c8e\", \"#287d8e\", \"#277e8e\", \"#277f8e\", \"#27808e\", \"#26818e\", \"#26828e\", \"#26828e\", \"#25838e\", \"#25848e\", \"#25858e\", \"#24868e\", \"#24878e\", \"#23888e\", \"#23898e\", \"#238a8d\", \"#228b8d\", \"#228c8d\", \"#228d8d\", \"#218e8d\", \"#218f8d\", \"#21908d\", \"#21918c\", \"#20928c\", \"#20928c\", \"#20938c\", \"#1f948c\", \"#1f958b\", \"#1f968b\", \"#1f978b\", \"#1f988b\", \"#1f998a\", \"#1f9a8a\", \"#1e9b8a\", \"#1e9c89\", \"#1e9d89\", \"#1f9e89\", \"#1f9f88\", \"#1fa088\", \"#1fa188\", \"#1fa187\", \"#1fa287\", \"#20a386\", \"#20a486\", \"#21a585\", \"#21a685\", \"#22a785\", \"#22a884\", \"#23a983\", \"#24aa83\", \"#25ab82\", \"#25ac82\", \"#26ad81\", \"#27ad81\", \"#28ae80\", \"#29af7f\", \"#2ab07f\", \"#2cb17e\", \"#2db27d\", \"#2eb37c\", \"#2fb47c\", \"#31b57b\", \"#32b67a\", \"#34b679\", \"#35b779\", \"#37b878\", \"#38b977\", \"#3aba76\", \"#3bbb75\", \"#3dbc74\", \"#3fbc73\", \"#40bd72\", \"#42be71\", \"#44bf70\", \"#46c06f\", \"#48c16e\", \"#4ac16d\", \"#4cc26c\", \"#4ec36b\", \"#50c46a\", \"#52c569\", \"#54c568\", \"#56c667\", \"#58c765\", \"#5ac864\", \"#5cc863\", \"#5ec962\", \"#60ca60\", \"#63cb5f\", \"#65cb5e\", \"#67cc5c\", \"#69cd5b\", \"#6ccd5a\", \"#6ece58\", \"#70cf57\", \"#73d056\", \"#75d054\", \"#77d153\", \"#7ad151\", \"#7cd250\", \"#7fd34e\", \"#81d34d\", \"#84d44b\", \"#86d549\", \"#89d548\", \"#8bd646\", \"#8ed645\", \"#90d743\", \"#93d741\", \"#95d840\", \"#98d83e\", \"#9bd93c\", \"#9dd93b\", \"#a0da39\", \"#a2da37\", \"#a5db36\", \"#a8db34\", \"#aadc32\", \"#addc30\", \"#b0dd2f\", \"#b2dd2d\", \"#b5de2b\", \"#b8de29\", \"#bade28\", \"#bddf26\", \"#c0df25\", \"#c2df23\", \"#c5e021\", \"#c8e020\", \"#cae11f\", \"#cde11d\", \"#d0e11c\", \"#d2e21b\", \"#d5e21a\", \"#d8e219\", \"#dae319\", \"#dde318\", \"#dfe318\", \"#e2e418\", \"#e5e419\", \"#e7e419\", \"#eae51a\", \"#ece51b\", \"#efe51c\", \"#f1e51d\", \"#f4e61e\", \"#f6e620\", \"#f8e621\", \"#fbe723\", \"#fde725\"];\r\n                break;\r\n            case 2:\r\n                options.colorScheme = ['purple', 'orange', 'blue', 'yellow', 'pink', 'green', 'red', 'navy'];\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        options.numberOfClasses = 1;\r\n        return options;\r\n    }\r\n}",
    "static": true,
    "longname": "src/Gisplay/Maps/Types/DotMap.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 208,
    "kind": "class",
    "name": "DotMap",
    "memberof": "src/Gisplay/Maps/Types/DotMap.js",
    "static": true,
    "longname": "src/Gisplay/Maps/Types/DotMap.js~DotMap",
    "access": null,
    "export": true,
    "importPath": "gisplay-es6-webpack/src/Gisplay/Maps/Types/DotMap.js",
    "importStyle": "{DotMap}",
    "description": "DotMap implemenetation",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/Gisplay/Maps/Map.js~Map"
    ]
  },
  {
    "__docId__": 209,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Gisplay/Maps/Types/DotMap.js~DotMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Types/DotMap.js~DotMap#constructor",
    "access": null,
    "description": "Creates an instance of DotMap.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "DotMap"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "BGMapWrapper"
        ],
        "spread": false,
        "optional": false,
        "name": "bgmap",
        "description": "Background map object."
      },
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "geometry",
        "description": "JSON object with the geometry that was read from the file."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "User options to be used."
      }
    ]
  },
  {
    "__docId__": 210,
    "kind": "method",
    "name": "draw",
    "memberof": "src/Gisplay/Maps/Types/DotMap.js~DotMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Types/DotMap.js~DotMap#draw",
    "access": null,
    "description": "Draw Dot map, at the beginning and when the map is moved.",
    "see": [
      "initialize() and makeMap() methods."
    ],
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "DotMap"
      }
    ],
    "params": [],
    "override": true
  },
  {
    "__docId__": 211,
    "kind": "method",
    "name": "buildLegend",
    "memberof": "src/Gisplay/Maps/Types/DotMap.js~DotMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Types/DotMap.js~DotMap#buildLegend",
    "access": null,
    "description": "Method called to build the Map Legend.\nFor all Aesthethics that exist crate one point row and then insert the Legend to the map",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "DotMap"
      }
    ],
    "params": [],
    "override": true
  },
  {
    "__docId__": 212,
    "kind": "member",
    "name": "legend",
    "memberof": "src/Gisplay/Maps/Types/DotMap.js~DotMap",
    "static": false,
    "longname": "src/Gisplay/Maps/Types/DotMap.js~DotMap#legend",
    "access": null,
    "description": "The Legend to be used through the life of the map.",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "Legend"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 213,
    "kind": "method",
    "name": "defaults",
    "memberof": "src/Gisplay/Maps/Types/DotMap.js~DotMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Types/DotMap.js~DotMap#defaults",
    "access": null,
    "description": "Returns the color scheme and number of classes associated with the id given.",
    "lineNumber": 59,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{colorScheme: string[], numberOfClasses: number}}"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "DotMap"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultColorSchemeId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{colorScheme: string[], numberOfClasses: number}"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 214,
    "kind": "file",
    "name": "src/Gisplay/Maps/Types/ProportionalSymbolsMap.js",
    "content": "import { Map } from '../Map';\r\nimport { Legend } from '../Legend';\r\n\r\n/**\r\n * Proportional Symbols Map implementation.\r\n */\r\nexport class ProportionalSymbolsMap extends Map {\r\n\r\n    /**\r\n     * Creates an instance of ProportionalSymbolsMap.\r\n     * @param {BGMapWrapper} bgmap - Background map object.\r\n     * @param {JSON} geometry - JSON object with the geometry that was read from the file.\r\n     * @param {Object} options - User options to be used.\r\n     * @memberOf ProportionalSymbolsMap\r\n     */\r\n    constructor(bgmap, geometry, options) {\r\n        super(bgmap, geometry, options);\r\n        this.loadOptions(options, bgmap);\r\n        this.gisplayOptions.isDynamic = !options.sizeByClass;\r\n        this.initializeCanvasAndEvents();\r\n    }\r\n\r\n    /**\r\n     * Draw ProportionalSymbols map, at the beginning and when the map is moved.\r\n     * @see initialize() and makeMap() methods.\r\n     * @override \r\n     * @memberOf ProportionalSymbolsMap\r\n     */\r\n    draw() {\r\n        this.clear();\r\n        if (!this.gisplayOptions.isDynamic) {\r\n            for (let i = this.aesthetics.length - 1; i >= 0; i--)\r\n                if (this.aesthetics[i].isEnabled())\r\n                    this.drawPoints(this.aesthetics[i]);\r\n        }\r\n        else {\r\n            for (let i = this.aesthetics.length - 1; i >= 0; i--)\r\n                if (this.aesthetics[i].isEnabled())\r\n                    this.drawProportionalPoints(this.aesthetics[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Method called to build the Map Legend.\r\n     * For all Aesthethics that exist crate one proportional symbol row and then insert the Legend to the map. \r\n     * @override \r\n     * @memberOf ProportionalSymbolsMap\r\n     */\r\n    buildLegend() {\r\n        /**\r\n         * The Legend to be used through the life of the map.\r\n         * @type {Legend} \r\n         */\r\n        this.legend = new Legend(this.id, this.gisplayOptions.legendTitle);\r\n        if (this.aesthetics.length === 1)\r\n            this.legend.insertProportionalSymbols(this.aesthetics[0], this, this.gisplayOptions.numberOfLegendItems);\r\n        else\r\n            for (let i = this.aesthetics.length - 1; i >= 0; i--) {\r\n                if (i === 0)\r\n                    this.legend.insertProportionalSymbols(this.aesthetics[i], this, 2);\r\n                else\r\n                    this.legend.insertProportionalSymbols(this.aesthetics[i], this, 1);\r\n            }\r\n        // i == 0 ? this.legend.insertProportionalSymbols(this.aesthetics[i], this, 2) : this.legend.insertProportionalSymbols(this.aesthetics[i], this, 1);\r\n        this.legend.insertLegend(this.bGMap);\r\n    }\r\n\r\n    /**\r\n     * Returns the color scheme, number of classes, minimum point size and max point size associated with the id given.\r\n     * @param {number} defaultColorSchemeId - The id of the default color scheme to choose the colors.\r\n     * @returns {{maxPointSize: number, minPointSize: number, colorScheme: string[], numberOfClasses: number}}\r\n     * @override \r\n     * @memberOf ProportionalSymbolsMap\r\n     */\r\n    defaults(defaultColorSchemeId) {\r\n        const options = {};\r\n        switch (defaultColorSchemeId) {\r\n            case 1:\r\n                options.maxPointSize = 60;\r\n                options.minPointSize = 5;\r\n                options.colorScheme = ['green', 'red', 'blue'];\r\n                options.numberOfClasses = 1;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return options;\r\n    }\r\n\r\n}",
    "static": true,
    "longname": "src/Gisplay/Maps/Types/ProportionalSymbolsMap.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 215,
    "kind": "class",
    "name": "ProportionalSymbolsMap",
    "memberof": "src/Gisplay/Maps/Types/ProportionalSymbolsMap.js",
    "static": true,
    "longname": "src/Gisplay/Maps/Types/ProportionalSymbolsMap.js~ProportionalSymbolsMap",
    "access": null,
    "export": true,
    "importPath": "gisplay-es6-webpack/src/Gisplay/Maps/Types/ProportionalSymbolsMap.js",
    "importStyle": "{ProportionalSymbolsMap}",
    "description": "Proportional Symbols Map implementation.",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/Gisplay/Maps/Map.js~Map"
    ]
  },
  {
    "__docId__": 216,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Gisplay/Maps/Types/ProportionalSymbolsMap.js~ProportionalSymbolsMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Types/ProportionalSymbolsMap.js~ProportionalSymbolsMap#constructor",
    "access": null,
    "description": "Creates an instance of ProportionalSymbolsMap.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "ProportionalSymbolsMap"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "BGMapWrapper"
        ],
        "spread": false,
        "optional": false,
        "name": "bgmap",
        "description": "Background map object."
      },
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "geometry",
        "description": "JSON object with the geometry that was read from the file."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "User options to be used."
      }
    ]
  },
  {
    "__docId__": 217,
    "kind": "method",
    "name": "draw",
    "memberof": "src/Gisplay/Maps/Types/ProportionalSymbolsMap.js~ProportionalSymbolsMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Types/ProportionalSymbolsMap.js~ProportionalSymbolsMap#draw",
    "access": null,
    "description": "Draw ProportionalSymbols map, at the beginning and when the map is moved.",
    "see": [
      "initialize() and makeMap() methods."
    ],
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "ProportionalSymbolsMap"
      }
    ],
    "params": [],
    "override": true
  },
  {
    "__docId__": 218,
    "kind": "method",
    "name": "buildLegend",
    "memberof": "src/Gisplay/Maps/Types/ProportionalSymbolsMap.js~ProportionalSymbolsMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Types/ProportionalSymbolsMap.js~ProportionalSymbolsMap#buildLegend",
    "access": null,
    "description": "Method called to build the Map Legend.\nFor all Aesthethics that exist crate one proportional symbol row and then insert the Legend to the map. ",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "ProportionalSymbolsMap"
      }
    ],
    "params": [],
    "override": true
  },
  {
    "__docId__": 219,
    "kind": "member",
    "name": "legend",
    "memberof": "src/Gisplay/Maps/Types/ProportionalSymbolsMap.js~ProportionalSymbolsMap",
    "static": false,
    "longname": "src/Gisplay/Maps/Types/ProportionalSymbolsMap.js~ProportionalSymbolsMap#legend",
    "access": null,
    "description": "The Legend to be used through the life of the map.",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "Legend"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 220,
    "kind": "method",
    "name": "defaults",
    "memberof": "src/Gisplay/Maps/Types/ProportionalSymbolsMap.js~ProportionalSymbolsMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/Types/ProportionalSymbolsMap.js~ProportionalSymbolsMap#defaults",
    "access": null,
    "description": "Returns the color scheme, number of classes, minimum point size and max point size associated with the id given.",
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{maxPointSize: number, minPointSize: number, colorScheme: string[], numberOfClasses: number}}"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "ProportionalSymbolsMap"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultColorSchemeId",
        "description": "The id of the default color scheme to choose the colors."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{maxPointSize: number, minPointSize: number, colorScheme: string[], numberOfClasses: number}"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 221,
    "kind": "file",
    "name": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapBingMaps.js",
    "content": "import { BGMapWrapper } from '../../BGMapWrapper';\r\n\r\n/**\r\n * Here Maps as background map provider. \r\n * @export\r\n * @class BGMapBingMaps\r\n * @extends {BGMapWrapper}\r\n * @see https://msdn.microsoft.com/en-us/library/mt712542.aspx\r\n */\r\nexport class BGMapBingMaps extends BGMapWrapper {\r\n\r\n    /**\r\n     * Creates an instance of Bing Maps.\r\n     * @param {Object} bgmap - The Bing Maps object.\r\n     * @memberOf BGMapBingMaps\r\n     */\r\n    constructor(bgmap) {\r\n        super(bgmap);\r\n    }\r\n\r\n    /**\r\n     * Returns the map's containing HTML element.\r\n     * @return {HTMLElement} - The map's HTML element container.\r\n     */\r\n    getContainer() {\r\n        return this.bgMapObject.getRootElement();\r\n    }\r\n\r\n    /**\r\n     * Given one id it creates a canvas object.\r\n     * @todo Understand case mapbox comment bellow.\r\n     * @param {number} id - The id of the canvas to be created.\r\n     * @return {HTMLElement} Canvas object where everything will be drawn.\r\n     * @see http://stackoverflow.com/a/6862022\r\n     */\r\n    createCanvas(id) {\r\n        const mapCanvas = document.createElement('canvas');\r\n        mapCanvas.id = `mapCanvas${id}`;\r\n        mapCanvas.style.position = 'absolute';\r\n\r\n        const mapDiv = this.bgMapObject.getRootElement();//Could be: this.getContainer();\r\n        mapCanvas.height = mapDiv.offsetHeight;\r\n        mapCanvas.width = mapDiv.offsetWidth;\r\n\r\n        // Bing Maps\r\n        mapCanvas.style.pointerEvents = 'none';\r\n        mapDiv.insertBefore(mapCanvas, mapDiv.firstChild.nextSibling);\r\n\r\n        const canvas = document.getElementById(`mapCanvas${id}`);\r\n        return canvas;\r\n    }\r\n\r\n    /**\r\n     * Returns the map's current zoom level.\r\n     * @return {number} - The map's current zoom level.\r\n     */\r\n    getZoom() {\r\n        return this.bgMapObject.getZoom();\r\n    }\r\n\r\n    /**\r\n     * Returns the longitude(X) of the bounding box northwest corner.\r\n     * @return {number} - Longitude of northwest corner, measured in degrees.\r\n     * @see \r\n     */\r\n    getCenterLng() {\r\n        return this.bgMapObject.getCenter().longitude;\r\n    }\r\n\r\n    /**\r\n     * Returns the latitude(Y) of the bounding box northwest corner.\r\n     * @return {number} - Latitude of northwest corner, measured in degrees.\r\n     * @see \r\n     */\r\n    getCenterLat() {\r\n        return this.bgMapObject.getCenter().latitude;\r\n    }\r\n}",
    "static": true,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapBingMaps.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 222,
    "kind": "class",
    "name": "BGMapBingMaps",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapBingMaps.js",
    "static": true,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapBingMaps.js~BGMapBingMaps",
    "access": null,
    "export": true,
    "importPath": "gisplay-es6-webpack/src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapBingMaps.js",
    "importStyle": "{BGMapBingMaps}",
    "description": "Here Maps as background map provider. ",
    "see": [
      "https://msdn.microsoft.com/en-us/library/mt712542.aspx"
    ],
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "BGMapBingMaps"
      }
    ],
    "interface": false,
    "extends": [
      "BGMapWrapper"
    ]
  },
  {
    "__docId__": 223,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapBingMaps.js~BGMapBingMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapBingMaps.js~BGMapBingMaps#constructor",
    "access": null,
    "description": "Creates an instance of Bing Maps.",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "BGMapBingMaps"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "bgmap",
        "description": "The Bing Maps object."
      }
    ]
  },
  {
    "__docId__": 224,
    "kind": "method",
    "name": "getContainer",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapBingMaps.js~BGMapBingMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapBingMaps.js~BGMapBingMaps#getContainer",
    "access": null,
    "description": "Returns the map's containing HTML element.",
    "lineNumber": 25,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": "The map's HTML element container."
    }
  },
  {
    "__docId__": 225,
    "kind": "method",
    "name": "createCanvas",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapBingMaps.js~BGMapBingMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapBingMaps.js~BGMapBingMaps#createCanvas",
    "access": null,
    "description": "Given one id it creates a canvas object.",
    "see": [
      "http://stackoverflow.com/a/6862022"
    ],
    "lineNumber": 36,
    "todo": [
      "Understand case mapbox comment bellow."
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The id of the canvas to be created."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": "Canvas object where everything will be drawn."
    }
  },
  {
    "__docId__": 226,
    "kind": "method",
    "name": "getZoom",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapBingMaps.js~BGMapBingMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapBingMaps.js~BGMapBingMaps#getZoom",
    "access": null,
    "description": "Returns the map's current zoom level.",
    "lineNumber": 57,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The map's current zoom level."
    }
  },
  {
    "__docId__": 227,
    "kind": "method",
    "name": "getCenterLng",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapBingMaps.js~BGMapBingMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapBingMaps.js~BGMapBingMaps#getCenterLng",
    "access": null,
    "description": "Returns the longitude(X) of the bounding box northwest corner.",
    "see": [
      ""
    ],
    "lineNumber": 66,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Longitude of northwest corner, measured in degrees."
    }
  },
  {
    "__docId__": 228,
    "kind": "method",
    "name": "getCenterLat",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapBingMaps.js~BGMapBingMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapBingMaps.js~BGMapBingMaps#getCenterLat",
    "access": null,
    "description": "Returns the latitude(Y) of the bounding box northwest corner.",
    "see": [
      ""
    ],
    "lineNumber": 75,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Latitude of northwest corner, measured in degrees."
    }
  },
  {
    "__docId__": 229,
    "kind": "file",
    "name": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapGoogleMaps.js",
    "content": "import { BGMapWrapper } from '../../BGMapWrapper';\r\n\r\n/**\r\n * Google Maps as background map provider. \r\n * @export\r\n * @class GoogleMapsBGMap\r\n * @extends {BGMapWrapper}\r\n * @see https://developers.google.com/maps/documentation/javascript/3.exp/reference\r\n * @see \r\n */\r\nexport class BGMapGoogleMaps extends BGMapWrapper {\r\n\r\n    /**\r\n     * Creates an instance of GoogleMapsBGMap.\r\n     * @param {Object} bgmap - The Google Maps object.\r\n     * @memberOf GoogleMapsBGMap\r\n     */\r\n    constructor(bgmap) {\r\n        super(bgmap);\r\n    }\r\n\r\n    /**\r\n     * Returns the map's containing HTML element.\r\n     * @return {HTMLElement} - The map's HTML element container.\r\n     */\r\n    getContainer() {\r\n        return this.bgMapObject.getDiv();\r\n    }\r\n\r\n    /**\r\n     * Given one id it creates a canvas object.\r\n     * @todo Understand case mapbox comment bellow.\r\n     * @param {number} id - The id of the canvas to be created.\r\n     * @return {HTMLElement} Canvas object where everything will be drawn.\r\n     * @see http://stackoverflow.com/a/6862022\r\n     */\r\n    createCanvas(id) {\r\n        const mapCanvas = document.createElement('canvas');\r\n        mapCanvas.id = `mapCanvas${id}`;\r\n        mapCanvas.style.position = 'absolute';\r\n\r\n        const mapDiv = this.bgMapObject.getDiv();\r\n        mapCanvas.height = mapDiv.offsetHeight;\r\n        mapCanvas.width = mapDiv.offsetWidth;\r\n        \r\n        // Google Maps\r\n        mapCanvas.style.pointerEvents = 'none';\r\n        mapDiv.insertBefore(mapCanvas, mapDiv.firstChild.nextSibling);\r\n\r\n        const canvas = document.getElementById(`mapCanvas${id}`);\r\n        return canvas;\r\n    }\r\n\r\n    /**\r\n     * Returns the map's current zoom level.\r\n     * @return {number} - The map's current zoom level.\r\n     */\r\n    getZoom() {\r\n        return this.bgMapObject.getZoom();\r\n    }\r\n\r\n    /**\r\n     * Returns the longitude(X) of the bounding box northwest corner.\r\n     * @return {number} - Longitude of northwest corner, measured in degrees.\r\n     * @see http://stackoverflow.com/a/6913505\r\n     */\r\n    getCenterLng() {\r\n         return ((((180 + this.bgMapObject.getCenter().lng()) % 360) + 360) % 360) - 180;\r\n    }\r\n\r\n    /**\r\n     * Returns the latitude(Y) of the bounding box northwest corner.\r\n     * @return {number} - Latitude of northwest corner, measured in degrees.\r\n     * @see http://stackoverflow.com/a/6913505\r\n     */\r\n    getCenterLat() {\r\n        return this.bgMapObject.getCenter().lat();\r\n    }\r\n\r\n    /**\r\n     * Adds a listener to a specified event type.\r\n     * @param {string} eventstr - The event type to add a listen for.\r\n     * @param {Function} eventfunction - The function to be called when the event is fired. The listener function is called with the data object passed to  fire , extended with  target and  type properties.\r\n     * @return {void} \r\n     */\r\n    addEventListener(eventstr, eventfunction) {\r\n        this.bgMapObject.addListener(eventstr, eventfunction);\r\n    }\r\n}",
    "static": true,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapGoogleMaps.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 230,
    "kind": "class",
    "name": "BGMapGoogleMaps",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapGoogleMaps.js",
    "static": true,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapGoogleMaps.js~BGMapGoogleMaps",
    "access": null,
    "export": true,
    "importPath": "gisplay-es6-webpack/src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapGoogleMaps.js",
    "importStyle": "{BGMapGoogleMaps}",
    "description": "Google Maps as background map provider. ",
    "see": [
      "https://developers.google.com/maps/documentation/javascript/3.exp/reference",
      ""
    ],
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "GoogleMapsBGMap"
      }
    ],
    "interface": false,
    "extends": [
      "BGMapWrapper"
    ]
  },
  {
    "__docId__": 231,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapGoogleMaps.js~BGMapGoogleMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapGoogleMaps.js~BGMapGoogleMaps#constructor",
    "access": null,
    "description": "Creates an instance of GoogleMapsBGMap.",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "GoogleMapsBGMap"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "bgmap",
        "description": "The Google Maps object."
      }
    ]
  },
  {
    "__docId__": 232,
    "kind": "method",
    "name": "getContainer",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapGoogleMaps.js~BGMapGoogleMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapGoogleMaps.js~BGMapGoogleMaps#getContainer",
    "access": null,
    "description": "Returns the map's containing HTML element.",
    "lineNumber": 26,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": "The map's HTML element container."
    }
  },
  {
    "__docId__": 233,
    "kind": "method",
    "name": "createCanvas",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapGoogleMaps.js~BGMapGoogleMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapGoogleMaps.js~BGMapGoogleMaps#createCanvas",
    "access": null,
    "description": "Given one id it creates a canvas object.",
    "see": [
      "http://stackoverflow.com/a/6862022"
    ],
    "lineNumber": 37,
    "todo": [
      "Understand case mapbox comment bellow."
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The id of the canvas to be created."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": "Canvas object where everything will be drawn."
    }
  },
  {
    "__docId__": 234,
    "kind": "method",
    "name": "getZoom",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapGoogleMaps.js~BGMapGoogleMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapGoogleMaps.js~BGMapGoogleMaps#getZoom",
    "access": null,
    "description": "Returns the map's current zoom level.",
    "lineNumber": 58,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The map's current zoom level."
    }
  },
  {
    "__docId__": 235,
    "kind": "method",
    "name": "getCenterLng",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapGoogleMaps.js~BGMapGoogleMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapGoogleMaps.js~BGMapGoogleMaps#getCenterLng",
    "access": null,
    "description": "Returns the longitude(X) of the bounding box northwest corner.",
    "see": [
      "http://stackoverflow.com/a/6913505"
    ],
    "lineNumber": 67,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Longitude of northwest corner, measured in degrees."
    }
  },
  {
    "__docId__": 236,
    "kind": "method",
    "name": "getCenterLat",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapGoogleMaps.js~BGMapGoogleMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapGoogleMaps.js~BGMapGoogleMaps#getCenterLat",
    "access": null,
    "description": "Returns the latitude(Y) of the bounding box northwest corner.",
    "see": [
      "http://stackoverflow.com/a/6913505"
    ],
    "lineNumber": 76,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Latitude of northwest corner, measured in degrees."
    }
  },
  {
    "__docId__": 237,
    "kind": "method",
    "name": "addEventListener",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapGoogleMaps.js~BGMapGoogleMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapGoogleMaps.js~BGMapGoogleMaps#addEventListener",
    "access": null,
    "description": "Adds a listener to a specified event type.",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "eventstr",
        "description": "The event type to add a listen for."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "eventfunction",
        "description": "The function to be called when the event is fired. The listener function is called with the data object passed to  fire , extended with  target and  type properties."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 238,
    "kind": "file",
    "name": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapHereMaps.js",
    "content": "import { BGMapWrapper } from '../../BGMapWrapper';\r\n\r\n/**\r\n * Here Maps as background map provider. \r\n * @export\r\n * @class HereMapsBGMap\r\n * @extends {BGMapWrapper}\r\n * @see https://developer.here.com/develop/javascript-api\r\n * @see https://developer.here.com/javascript-apis/documentation/v3/maps/topics/quick-start.html\r\n */\r\nexport class BGMapHereMaps extends BGMapWrapper {\r\n\r\n    /**\r\n     * Creates an instance of Here Maps.\r\n     * @param {Object} bgmap - The Here Maps object.\r\n     * @memberOf HereMapsBGMap\r\n     */\r\n    constructor(bgmap) {\r\n        super(bgmap);\r\n    }\r\n\r\n    /**\r\n     * Returns the map's containing HTML element.\r\n     * @return {HTMLElement} - The map's HTML element container.\r\n     */\r\n    getContainer() {\r\n        return this.bgMapObject.getElement();\r\n    }\r\n\r\n    /**\r\n     * Given one id it creates a canvas object.\r\n     * @todo Understand case mapbox comment bellow.\r\n     * @param {number} id - The id of the canvas to be created.\r\n     * @return {HTMLElement} Canvas object where everything will be drawn.\r\n     * @see http://stackoverflow.com/a/6862022\r\n     */\r\n    createCanvas(id) {\r\n        const mapCanvas = document.createElement('canvas');\r\n        mapCanvas.id = `mapCanvas${id}`;\r\n        mapCanvas.style.position = 'absolute';\r\n\r\n        const mapDiv = this.bgMapObject.getElement();//Could be: this.getContainer();\r\n        mapCanvas.height = mapDiv.offsetHeight;\r\n        mapCanvas.width = mapDiv.offsetWidth;\r\n        \r\n        // Here Maps\r\n        mapCanvas.style.pointerEvents = 'none';\r\n        mapDiv.insertBefore(mapCanvas, mapDiv.firstChild.nextSibling);\r\n\r\n        const canvas = document.getElementById(`mapCanvas${id}`);\r\n        return canvas;\r\n    }\r\n\r\n    /**\r\n     * Returns the map's current zoom level.\r\n     * @return {number} - The map's current zoom level.\r\n     */\r\n    getZoom() {\r\n        return this.bgMapObject.getZoom();\r\n    }\r\n\r\n    /**\r\n     * Returns the longitude(X) of the bounding box northwest corner.\r\n     * @return {number} - Longitude of northwest corner, measured in degrees.\r\n     * @see https://developer.here.com/api-explorer/maps-js/v3.0/infoBubbles/position-on-mouse-click\r\n     */\r\n    getCenterLng() {\r\n        return ((((180 + this.bgMapObject.getCenter().lng) % 360) + 360) % 360) - 180;\r\n    }\r\n\r\n    /**\r\n     * Returns the latitude(Y) of the bounding box northwest corner.\r\n     * @return {number} - Latitude of northwest corner, measured in degrees.\r\n     * @see https://developer.here.com/api-explorer/maps-js/v3.0/infoBubbles/position-on-mouse-click\r\n     */\r\n    getCenterLat() {\r\n        return this.bgMapObject.getCenter().lat;\r\n    }\r\n\r\n    /**\r\n     * Adds a listener to a specified event type.\r\n     * @param {string} eventstr - The event type to add a listen for.\r\n     * @param {Function} eventfunction - The function to be called when the event is fired. The listener function is called with the data object passed to  fire , extended with  target and  type properties.\r\n     * @return {void} \r\n     */\r\n    addEventListener(eventstr, eventfunction) {\r\n        this.bgMapObject.addEventListener(eventstr, eventfunction);\r\n    }\r\n}",
    "static": true,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapHereMaps.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 239,
    "kind": "class",
    "name": "BGMapHereMaps",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapHereMaps.js",
    "static": true,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapHereMaps.js~BGMapHereMaps",
    "access": null,
    "export": true,
    "importPath": "gisplay-es6-webpack/src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapHereMaps.js",
    "importStyle": "{BGMapHereMaps}",
    "description": "Here Maps as background map provider. ",
    "see": [
      "https://developer.here.com/develop/javascript-api",
      "https://developer.here.com/javascript-apis/documentation/v3/maps/topics/quick-start.html"
    ],
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "HereMapsBGMap"
      }
    ],
    "interface": false,
    "extends": [
      "BGMapWrapper"
    ]
  },
  {
    "__docId__": 240,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapHereMaps.js~BGMapHereMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapHereMaps.js~BGMapHereMaps#constructor",
    "access": null,
    "description": "Creates an instance of Here Maps.",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "HereMapsBGMap"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "bgmap",
        "description": "The Here Maps object."
      }
    ]
  },
  {
    "__docId__": 241,
    "kind": "method",
    "name": "getContainer",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapHereMaps.js~BGMapHereMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapHereMaps.js~BGMapHereMaps#getContainer",
    "access": null,
    "description": "Returns the map's containing HTML element.",
    "lineNumber": 26,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": "The map's HTML element container."
    }
  },
  {
    "__docId__": 242,
    "kind": "method",
    "name": "createCanvas",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapHereMaps.js~BGMapHereMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapHereMaps.js~BGMapHereMaps#createCanvas",
    "access": null,
    "description": "Given one id it creates a canvas object.",
    "see": [
      "http://stackoverflow.com/a/6862022"
    ],
    "lineNumber": 37,
    "todo": [
      "Understand case mapbox comment bellow."
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The id of the canvas to be created."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": "Canvas object where everything will be drawn."
    }
  },
  {
    "__docId__": 243,
    "kind": "method",
    "name": "getZoom",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapHereMaps.js~BGMapHereMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapHereMaps.js~BGMapHereMaps#getZoom",
    "access": null,
    "description": "Returns the map's current zoom level.",
    "lineNumber": 58,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The map's current zoom level."
    }
  },
  {
    "__docId__": 244,
    "kind": "method",
    "name": "getCenterLng",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapHereMaps.js~BGMapHereMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapHereMaps.js~BGMapHereMaps#getCenterLng",
    "access": null,
    "description": "Returns the longitude(X) of the bounding box northwest corner.",
    "see": [
      "https://developer.here.com/api-explorer/maps-js/v3.0/infoBubbles/position-on-mouse-click"
    ],
    "lineNumber": 67,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Longitude of northwest corner, measured in degrees."
    }
  },
  {
    "__docId__": 245,
    "kind": "method",
    "name": "getCenterLat",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapHereMaps.js~BGMapHereMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapHereMaps.js~BGMapHereMaps#getCenterLat",
    "access": null,
    "description": "Returns the latitude(Y) of the bounding box northwest corner.",
    "see": [
      "https://developer.here.com/api-explorer/maps-js/v3.0/infoBubbles/position-on-mouse-click"
    ],
    "lineNumber": 76,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Latitude of northwest corner, measured in degrees."
    }
  },
  {
    "__docId__": 246,
    "kind": "method",
    "name": "addEventListener",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapHereMaps.js~BGMapHereMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/BGMapHereMaps.js~BGMapHereMaps#addEventListener",
    "access": null,
    "description": "Adds a listener to a specified event type.",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "eventstr",
        "description": "The event type to add a listen for."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "eventfunction",
        "description": "The function to be called when the event is fired. The listener function is called with the data object passed to  fire , extended with  target and  type properties."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 247,
    "kind": "file",
    "name": "src/Gisplay/Maps/v11/1_BackgroundMaps/ChoroplethBingMaps.js",
    "content": "import { Choropleth } from '../../Types/Choropleth';\r\n\r\n/**\r\n * Choropleth implementation 06/03 - 23/03\r\n */\r\nexport class ChoroplethBingMaps extends Choropleth {\r\n\r\n    /**\r\n     * Creates an instance of Choropleth.\r\n     * @param {BGMapWrapper} bgmap - Background map object.\r\n     * @param {JSON} geometry - JSON object with the geometry that was read from the file.\r\n     * @param {Object} userOptions - User options to be used.\r\n     * @memberOf Choropleth\r\n     */\r\n    constructor(bgmap, geometry, userOptions) {\r\n        super(bgmap, geometry, userOptions);\r\n    }\r\n\r\n    /**\r\n     * M8) Setup all events used by the API. Right now the API uses: drag, zoom and click events.\r\n     * Pan = viewchange,  Zoom = mousewheel, click = click\r\n     * @param {number} mappos - This map id. \r\n     * @return {void}\r\n     * @see http://www.bing.com/api/maps/sdkrelease/mapcontrol/isdk#addEventHandler+JS \r\n     * @see http://stackoverflow.com/a/8591192/5869289\r\n     * @see http://stackoverflow.com/a/18675579/5869289\r\n     */\r\n    setupEvents(mappos) {\r\n        Microsoft.Maps.Events.addHandler(this.bGMap.getBackgroundMapProviderObject(), 'mousewheel', () => { this.draw(); });\r\n        Microsoft.Maps.Events.addHandler(this.bGMap.getBackgroundMapProviderObject(), 'viewchange', () => { this.draw(); });\r\n        Microsoft.Maps.Events.addHandler(this.bGMap.getBackgroundMapProviderObject(), 'click', (e) => {\r\n            let point = new Microsoft.Maps.Point(e.getX(), e.getY());\r\n            let loc = e.target.tryPixelToLocation(point);\r\n            const lon = loc.longitude;\r\n            const lat = loc.latitude;\r\n            \r\n            if (this.rtree !== undefined) \r\n                this.searchRTree(lon, lat);\r\n            if (this.kdtree !== undefined) \r\n                this.searchKdTree(lon, lat);\r\n        });\r\n    }\r\n}",
    "static": true,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/ChoroplethBingMaps.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 248,
    "kind": "class",
    "name": "ChoroplethBingMaps",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/ChoroplethBingMaps.js",
    "static": true,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/ChoroplethBingMaps.js~ChoroplethBingMaps",
    "access": null,
    "export": true,
    "importPath": "gisplay-es6-webpack/src/Gisplay/Maps/v11/1_BackgroundMaps/ChoroplethBingMaps.js",
    "importStyle": "{ChoroplethBingMaps}",
    "description": "Choropleth implementation 06/03 - 23/03",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "src/Gisplay/Maps/Types/Choropleth.js~Choropleth"
    ]
  },
  {
    "__docId__": 249,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/ChoroplethBingMaps.js~ChoroplethBingMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/ChoroplethBingMaps.js~ChoroplethBingMaps#constructor",
    "access": null,
    "description": "Creates an instance of Choropleth.",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Choropleth"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "BGMapWrapper"
        ],
        "spread": false,
        "optional": false,
        "name": "bgmap",
        "description": "Background map object."
      },
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "geometry",
        "description": "JSON object with the geometry that was read from the file."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "userOptions",
        "description": "User options to be used."
      }
    ]
  },
  {
    "__docId__": 250,
    "kind": "method",
    "name": "setupEvents",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/ChoroplethBingMaps.js~ChoroplethBingMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/ChoroplethBingMaps.js~ChoroplethBingMaps#setupEvents",
    "access": null,
    "description": "M8) Setup all events used by the API. Right now the API uses: drag, zoom and click events.\nPan = viewchange,  Zoom = mousewheel, click = click",
    "see": [
      "http://www.bing.com/api/maps/sdkrelease/mapcontrol/isdk#addEventHandler+JS ",
      "http://stackoverflow.com/a/8591192/5869289",
      "http://stackoverflow.com/a/18675579/5869289"
    ],
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "mappos",
        "description": "This map id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 251,
    "kind": "file",
    "name": "src/Gisplay/Maps/v11/1_BackgroundMaps/ChoroplethGoogleMaps.js",
    "content": "import { Choropleth } from '../../Types/Choropleth';\r\n\r\n/**\r\n * Choropleth implementation 06/03 - 23/03\r\n */\r\nexport class ChoroplethGoogleMaps extends Choropleth {\r\n\r\n    /**\r\n     * Creates an instance of Choropleth.\r\n     * @param {BGMapWrapper} bgmap - Background map object.\r\n     * @param {JSON} geometry - JSON object with the geometry that was read from the file.\r\n     * @param {Object} userOptions - User options to be used.\r\n     * @memberOf Choropleth\r\n     */\r\n    constructor(bgmap, geometry, userOptions) {\r\n        super(bgmap, geometry, userOptions);\r\n    }\r\n\r\n    /**\r\n     * M8) Setup all events used by the API. Right now the API uses: drag, zoom and click events.\r\n     * Pan = drag, Zoom = zoom_changed, click = click\r\n     * @param {number} mappos - This map id. \r\n     * @return {void}\r\n     * @see https://developers.google.com/maps/documentation/javascript/events\r\n     */\r\n    setupEvents(mappos) {\r\n        /*if(!this.gisplayOptions.interactive && this.gisplayOptions.mapOnClickFunction === undefined)\r\n            return;*/\r\n        this.bGMap.addEventListener('zoom_changed', () => { this.draw(); });\r\n        //this.bGMap.addEventListener('center_changed', () => { this.draw(); });\r\n        this.bGMap.addEventListener('drag', () => { this.draw(); });\r\n        this.bGMap.addEventListener('click', e => {\r\n            const lat = e.latLng.lat();\r\n            const lon = e.latLng.lng();\r\n            \r\n            if (this.rtree !== undefined)\r\n                this.searchRTree(lon, lat);\r\n            if (this.kdtree !== undefined)\r\n                this.searchKdTree(lon, lat);\r\n        });\r\n    }\r\n}",
    "static": true,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/ChoroplethGoogleMaps.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 252,
    "kind": "class",
    "name": "ChoroplethGoogleMaps",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/ChoroplethGoogleMaps.js",
    "static": true,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/ChoroplethGoogleMaps.js~ChoroplethGoogleMaps",
    "access": null,
    "export": true,
    "importPath": "gisplay-es6-webpack/src/Gisplay/Maps/v11/1_BackgroundMaps/ChoroplethGoogleMaps.js",
    "importStyle": "{ChoroplethGoogleMaps}",
    "description": "Choropleth implementation 06/03 - 23/03",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "src/Gisplay/Maps/Types/Choropleth.js~Choropleth"
    ]
  },
  {
    "__docId__": 253,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/ChoroplethGoogleMaps.js~ChoroplethGoogleMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/ChoroplethGoogleMaps.js~ChoroplethGoogleMaps#constructor",
    "access": null,
    "description": "Creates an instance of Choropleth.",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Choropleth"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "BGMapWrapper"
        ],
        "spread": false,
        "optional": false,
        "name": "bgmap",
        "description": "Background map object."
      },
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "geometry",
        "description": "JSON object with the geometry that was read from the file."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "userOptions",
        "description": "User options to be used."
      }
    ]
  },
  {
    "__docId__": 254,
    "kind": "method",
    "name": "setupEvents",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/ChoroplethGoogleMaps.js~ChoroplethGoogleMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/ChoroplethGoogleMaps.js~ChoroplethGoogleMaps#setupEvents",
    "access": null,
    "description": "M8) Setup all events used by the API. Right now the API uses: drag, zoom and click events.\nPan = drag, Zoom = zoom_changed, click = click",
    "see": [
      "https://developers.google.com/maps/documentation/javascript/events"
    ],
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "mappos",
        "description": "This map id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 255,
    "kind": "file",
    "name": "src/Gisplay/Maps/v11/1_BackgroundMaps/ChoroplethHereMaps.js",
    "content": "import { Choropleth } from '../../Types/Choropleth';\r\n\r\n/**\r\n * Choropleth implementation 06/03 - 23/03\r\n */\r\nexport class ChoroplethHereMaps extends Choropleth {\r\n\r\n    /**\r\n     * Creates an instance of Choropleth.\r\n     * @param {BGMapWrapper} bgmap - Background map object.\r\n     * @param {JSON} geometry - JSON object with the geometry that was read from the file.\r\n     * @param {Object} userOptions - User options to be used.\r\n     * @memberOf Choropleth\r\n     */\r\n    constructor(bgmap, geometry, userOptions) {\r\n        super(bgmap, geometry, userOptions);\r\n    }\r\n\r\n    /**\r\n     * M8) Setup all events used by the API. Right now the API uses: drag, zoom and click events.\r\n     * Pan = drag, Zoom = mapviewchange, click = tap\r\n     * @param {number} mappos - This map id. \r\n     * @return {void}\r\n     * @see https://developer.here.com/javascript-apis/documentation/v3/maps/topics/events.html\r\n     */\r\n    setupEvents(mappos) {\r\n        this.bGMap.addEventListener('mapviewchange', () => { this.draw(); });\r\n        this.bGMap.addEventListener('drag', () => { this.draw(); });\r\n        this.bGMap.addEventListener('tap', e => {\r\n            let coords = this.bGMap.getBackgroundMapProviderObject().screenToGeo(e.currentPointer.viewportX, e.currentPointer.viewportY);\r\n            const lon = coords.lng;\r\n            const lat = coords.lat;\r\n\r\n            if (this.rtree !== undefined)\r\n                this.searchRTree(lon, lat);\r\n            if (this.kdtree !== undefined)\r\n                this.searchKdTree(lon, lat);\r\n        });\r\n    }\r\n}",
    "static": true,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/ChoroplethHereMaps.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 256,
    "kind": "class",
    "name": "ChoroplethHereMaps",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/ChoroplethHereMaps.js",
    "static": true,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/ChoroplethHereMaps.js~ChoroplethHereMaps",
    "access": null,
    "export": true,
    "importPath": "gisplay-es6-webpack/src/Gisplay/Maps/v11/1_BackgroundMaps/ChoroplethHereMaps.js",
    "importStyle": "{ChoroplethHereMaps}",
    "description": "Choropleth implementation 06/03 - 23/03",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "src/Gisplay/Maps/Types/Choropleth.js~Choropleth"
    ]
  },
  {
    "__docId__": 257,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/ChoroplethHereMaps.js~ChoroplethHereMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/ChoroplethHereMaps.js~ChoroplethHereMaps#constructor",
    "access": null,
    "description": "Creates an instance of Choropleth.",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Choropleth"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "BGMapWrapper"
        ],
        "spread": false,
        "optional": false,
        "name": "bgmap",
        "description": "Background map object."
      },
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "geometry",
        "description": "JSON object with the geometry that was read from the file."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "userOptions",
        "description": "User options to be used."
      }
    ]
  },
  {
    "__docId__": 258,
    "kind": "method",
    "name": "setupEvents",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/ChoroplethHereMaps.js~ChoroplethHereMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/ChoroplethHereMaps.js~ChoroplethHereMaps#setupEvents",
    "access": null,
    "description": "M8) Setup all events used by the API. Right now the API uses: drag, zoom and click events.\nPan = drag, Zoom = mapviewchange, click = tap",
    "see": [
      "https://developer.here.com/javascript-apis/documentation/v3/maps/topics/events.html"
    ],
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "mappos",
        "description": "This map id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 259,
    "kind": "file",
    "name": "src/Gisplay/Maps/v11/1_BackgroundMaps/DotMapGoogleMaps.js",
    "content": "import { DotMap } from '../../Types/DotMap';\r\n\r\n/**\r\n * DotMap Google Maps\r\n */\r\nexport class DotMapGoogleMaps extends DotMap {\r\n\r\n    /**\r\n     * Creates an instance of DotMapGoogleMaps.\r\n     * @param {BGMapWrapper} bgmap - Background map object.\r\n     * @param {JSON} geometry - JSON object with the geometry that was read from the file.\r\n     * @param {Object} userOptions - User options to be used.\r\n     * @memberOf Choropleth\r\n     */\r\n    constructor(bgmap, geometry, userOptions) {\r\n        super(bgmap, geometry, userOptions);\r\n    }\r\n\r\n    /**\r\n     * M8) Setup all events used by the API. Right now the API uses: drag, zoom and click events.\r\n     * Pan = drag, Zoom = zoom_changed, click = click\r\n     * @param {number} mappos - This map id. \r\n     * @return {void}\r\n     * @see https://developers.google.com/maps/documentation/javascript/events\r\n     */\r\n    setupEvents(mappos) {\r\n        /*if(!this.gisplayOptions.interactive && this.gisplayOptions.mapOnClickFunction === undefined)\r\n            return;*/\r\n        this.bGMap.addEventListener('zoom_changed', () => { this.draw(); });\r\n        this.bGMap.addEventListener('center_changed', () => { this.draw(); });\r\n        this.bGMap.addEventListener('drag', () => { this.draw(); });\r\n        this.bGMap.addEventListener('click', e => {\r\n            const lat = e.latLng.lat();\r\n            const lon = e.latLng.lng();\r\n            if (this.rtree !== undefined)\r\n                this.searchRTree(lon, lat);\r\n            if (this.kdtree !== undefined)\r\n                this.searchKdTree(lon, lat);\r\n        });\r\n    }\r\n}",
    "static": true,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/DotMapGoogleMaps.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 260,
    "kind": "class",
    "name": "DotMapGoogleMaps",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/DotMapGoogleMaps.js",
    "static": true,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/DotMapGoogleMaps.js~DotMapGoogleMaps",
    "access": null,
    "export": true,
    "importPath": "gisplay-es6-webpack/src/Gisplay/Maps/v11/1_BackgroundMaps/DotMapGoogleMaps.js",
    "importStyle": "{DotMapGoogleMaps}",
    "description": "DotMap Google Maps",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "src/Gisplay/Maps/Types/DotMap.js~DotMap"
    ]
  },
  {
    "__docId__": 261,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/DotMapGoogleMaps.js~DotMapGoogleMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/DotMapGoogleMaps.js~DotMapGoogleMaps#constructor",
    "access": null,
    "description": "Creates an instance of DotMapGoogleMaps.",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@memberOf",
        "tagValue": "Choropleth"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "BGMapWrapper"
        ],
        "spread": false,
        "optional": false,
        "name": "bgmap",
        "description": "Background map object."
      },
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "geometry",
        "description": "JSON object with the geometry that was read from the file."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "userOptions",
        "description": "User options to be used."
      }
    ]
  },
  {
    "__docId__": 262,
    "kind": "method",
    "name": "setupEvents",
    "memberof": "src/Gisplay/Maps/v11/1_BackgroundMaps/DotMapGoogleMaps.js~DotMapGoogleMaps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Gisplay/Maps/v11/1_BackgroundMaps/DotMapGoogleMaps.js~DotMapGoogleMaps#setupEvents",
    "access": null,
    "description": "M8) Setup all events used by the API. Right now the API uses: drag, zoom and click events.\nPan = drag, Zoom = zoom_changed, click = click",
    "see": [
      "https://developers.google.com/maps/documentation/javascript/events"
    ],
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "mappos",
        "description": "This map id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 263,
    "kind": "file",
    "name": "src/Gisplay/Maps/WebglUtils.js",
    "content": "/**\r\n * Class with static methods that will help with WebGL related stuff(Matrices, web mercator projection and shaders).\r\n * Always remeber WebGL is column major when reading the matrix code.\r\n * @see http://ptgmedia.pearsoncmg.com/images/chap3_9780321902924/elementLinks/03fig27.jpg\r\n * @static \r\n * @class WebGLUtils\r\n */\r\nexport class WebGLUtils {\r\n\r\n    /**\r\n     * Calculates the scale and offset(X and Y) for the Web Mercator projection.\r\n     * @static\r\n     * @param {number} longitudeCenter - Longitude of the given position.\r\n     * @param {number} latitudeCenter - Latitude of the given position.\r\n     * @param {number} zoom - Current zoom level of the background map.\r\n     * @param {number} tileSize - The size of each tile in the background map. Usually is 256. If different should be given in the API options.\r\n     * @param {number} width - Width of the current canvas.\r\n     * @param {number} height - Height of the current canvas.\r\n     * @returns {{scale: number, offsetX: number, offsetY: number}} - Returns the scale, offsetX and offsetY of the point given using the Web Mercator projection.\r\n     * @see https://bl.ocks.org/enjalot/fb7f3d696167e9b83a72#viewport.js\r\n     * @see https://en.wikipedia.org/wiki/Web_Mercator\r\n     * @memberOf WebGLUtils\r\n     */\r\n    static webMercatorProjection(longitudeCenter, latitudeCenter, zoom, tileSize, width, height) {\r\n        // console.log(longitudeCenter, latitudeCenter, zoom, tileSize,  width, height);\r\n        let PI = Math.PI;\r\n        let scale = ((tileSize / 2) / PI) * Math.pow(2, zoom);\r\n        let lambda = longitudeCenter * (PI / 180); // Convert longitude to radians\r\n        let phi = latitudeCenter * (PI / 180); // Convert latitude to radians\r\n\r\n        let xCenter = scale * (lambda + PI);\r\n        let yCenter = scale * (PI - Math.log(Math.tan((PI / 4) + (phi / 2))));\r\n        let offsetX = (width / 2) - xCenter;\r\n        let offsetY = (height / 2) - yCenter;\r\n\r\n\r\n        return { scale: scale, offsetX: offsetX, offsetY: offsetY };\r\n    }\r\n\r\n    /**\r\n     * This is the result matrix from multiplication M1*M2*M3\r\n     * @static\r\n     * @param {number} scale - The scale calculated with WebMercator projection.\r\n     * @param {number} width - The width of the canvas.\r\n     * @param {number} height - The height of the canvas.\r\n     * @param {number} offsetX - The offsetX calculated with WebMercator projection.\r\n     * @param {number} offsetY - The offsetY calculated with WebMercator projection.\r\n     * @returns {Float32Array} The resulting matrix (M1*M2*M3) in a single matrix.\r\n     * @see Rui's thesis\r\n     * @memberOf WebGLUtils\r\n     */\r\n    static finalMatrix(scale, width, height, offsetX, offsetY) {\r\n        let p0 = (2 * Math.PI * scale) / (width * 180);\r\n        let p2 = ((2 * Math.PI * scale) / width) + ((2 * offsetX) / width) - 1;\r\n        let p4 = (2 * scale) / height;\r\n        let p5 = ((2 * offsetY / height) - 1);\r\n        return new Float32Array([\r\n            p0, 0, 0,\r\n            0, p4, 0,\r\n            p2, p5, 1\r\n        ]);\r\n    }\r\n\r\n    /**\r\n     * Creates shaders(Vertex + Fragment) source code.\r\n     * @static\r\n     * @returns {{vertexCode: string, fragmentCode: string}} - The code for the vertex and fragment shaders.\r\n     * @memberOf WebGLUtils\r\n     */\r\n    static generateShadersSourceCode() {\r\n        let vertexSourceCode =\r\n            `\r\n            #define PI radians(180.0)\r\n\r\n            attribute vec2 coords;\r\n            uniform mat3 M;\r\n            \r\n         \tattribute float aPointSize; \r\n         \tattribute float a_opacity; \r\n         \tvarying float v_opacity; \r\n\r\n         \tvoid main() {\r\n                float phi = coords[1] * (PI / 180.0);\r\n                float YValue = PI -log( tan((PI/4.0) + phi/2.0) );\r\n                vec3 f = vec3(coords[0], YValue, 1.0);\r\n                vec3 pixeis = M * f;\r\n                float X = pixeis[0];\r\n                float Y = -(pixeis[1]);\r\n                gl_Position = vec4(X, Y , 0.0, 1.0);\r\n         \t\t\r\n         \t\tgl_PointSize = aPointSize; \r\n                v_opacity = a_opacity; \r\n            }\r\n        `;\r\n\r\n        let fragmentSourceCode =\r\n            ` \r\n            precision mediump float;\r\n         \tuniform vec4 u_color;\r\n         \tvarying float v_opacity; \r\n           \tuniform float isPoint;\r\n            void main() {\r\n         \t\tfloat border = 0.5;\r\n         \t\tfloat radius = 0.5;\r\n         \t\tfloat centerDist = length(gl_PointCoord - 0.5);\r\n         \t\tfloat alpha;\r\n         \t\tif (u_color[3] == -1.0)    \r\n         \t\t\talpha =  v_opacity * step(centerDist, radius);\r\n         \t\telse \r\n         \t\t\talpha =  u_color[3] * step(centerDist, radius);\r\n\r\n         \t\tif(isPoint == 1.0 ) {\r\n         \t\t    if (alpha < 0.1) discard;\r\n         \t\t\t    gl_FragColor = vec4(u_color[0], u_color[1], u_color[2], alpha);\r\n                }\r\n           \t\telse\r\n         \t\t\tgl_FragColor = vec4(u_color[0], u_color[1], u_color[2], u_color[3]);\r\n         \t}\r\n        `;\r\n        return { vertexCode: vertexSourceCode, fragmentCode: fragmentSourceCode };\r\n    }\r\n\r\n    /**\r\n     * Creates and compiles a shader.\r\n     * @static\r\n     * @param {string} type - Type of shader. Options are: VERTEX_SHADER or FRAGMENT_SHADER;\r\n     * @param {string} source_code - The shader source code.\r\n     * @param {Map#_webgl} webgl - Webgl object used by the Map class.\r\n     * @returns {WebGLShader} - The shader(vertex of fragment).\r\n     * @memberOf WebGLUtils\r\n     */\r\n    static createAndCompileShader(type, source_code, webgl) {\r\n        let shader = webgl.gl.createShader(type);\r\n        webgl.gl.shaderSource(shader, source_code);\r\n        webgl.gl.compileShader(shader);\r\n        return shader;\r\n    }\r\n\r\n    /**\r\n     * Initializes:\r\n     * 1)WebGLProgram, 2) Generates shadders, 3) Attaches shaders to the program, 4) links program, 5) uses program.\r\n     * @static\r\n     * @param {{gl: WebGLRenderingContext, program: WebGLProgram}} webgl \r\n     * @returns {void}\r\n     * @memberOf WebGLUtils\r\n     */\r\n    static createWebGLProgram(webgl) {\r\n        webgl.program = webgl.gl.createProgram();\r\n\r\n        const source_code = this.generateShadersSourceCode();\r\n        const vertex_shader = this.createAndCompileShader(webgl.gl.VERTEX_SHADER, source_code.vertexCode, webgl);\r\n        const fragment_shader = this.createAndCompileShader(webgl.gl.FRAGMENT_SHADER, source_code.fragmentCode, webgl);\r\n\r\n        webgl.gl.attachShader(webgl.program, vertex_shader);\r\n        webgl.gl.attachShader(webgl.program, fragment_shader);\r\n\r\n        webgl.gl.linkProgram(webgl.program);\r\n        webgl.gl.useProgram(webgl.program);\r\n    }\r\n\r\n\r\n    /** ########################    DEPRECATED ZONE ######################## */\r\n    /**\r\n     * Creates the M1 Matrix. \r\n     * This matrix is used to convert the result pixel to a position between 0 and 1(2/width and 2/height scaling) \r\n     * and after that convert to a position between -1 and 1(-1 translation).\r\n     * @static\r\n     * @param {number} width - Width of the canvas.\r\n     * @param {number} height - Height of the canvas.\r\n     * @returns {Float32Array} The matrix M1 to be used to calculate each point/vertex position.\r\n     * @see Documentation of Rui's thesis. \r\n     * @deprecated finalMatrix(..) method is used instead.\r\n     * @memberOf WebGLUtils\r\n     */\r\n    static createM1(width, height) {\r\n        let w = 2 / width;\r\n        let h = 2 / height;\r\n        return new Float32Array(\r\n            [\r\n                w, 0, -1,\r\n                0, h, -1,\r\n                0, 0, 1\r\n            ]\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Creates the M2 Matrix.\r\n     * This matrix is used to calculate the positions of the pixel using the Web Mercator projection.\r\n     * @static \r\n     * @param {number} scale \r\n     * @param {number} offsetX \r\n     * @param {number} offsetY \r\n     * @returns {Float32Array} The matrix M2 to be used to calculate each point/vertex position.\r\n     * @see https://bl.ocks.org/enjalot/fb7f3d696167e9b83a72#viewport.js\r\n     * @see Documentation of Rui's thesis. \r\n     * @deprecated finalMatrix(..) method is used instead.\r\n     * @memberOf WebGLUtils\r\n     */\r\n    static createM2(scale, offsetX, offsetY) {\r\n        let s = scale;\r\n        let x = offsetX;\r\n        let y = offsetY;\r\n        return new Float32Array(\r\n            [\r\n                s, 0, x,\r\n                0, s, y,\r\n                0, 0, 1\r\n            ]\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Creates the M3 Matrix.\r\n     * This matrix is used to calculate the positions of the pixel using the Web Mercator projection.\r\n     * @static\r\n     * @returns {Float32Array}  The matrix M3 to be used to calculate each point/vertex position.\r\n     * @see Documentation of Rui's thesis.\r\n     * @deprecated finalMatrix(..) method is used instead.\r\n     * @memberOf WebGLUtils\r\n     */\r\n    static createM3() {\r\n        let p = Math.PI;\r\n        let q = p / 180;\r\n        return new Float32Array(\r\n            [\r\n                q, 0, p,\r\n                0, 1, 0,\r\n                0, 0, 1\r\n            ]\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Performs Matrix multiplication between two matrices.\r\n     * @static\r\n     * @param {Float32Array} M1 - The M1 matrix. \r\n     * @param {Float32Array} M2 - The M2 matrix.\r\n     * @returns {Float32Array} a matrix which is the result of multiplying M1 by M2.\r\n     * @deprecated finalMatrix(..) method is used instead.\r\n     * @memberOf WebGLUtils\r\n     */\r\n    static matrixMultiplication(M1, M2) {\r\n        let res = new Float32Array([0, 0, 0, 0, 0, 0, 0, 0, 0]);\r\n        res[0] = M1[0] * M2[0] + M1[1] * M2[3] + M1[2] * M2[6];\r\n        res[1] = M1[0] * M2[1] + M1[1] * M2[4] + M1[2] * M2[7];\r\n        res[2] = M1[0] * M2[2] + M1[1] * M2[5] + M1[2] * M2[8];\r\n\r\n        res[3] = M1[3] * M2[0] + M1[4] * M2[3] + M1[5] * M2[6];\r\n        res[4] = M1[3] * M2[1] + M1[4] * M2[4] + M1[5] * M2[7];\r\n        res[5] = M1[3] * M2[2] + M1[4] * M2[5] + M1[5] * M2[8];\r\n\r\n        res[6] = M1[6] * M2[0] + M1[7] * M2[3] + M1[8] * M2[6];\r\n        res[7] = M1[6] * M2[1] + M1[7] * M2[4] + M1[8] * M2[7];\r\n        res[8] = M1[6] * M2[2] + M1[7] * M2[5] + M1[8] * M2[8];\r\n        return res;\r\n    }\r\n}",
    "static": true,
    "longname": "src/Gisplay/Maps/WebglUtils.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 264,
    "kind": "class",
    "name": "WebGLUtils",
    "memberof": "src/Gisplay/Maps/WebglUtils.js",
    "static": true,
    "longname": "src/Gisplay/Maps/WebglUtils.js~WebGLUtils",
    "access": null,
    "export": true,
    "importPath": "gisplay-es6-webpack/src/Gisplay/Maps/WebglUtils.js",
    "importStyle": "{WebGLUtils}",
    "description": "Class with static methods that will help with WebGL related stuff(Matrices, web mercator projection and shaders).\nAlways remeber WebGL is column major when reading the matrix code.",
    "see": [
      "http://ptgmedia.pearsoncmg.com/images/chap3_9780321902924/elementLinks/03fig27.jpg"
    ],
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "WebGLUtils"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 265,
    "kind": "method",
    "name": "webMercatorProjection",
    "memberof": "src/Gisplay/Maps/WebglUtils.js~WebGLUtils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Gisplay/Maps/WebglUtils.js~WebGLUtils.webMercatorProjection",
    "access": null,
    "description": "Calculates the scale and offset(X and Y) for the Web Mercator projection.",
    "see": [
      "https://bl.ocks.org/enjalot/fb7f3d696167e9b83a72#viewport.js",
      "https://en.wikipedia.org/wiki/Web_Mercator"
    ],
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{scale: number, offsetX: number, offsetY: number}} - Returns the scale, offsetX and offsetY of the point given using the Web Mercator projection."
      },
      {
        "tagName": "@memberOf",
        "tagValue": "WebGLUtils"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "longitudeCenter",
        "description": "Longitude of the given position."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "latitudeCenter",
        "description": "Latitude of the given position."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "zoom",
        "description": "Current zoom level of the background map."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "tileSize",
        "description": "The size of each tile in the background map. Usually is 256. If different should be given in the API options."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "width",
        "description": "Width of the current canvas."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "height",
        "description": "Height of the current canvas."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{scale: number, offsetX: number, offsetY: number}"
      ],
      "spread": false,
      "description": "Returns the scale, offsetX and offsetY of the point given using the Web Mercator projection."
    }
  },
  {
    "__docId__": 266,
    "kind": "method",
    "name": "finalMatrix",
    "memberof": "src/Gisplay/Maps/WebglUtils.js~WebGLUtils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Gisplay/Maps/WebglUtils.js~WebGLUtils.finalMatrix",
    "access": null,
    "description": "This is the result matrix from multiplication M1*M2*M3",
    "see": [
      "Rui's thesis"
    ],
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Float32Array} The resulting matrix (M1*M2*M3) in a single matrix."
      },
      {
        "tagName": "@memberOf",
        "tagValue": "WebGLUtils"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "scale",
        "description": "The scale calculated with WebMercator projection."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "width",
        "description": "The width of the canvas."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "height",
        "description": "The height of the canvas."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "offsetX",
        "description": "The offsetX calculated with WebMercator projection."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "offsetY",
        "description": "The offsetY calculated with WebMercator projection."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Float32Array"
      ],
      "spread": false,
      "description": "The resulting matrix (M1*M2*M3) in a single matrix."
    }
  },
  {
    "__docId__": 267,
    "kind": "method",
    "name": "generateShadersSourceCode",
    "memberof": "src/Gisplay/Maps/WebglUtils.js~WebGLUtils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Gisplay/Maps/WebglUtils.js~WebGLUtils.generateShadersSourceCode",
    "access": null,
    "description": "Creates shaders(Vertex + Fragment) source code.",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{vertexCode: string, fragmentCode: string}} - The code for the vertex and fragment shaders."
      },
      {
        "tagName": "@memberOf",
        "tagValue": "WebGLUtils"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "{vertexCode: string, fragmentCode: string}"
      ],
      "spread": false,
      "description": "The code for the vertex and fragment shaders."
    }
  },
  {
    "__docId__": 268,
    "kind": "method",
    "name": "createAndCompileShader",
    "memberof": "src/Gisplay/Maps/WebglUtils.js~WebGLUtils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Gisplay/Maps/WebglUtils.js~WebGLUtils.createAndCompileShader",
    "access": null,
    "description": "Creates and compiles a shader.",
    "lineNumber": 132,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{WebGLShader} - The shader(vertex of fragment)."
      },
      {
        "tagName": "@memberOf",
        "tagValue": "WebGLUtils"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Type of shader. Options are: VERTEX_SHADER or FRAGMENT_SHADER;"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "source_code",
        "description": "The shader source code."
      },
      {
        "nullable": null,
        "types": [
          "Map#_webgl"
        ],
        "spread": false,
        "optional": false,
        "name": "webgl",
        "description": "Webgl object used by the Map class."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "WebGLShader"
      ],
      "spread": false,
      "description": "The shader(vertex of fragment)."
    }
  },
  {
    "__docId__": 269,
    "kind": "method",
    "name": "createWebGLProgram",
    "memberof": "src/Gisplay/Maps/WebglUtils.js~WebGLUtils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Gisplay/Maps/WebglUtils.js~WebGLUtils.createWebGLProgram",
    "access": null,
    "description": "Initializes:\n1)WebGLProgram, 2) Generates shadders, 3) Attaches shaders to the program, 4) links program, 5) uses program.",
    "lineNumber": 147,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "WebGLUtils"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "{gl: WebGLRenderingContext, program: WebGLProgram}"
        ],
        "spread": false,
        "optional": false,
        "name": "webgl",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 270,
    "kind": "method",
    "name": "createM1",
    "memberof": "src/Gisplay/Maps/WebglUtils.js~WebGLUtils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Gisplay/Maps/WebglUtils.js~WebGLUtils.createM1",
    "access": null,
    "description": "Creates the M1 Matrix. \nThis matrix is used to convert the result pixel to a position between 0 and 1(2/width and 2/height scaling) \nand after that convert to a position between -1 and 1(-1 translation).",
    "see": [
      "Documentation of Rui's thesis. "
    ],
    "lineNumber": 175,
    "deprecated": "finalMatrix(..) method is used instead.",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Float32Array} The matrix M1 to be used to calculate each point/vertex position."
      },
      {
        "tagName": "@memberOf",
        "tagValue": "WebGLUtils"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "width",
        "description": "Width of the canvas."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "height",
        "description": "Height of the canvas."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Float32Array"
      ],
      "spread": false,
      "description": "The matrix M1 to be used to calculate each point/vertex position."
    }
  },
  {
    "__docId__": 271,
    "kind": "method",
    "name": "createM2",
    "memberof": "src/Gisplay/Maps/WebglUtils.js~WebGLUtils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Gisplay/Maps/WebglUtils.js~WebGLUtils.createM2",
    "access": null,
    "description": "Creates the M2 Matrix.\nThis matrix is used to calculate the positions of the pixel using the Web Mercator projection.",
    "see": [
      "https://bl.ocks.org/enjalot/fb7f3d696167e9b83a72#viewport.js",
      "Documentation of Rui's thesis. "
    ],
    "lineNumber": 200,
    "deprecated": "finalMatrix(..) method is used instead.",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Float32Array} The matrix M2 to be used to calculate each point/vertex position."
      },
      {
        "tagName": "@memberOf",
        "tagValue": "WebGLUtils"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "scale",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "offsetX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "offsetY",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Float32Array"
      ],
      "spread": false,
      "description": "The matrix M2 to be used to calculate each point/vertex position."
    }
  },
  {
    "__docId__": 272,
    "kind": "method",
    "name": "createM3",
    "memberof": "src/Gisplay/Maps/WebglUtils.js~WebGLUtils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Gisplay/Maps/WebglUtils.js~WebGLUtils.createM3",
    "access": null,
    "description": "Creates the M3 Matrix.\nThis matrix is used to calculate the positions of the pixel using the Web Mercator projection.",
    "see": [
      "Documentation of Rui's thesis."
    ],
    "lineNumber": 222,
    "deprecated": "finalMatrix(..) method is used instead.",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Float32Array}  The matrix M3 to be used to calculate each point/vertex position."
      },
      {
        "tagName": "@memberOf",
        "tagValue": "WebGLUtils"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Float32Array"
      ],
      "spread": false,
      "description": "The matrix M3 to be used to calculate each point/vertex position."
    }
  },
  {
    "__docId__": 273,
    "kind": "method",
    "name": "matrixMultiplication",
    "memberof": "src/Gisplay/Maps/WebglUtils.js~WebGLUtils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Gisplay/Maps/WebglUtils.js~WebGLUtils.matrixMultiplication",
    "access": null,
    "description": "Performs Matrix multiplication between two matrices.",
    "lineNumber": 243,
    "deprecated": "finalMatrix(..) method is used instead.",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Float32Array} a matrix which is the result of multiplying M1 by M2."
      },
      {
        "tagName": "@memberOf",
        "tagValue": "WebGLUtils"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "M1",
        "description": "The M1 matrix."
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "M2",
        "description": "The M2 matrix."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Float32Array"
      ],
      "spread": false,
      "description": "a matrix which is the result of multiplying M1 by M2."
    }
  },
  {
    "__docId__": 274,
    "kind": "file",
    "name": "src/gisplayv1.js",
    "content": "/**\r\n * This file is the entry point for the Gisplay API\r\n */\r\nimport { Gisplay } from './Gisplay/Gisplay';\r\n\r\nmodule.exports = {\r\n\r\n    /** ######################### CHOROPLETH MAPS ################################# */\r\n    //Choropleth\r\n    createBGMap: function () {\r\n        console.log(\"Start gisplayv2. TESTE workflow 25/03.\");\r\n        L.mapbox.accessToken = 'pk.eyJ1IjoibG9sYXNkIiwiYSI6ImNpbmxsZDJkejAwOHR2Zm0yZHVwOWV1ejEifQ.SJ6CupBlW0gPic0n-HgY6w';\r\n        window.map = L.mapbox.map('map', 'mapbox.streets').setView([49.36855556, -81.66371667], 4);\r\n    },\r\n\r\n    startChoropleth: function () {\r\n        var gisplay = new Gisplay();\r\n        var options = {\r\n            colorScheme: [\"white\", \"yellow\", \"orange\", \"red\"],\r\n            numberOfClasses: 4,\r\n            attr: 'f3',\r\n            legendTitle: 'Fatals'\r\n        };\r\n        var time = Date.now();\r\n\r\n        var reader = new FileReader();\r\n        reader.onloadend = function () {\r\n            var data = JSON.parse(reader.result);\r\n            var datareadtimestamp = Date.now();\r\n            console.log(\"tempo de leitura do ficheiro: \" + (datareadtimestamp - time) / 1000 + \" segundos\");\r\n\r\n            gisplay.makeChoropleth(window.map, data, options);\r\n            console.log(\"tempo gisplay: \" + (Date.now() - datareadtimestamp) / 1000 + \" segundos\");\r\n            console.log(\"tempo total: \" + (Date.now() - time) / 1000 + \" segundos\");\r\n        };\r\n        reader.readAsText(document.getElementById(\"file\").files[0]);\r\n    },\r\n\r\n    createBGMapChorocromatic: function () {\r\n        L.mapbox.accessToken = 'pk.eyJ1IjoibG9sYXNkIiwiYSI6ImNpbmxsZDJkejAwOHR2Zm0yZHVwOWV1ejEifQ.SJ6CupBlW0gPic0n-HgY6w';\r\n        window.map = L.mapbox.map('map', 'mapbox.streets').setView([49.36855556, -81.66371667], 4);\r\n    },\r\n\r\n    startChorocromatic: function () {\r\n        var gisplay = new Gisplay();\r\n        var options = {\r\n            attr: 'f2',\r\n            legendTitle: \"Most Frequent Crime\"\r\n        };\r\n\r\n        var time = Date.now();\r\n        console.log(\"starting Chorocromatic Map...\");\r\n\r\n        var reader = new FileReader();\r\n        reader.onloadend = function () {\r\n            var data = JSON.parse(reader.result);\r\n            var datareadtimestamp = Date.now();\r\n            console.log(\"tempo de leitura do ficheiro: \" + (datareadtimestamp - time) / 1000 + \" segundos\");\r\n            gisplay.makeChorochromaticMap(window.map, data, options);\r\n        }\r\n        reader.readAsText(document.getElementById(\"file\").files[0]);\r\n    },\r\n\r\n    /** ######################### DOT MAPS ################################# */\r\n    //DOT MAP Example 1\r\n    createBGMapDotMap: function () {\r\n        L.mapbox.accessToken = 'pk.eyJ1IjoibG9sYXNkIiwiYSI6ImNpbmxsZDJkejAwOHR2Zm0yZHVwOWV1ejEifQ.SJ6CupBlW0gPic0n-HgY6w';\r\n        window.map = L.mapbox.map('map', 'mapbox.dark').setView([49.36855556, -81.66371667], 4);\r\n    },\r\n\r\n    startDotMap1: function () {\r\n        var gisplay = new Gisplay();\r\n        console.log(\"starting Dot Map 1...\");\r\n\r\n        var options = {\r\n            colorScheme: [\"red\", \"green\"],\r\n            attr: 'f1',\r\n            legendTitle: \"Alcohol\"\r\n        };\r\n\r\n        var time = Date.now();\r\n        var reader = new FileReader();\r\n        reader.onloadend = function () {\r\n            var data = JSON.parse(reader.result);\r\n            var datareadtimestamp = Date.now();\r\n            console.log(\"tempo de leitura do ficheiro: \" + (datareadtimestamp - time) / 1000 + \" segundos\");\r\n\r\n            gisplay.makeDotMap(window.map, data, options);\r\n            console.log(\"tempo gisplay: \" + (Date.now() - datareadtimestamp) / 1000 + \" segundos\");\r\n            console.log(\"tempo total: \" + (Date.now() - time) / 1000 + \" segundos\");\r\n        };\r\n        reader.readAsText(document.getElementById(\"file\").files[0]);\r\n    },\r\n\r\n    //DOT MAP Example 2\r\n    startDotMap2: function () {\r\n        var gisplay = new Gisplay();\r\n        console.log(\"starting Dot Map 2...\");\r\n\r\n        var options = {\r\n            colorScheme: [\"blue\", \"red\"],\r\n            maxPointSize: 100,\r\n            numberOfClasses: 2,\r\n            classBreaksMethod: \"k-means\",\r\n            minPointSize: 1,\r\n            attr: 'f2',\r\n            legendTitle: \"Fatals\"\r\n        };\r\n\r\n        var time = Date.now();\r\n        var reader = new FileReader();\r\n        reader.onloadend = function () {\r\n            var data = JSON.parse(reader.result);\r\n            var datareadtimestamp = Date.now();\r\n            console.log(\"tempo de leitura do ficheiro: \" + (datareadtimestamp - time) / 1000 + \" segundos\");\r\n            gisplay.makeDotMap(window.map, data, options);\r\n            console.log(\"tempo gisplay: \" + (Date.now() - datareadtimestamp) / 1000 + \" segundos\");\r\n            console.log(\"tempo total: \" + (Date.now() - time) / 1000 + \" segundos\");\r\n        };\r\n        reader.readAsText(document.getElementById(\"file\").files[0]);\r\n    },\r\n\r\n    /** ######################### CHANGE MAPS ################################# */\r\n    createBGMapChangeMap: function () {\r\n        L.mapbox.accessToken = 'pk.eyJ1IjoibG9sYXNkIiwiYSI6ImNpbmxsZDJkejAwOHR2Zm0yZHVwOWV1ejEifQ.SJ6CupBlW0gPic0n-HgY6w';\r\n        window.map = L.mapbox.map('map', 'mapbox.dark').setView([49.36855556, -81.66371667], 4);\r\n    },\r\n\r\n    startChangeMap: function () {\r\n        var gisplay = new Gisplay();\r\n        console.log(\"starting Change Map 1...\");\r\n\r\n        var options = {\r\n            colorScheme: [\"green\", \"red\"],\r\n            minuend: 'f6',\r\n            subtrahend: 'f2',\r\n            alpha: 1,\r\n            legendTitle: \"Evolução entre 2009 e 2013\"\r\n        };\r\n\r\n        var reader = new FileReader();\r\n        reader.onloadend = function () {\r\n            var data = JSON.parse(reader.result);\r\n            gisplay.makeChangeMap(window.map, data, options);\r\n        }\r\n        reader.readAsText(document.getElementById(\"file\").files[0]);\r\n    },\r\n\r\n    /** ######################## PROP. SYMBOLS MAPS ########################### */\r\n    createBGPSymbols: function () {\r\n        L.mapbox.accessToken = 'pk.eyJ1IjoibG9sYXNkIiwiYSI6ImNpbmxsZDJkejAwOHR2Zm0yZHVwOWV1ejEifQ.SJ6CupBlW0gPic0n-HgY6w';\r\n        window.map = L.mapbox.map('map', 'mapbox.dark').setView([49.36855556, -81.66371667], 4);\r\n    },\r\n\r\n    startPSymbols: function () {\r\n        var gisplay = new Gisplay();\r\n        console.log(\"starting Proportional Symbols...\");\r\n        var options = {\r\n            maxPointSize: 100,\r\n            minPointSize: 5,\r\n            attr: 'f1',\r\n            alpha: 1.0,\r\n            numberOfLegendItems: 3,\r\n            legendTitle: \"Accidents\"\r\n        };\r\n\r\n        var time = Date.now();\r\n\r\n        var reader = new FileReader();\r\n        reader.onloadend = function () {\r\n            var data = JSON.parse(reader.result);\r\n            gisplay.makeProportionalSymbolsMap(window.map, data, options);\r\n        }\r\n        reader.readAsText(document.getElementById(\"file\").files[0]);\r\n    },\r\n\r\n    /** ######################### HEAT MAP ################################# */\r\n};\r\n",
    "static": true,
    "longname": "src/gisplayv1.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 275,
    "kind": "file",
    "name": "src/gisplayv11.js",
    "content": "/**\r\n * This file is the entry point for the Gisplay API\r\n */\r\nimport { Gisplay } from './Gisplay/Gisplay';\r\nimport { BGMapGoogleMaps } from './Gisplay/Maps/v11/1_BackgroundMaps/BGMapGoogleMaps';\r\nimport { BGMapHereMaps } from './Gisplay/Maps/v11/1_BackgroundMaps/BGMapHereMaps';\r\nimport { BGMapBingMaps } from './Gisplay/Maps/v11/1_BackgroundMaps/BGMapBingMaps';\r\n\r\nmodule.exports = {\r\n\r\n    /** #############   MapBox Maps example   #############  */\r\n    createMapBoxBGMap: function () {\r\n        console.log(\"Start gisplayv2. TESTE workflow 25/03.\");\r\n        L.mapbox.accessToken = 'pk.eyJ1IjoibG9sYXNkIiwiYSI6ImNpbmxsZDJkejAwOHR2Zm0yZHVwOWV1ejEifQ.SJ6CupBlW0gPic0n-HgY6w';\r\n        window.map = L.mapbox.map('map', 'mapbox.streets').setView([49.36855556, -81.66371667], 4);\r\n    },\r\n\r\n    startMapBoxChoropleth: function () {\r\n        var gisplay = new Gisplay();\r\n        var options = {\r\n            colorScheme: [\"white\", \"yellow\", \"orange\", \"red\"],\r\n            numberOfClasses: 4,\r\n            attr: 'f3',\r\n            legendTitle: 'Fatals'\r\n        };\r\n        var time = Date.now();\r\n\r\n        var reader = new FileReader();\r\n        reader.onloadend = function () {\r\n            var data = JSON.parse(reader.result);\r\n            var datareadtimestamp = Date.now();\r\n            console.log(\"tempo de leitura do ficheiro: \" + (datareadtimestamp - time) / 1000 + \" segundos\");\r\n\r\n            gisplay.makeChoropleth(window.map, data, options);\r\n            console.log(\"tempo gisplay: \" + (Date.now() - datareadtimestamp) / 1000 + \" segundos\");\r\n            console.log(\"tempo total: \" + (Date.now() - time) / 1000 + \" segundos\");\r\n        };\r\n        reader.readAsText(document.getElementById(\"file\").files[0]);\r\n    },\r\n\r\n    /** #############   Google Maps example   #############  */\r\n    createGoogleMapsBGMap: function () {\r\n        window.map = new google.maps.Map(document.getElementById('map'), {\r\n            zoom: 4,\r\n            center: { lat: 49.36855556, lng: -81.66371667 }/*,\r\n            minZoom: 3*/\r\n        });\r\n    },\r\n\r\n    startGoogleMapsChoropleth: function () {\r\n        let gm = new BGMapGoogleMaps(window.map);\r\n        let gisplay = new Gisplay();\r\n\r\n        let options = {\r\n            colorScheme: [\"white\", \"yellow\", \"orange\", \"red\"],\r\n            numberOfClasses: 4,\r\n            attr: 'f3',\r\n            legendTitle: 'Fatals',\r\n            useCustomMapService: true\r\n        };\r\n        let time = Date.now();\r\n\r\n        let reader = new FileReader();\r\n        reader.onloadend = function () {\r\n            let data = JSON.parse(reader.result);\r\n            let datareadtimestamp = Date.now();\r\n            console.log(\"tempo de leitura do ficheiro: \" + (datareadtimestamp - time) / 1000 + \" segundos\");\r\n\r\n            gisplay.makeChoroplethGoogleMaps(gm, data, options);\r\n            console.log(\"tempo gisplay: \" + (Date.now() - datareadtimestamp) / 1000 + \" segundos\");\r\n            console.log(\"tempo total: \" + (Date.now() - time) / 1000 + \" segundos\");\r\n        };\r\n        reader.readAsText(document.getElementById(\"file\").files[0]);\r\n    },\r\n\r\n    /** #############   HERE Maps example   #############  */\r\n    createHereMapsBGMap: function () {\r\n        let platform = new H.service.Platform({\r\n            'app_id': '8fEgxjuheFTYKcvVQhum',\r\n            'app_code': '5z2K0DvfXPNRLVuIaXcfgg'\r\n        });\r\n        let defaultLayers = platform.createDefaultLayers();\r\n        window.map = new H.Map(\r\n            document.getElementById('map'),\r\n            defaultLayers.normal.map,\r\n            {\r\n                zoom: 3,\r\n                center: { lat: 30, lng: -130.4 }\r\n            });\r\n        let mapEvents = new H.mapevents.MapEvents(map);//Enable events\r\n        let behavior = new H.mapevents.Behavior(mapEvents);//Enable zoom and pan\r\n    },\r\n\r\n    startHereMapsChoropleth: function () {\r\n        let hereMaps = new BGMapHereMaps(window.map);\r\n        let gisplay = new Gisplay();\r\n\r\n        let options = {\r\n            colorScheme: [\"white\", \"yellow\", \"orange\", \"red\"],\r\n            numberOfClasses: 4,\r\n            attr: 'f3',\r\n            legendTitle: 'Fatals',\r\n            useCustomMapService: true\r\n        };\r\n        let time = Date.now();\r\n\r\n        let reader = new FileReader();\r\n        reader.onloadend = function () {\r\n            let data = JSON.parse(reader.result);\r\n            let datareadtimestamp = Date.now();\r\n            console.log(\"tempo de leitura do ficheiro: \" + (datareadtimestamp - time) / 1000 + \" segundos\");\r\n\r\n            gisplay.makeChoroplethHereMaps(hereMaps, data, options);\r\n            console.log(\"tempo gisplay: \" + (Date.now() - datareadtimestamp) / 1000 + \" segundos\");\r\n            console.log(\"tempo total: \" + (Date.now() - time) / 1000 + \" segundos\");\r\n        };\r\n        reader.readAsText(document.getElementById(\"file\").files[0]);\r\n    },\r\n\r\n    /** #############   Bing Maps example   #############  */\r\n    createBingMapsBGMap: function () {\r\n        window.map = new Microsoft.Maps.Map(document.getElementById('map'), {\r\n            credentials: 'tbS2WTHvuzFWMarVDedF~XGeRrWSh4JVHd1yPrfsUJQ~Al0cgZrtc-S57hQveO9iMLRlZesJBacsvRCzVNsSh5E_TzY8iPE8w_LvRjP2_51i',\r\n            center: new Microsoft.Maps.Location(30, -130),\r\n            zoom: 0\r\n        });\r\n    },\r\n\r\n    startBingMapsChoropleth: function () {\r\n        let hereMaps = new BGMapBingMaps(window.map);\r\n        let gisplay = new Gisplay();\r\n\r\n        let options = {\r\n            colorScheme: [\"white\", \"yellow\", \"orange\", \"red\"],\r\n            numberOfClasses: 4,\r\n            attr: 'f3',\r\n            legendTitle: 'Fatals',\r\n            useCustomMapService: true\r\n        };\r\n        let time = Date.now();\r\n\r\n        let reader = new FileReader();\r\n        reader.onloadend = function () {\r\n            let data = JSON.parse(reader.result);\r\n            let datareadtimestamp = Date.now();\r\n            console.log(\"tempo de leitura do ficheiro: \" + (datareadtimestamp - time) / 1000 + \" segundos\");\r\n\r\n            gisplay.makeChoroplethBingMaps(hereMaps, data, options);\r\n            console.log(\"tempo gisplay: \" + (Date.now() - datareadtimestamp) / 1000 + \" segundos\");\r\n            console.log(\"tempo total: \" + (Date.now() - time) / 1000 + \" segundos\");\r\n        };\r\n        reader.readAsText(document.getElementById(\"file\").files[0]);\r\n    },\r\n\r\n    /** #############   Google Maps Dot Map example   #############  */\r\n    startGoogleMapsDotMap: function () {\r\n        let gm = new BGMapGoogleMaps(window.map);\r\n        let gisplay = new Gisplay();\r\n\r\n          var options = {\r\n            colorScheme: [\"red\", \"green\"],\r\n            attr: 'f1',\r\n            legendTitle: \"Alcohol\",\r\n            useCustomMapService: true\r\n        };\r\n        \r\n        let time = Date.now();\r\n\r\n        let reader = new FileReader();\r\n        reader.onloadend = function () {\r\n            let data = JSON.parse(reader.result);\r\n            let datareadtimestamp = Date.now();\r\n            console.log(\"tempo de leitura do ficheiro: \" + (datareadtimestamp - time) / 1000 + \" segundos\");\r\n\r\n            gisplay.makeDotMapGoogleMaps(gm, data, options);\r\n            console.log(\"tempo gisplay: \" + (Date.now() - datareadtimestamp) / 1000 + \" segundos\");\r\n            console.log(\"tempo total: \" + (Date.now() - time) / 1000 + \" segundos\");\r\n        };\r\n        reader.readAsText(document.getElementById(\"file\").files[0]);\r\n    },\r\n    /** ######################### HEAT MAP ################################# */\r\n};\r\n",
    "static": true,
    "longname": "src/gisplayv11.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 276,
    "kind": "file",
    "name": "src/lib/chroma.min.js",
    "content": "/*\r\nchroma.js - JavaScript library for color conversions\r\n\r\nCopyright (c) 2011-2015, Gregor Aisch\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions are met:\r\n\r\n1. Redistributions of source code must retain the above copyright notice, this\r\n   list of conditions and the following disclaimer.\r\n\r\n2. Redistributions in binary form must reproduce the above copyright notice,\r\n   this list of conditions and the following disclaimer in the documentation\r\n   and/or other materials provided with the distribution.\r\n\r\n3. The name Gregor Aisch may not be used to endorse or promote products\r\n   derived from this software without specific prior written permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\nDISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\r\nBUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\r\nOF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\nEVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\n*/\r\n(function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,$,_,aa,ba,ca,da,ea,fa,ga,ha,ia,ja,ka,la,ma,na,oa,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za=[].slice;ua=function(){var a,b,c,d,e;for(a={},e=\"Boolean Number String Function Array Date RegExp Undefined Null\".split(\" \"),d=0,b=e.length;b>d;d++)c=e[d],a[\"[object \"+c+\"]\"]=c.toLowerCase();return function(b){var c;return c=Object.prototype.toString.call(b),a[c]||\"object\"}}(),S=function(a,b,c){return null==b&&(b=0),null==c&&(c=1),b>a&&(a=b),a>c&&(a=c),a},va=function(a){return a.length>=3?[].slice.call(a):a[0]},t=function(a){var b;for(b in a)3>b?(a[b]<0&&(a[b]=0),a[b]>255&&(a[b]=255)):3===b&&(a[b]<0&&(a[b]=0),a[b]>1&&(a[b]=1));return a},d=Math.PI,pa=Math.round,w=Math.cos,B=Math.floor,_=Math.pow,T=Math.log,ra=Math.sin,sa=Math.sqrt,m=Math.atan2,W=Math.max,l=Math.abs,g=2*d,e=d/3,b=d/180,f=180/d,s=function(){return arguments[0]instanceof a?arguments[0]:function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,arguments,function(){})},k=[],\"undefined\"!=typeof module&&null!==module&&null!=module.exports&&(module.exports=s),\"function\"==typeof define&&define.amd?define([],function(){return s}):(oa=\"undefined\"!=typeof exports&&null!==exports?exports:this,oa.chroma=s),s.version=\"1.1.1\",j={},h=[],i=!1,a=function(){function a(){var a,b,c,d,e,f,g,k,l;for(f=this,b=[],k=0,d=arguments.length;d>k;k++)a=arguments[k],null!=a&&b.push(a);if(g=b[b.length-1],null!=j[g])f._rgb=t(j[g](va(b.slice(0,-1))));else{for(i||(h=h.sort(function(a,b){return b.p-a.p}),i=!0),l=0,e=h.length;e>l&&(c=h[l],!(g=c.test.apply(c,b)));l++);g&&(f._rgb=t(j[g].apply(j,b)))}null==f._rgb&&console.warn(\"unknown format: \"+b),null==f._rgb&&(f._rgb=[0,0,0]),3===f._rgb.length&&f._rgb.push(1)}return a.prototype.alpha=function(a){return arguments.length?(this._rgb[3]=a,this):this._rgb[3]},a.prototype.toString=function(){return this.name()},a}(),s._input=j,s.brewer=q={OrRd:[\"#fff7ec\",\"#fee8c8\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#b30000\",\"#7f0000\"],PuBu:[\"#fff7fb\",\"#ece7f2\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#045a8d\",\"#023858\"],BuPu:[\"#f7fcfd\",\"#e0ecf4\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#810f7c\",\"#4d004b\"],Oranges:[\"#fff5eb\",\"#fee6ce\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#a63603\",\"#7f2704\"],BuGn:[\"#f7fcfd\",\"#e5f5f9\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#006d2c\",\"#00441b\"],YlOrBr:[\"#ffffe5\",\"#fff7bc\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#993404\",\"#662506\"],YlGn:[\"#ffffe5\",\"#f7fcb9\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#006837\",\"#004529\"],Reds:[\"#fff5f0\",\"#fee0d2\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#a50f15\",\"#67000d\"],RdPu:[\"#fff7f3\",\"#fde0dd\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\",\"#49006a\"],Greens:[\"#f7fcf5\",\"#e5f5e0\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#006d2c\",\"#00441b\"],YlGnBu:[\"#ffffd9\",\"#edf8b1\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#253494\",\"#081d58\"],Purples:[\"#fcfbfd\",\"#efedf5\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#54278f\",\"#3f007d\"],GnBu:[\"#f7fcf0\",\"#e0f3db\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#0868ac\",\"#084081\"],Greys:[\"#ffffff\",\"#f0f0f0\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\",\"#000000\"],YlOrRd:[\"#ffffcc\",\"#ffeda0\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#bd0026\",\"#800026\"],PuRd:[\"#f7f4f9\",\"#e7e1ef\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#980043\",\"#67001f\"],Blues:[\"#f7fbff\",\"#deebf7\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#08519c\",\"#08306b\"],PuBuGn:[\"#fff7fb\",\"#ece2f0\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016c59\",\"#014636\"],Spectral:[\"#9e0142\",\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\",\"#5e4fa2\"],RdYlGn:[\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\",\"#006837\"],RdBu:[\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\",\"#053061\"],PiYG:[\"#8e0152\",\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\",\"#276419\"],PRGn:[\"#40004b\",\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\",\"#00441b\"],RdYlBu:[\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\",\"#313695\"],BrBG:[\"#543005\",\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\",\"#003c30\"],RdGy:[\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\",\"#1a1a1a\"],PuOr:[\"#7f3b08\",\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\",\"#2d004b\"],Set2:[\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\",\"#e5c494\",\"#b3b3b3\"],Accent:[\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\",\"#bf5b17\",\"#666666\"],Set1:[\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\",\"#f781bf\",\"#999999\"],Set3:[\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\",\"#ffed6f\"],Dark2:[\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\",\"#a6761d\",\"#666666\"],Paired:[\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\",\"#ffff99\",\"#b15928\"],Pastel2:[\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\",\"#f1e2cc\",\"#cccccc\"],Pastel1:[\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\",\"#fddaec\",\"#f2f2f2\"]},wa={indigo:\"#4b0082\",gold:\"#ffd700\",hotpink:\"#ff69b4\",firebrick:\"#b22222\",indianred:\"#cd5c5c\",yellow:\"#ffff00\",mistyrose:\"#ffe4e1\",darkolivegreen:\"#556b2f\",olive:\"#808000\",darkseagreen:\"#8fbc8f\",pink:\"#ffc0cb\",tomato:\"#ff6347\",lightcoral:\"#f08080\",orangered:\"#ff4500\",navajowhite:\"#ffdead\",lime:\"#00ff00\",palegreen:\"#98fb98\",darkslategrey:\"#2f4f4f\",greenyellow:\"#adff2f\",burlywood:\"#deb887\",seashell:\"#fff5ee\",mediumspringgreen:\"#00fa9a\",fuchsia:\"#ff00ff\",papayawhip:\"#ffefd5\",blanchedalmond:\"#ffebcd\",chartreuse:\"#7fff00\",dimgray:\"#696969\",black:\"#000000\",peachpuff:\"#ffdab9\",springgreen:\"#00ff7f\",aquamarine:\"#7fffd4\",white:\"#ffffff\",orange:\"#ffa500\",lightsalmon:\"#ffa07a\",darkslategray:\"#2f4f4f\",brown:\"#a52a2a\",ivory:\"#fffff0\",dodgerblue:\"#1e90ff\",peru:\"#cd853f\",lawngreen:\"#7cfc00\",chocolate:\"#d2691e\",crimson:\"#dc143c\",forestgreen:\"#228b22\",darkgrey:\"#a9a9a9\",lightseagreen:\"#20b2aa\",cyan:\"#00ffff\",mintcream:\"#f5fffa\",silver:\"#c0c0c0\",antiquewhite:\"#faebd7\",mediumorchid:\"#ba55d3\",skyblue:\"#87ceeb\",gray:\"#808080\",darkturquoise:\"#00ced1\",goldenrod:\"#daa520\",darkgreen:\"#006400\",floralwhite:\"#fffaf0\",darkviolet:\"#9400d3\",darkgray:\"#a9a9a9\",moccasin:\"#ffe4b5\",saddlebrown:\"#8b4513\",grey:\"#808080\",darkslateblue:\"#483d8b\",lightskyblue:\"#87cefa\",lightpink:\"#ffb6c1\",mediumvioletred:\"#c71585\",slategrey:\"#708090\",red:\"#ff0000\",deeppink:\"#ff1493\",limegreen:\"#32cd32\",darkmagenta:\"#8b008b\",palegoldenrod:\"#eee8aa\",plum:\"#dda0dd\",turquoise:\"#40e0d0\",lightgrey:\"#d3d3d3\",lightgoldenrodyellow:\"#fafad2\",darkgoldenrod:\"#b8860b\",lavender:\"#e6e6fa\",maroon:\"#800000\",yellowgreen:\"#9acd32\",sandybrown:\"#f4a460\",thistle:\"#d8bfd8\",violet:\"#ee82ee\",navy:\"#000080\",magenta:\"#ff00ff\",dimgrey:\"#696969\",tan:\"#d2b48c\",rosybrown:\"#bc8f8f\",olivedrab:\"#6b8e23\",blue:\"#0000ff\",lightblue:\"#add8e6\",ghostwhite:\"#f8f8ff\",honeydew:\"#f0fff0\",cornflowerblue:\"#6495ed\",slateblue:\"#6a5acd\",linen:\"#faf0e6\",darkblue:\"#00008b\",powderblue:\"#b0e0e6\",seagreen:\"#2e8b57\",darkkhaki:\"#bdb76b\",snow:\"#fffafa\",sienna:\"#a0522d\",mediumblue:\"#0000cd\",royalblue:\"#4169e1\",lightcyan:\"#e0ffff\",green:\"#008000\",mediumpurple:\"#9370db\",midnightblue:\"#191970\",cornsilk:\"#fff8dc\",paleturquoise:\"#afeeee\",bisque:\"#ffe4c4\",slategray:\"#708090\",darkcyan:\"#008b8b\",khaki:\"#f0e68c\",wheat:\"#f5deb3\",teal:\"#008080\",darkorchid:\"#9932cc\",deepskyblue:\"#00bfff\",salmon:\"#fa8072\",darkred:\"#8b0000\",steelblue:\"#4682b4\",palevioletred:\"#db7093\",lightslategray:\"#778899\",aliceblue:\"#f0f8ff\",lightslategrey:\"#778899\",lightgreen:\"#90ee90\",orchid:\"#da70d6\",gainsboro:\"#dcdcdc\",mediumseagreen:\"#3cb371\",lightgray:\"#d3d3d3\",mediumturquoise:\"#48d1cc\",lemonchiffon:\"#fffacd\",cadetblue:\"#5f9ea0\",lightyellow:\"#ffffe0\",lavenderblush:\"#fff0f5\",coral:\"#ff7f50\",purple:\"#800080\",aqua:\"#00ffff\",whitesmoke:\"#f5f5f5\",mediumslateblue:\"#7b68ee\",darkorange:\"#ff8c00\",mediumaquamarine:\"#66cdaa\",darksalmon:\"#e9967a\",beige:\"#f5f5dc\",blueviolet:\"#8a2be2\",azure:\"#f0ffff\",lightsteelblue:\"#b0c4de\",oldlace:\"#fdf5e6\",rebeccapurple:\"#663399\"},s.colors=v=wa,N=function(){var a,b,d,e,f,g,h,i,j;return b=va(arguments),f=b[0],a=b[1],d=b[2],i=(f+16)/116,h=isNaN(a)?i:i+a/500,j=isNaN(d)?i:i-d/200,i=c.Yn*O(i),h=c.Xn*O(h),j=c.Zn*O(j),g=ya(3.2404542*h-1.5371385*i-.4985314*j),e=ya(-.969266*h+1.8760108*i+.041556*j),d=ya(.0556434*h-.2040259*i+1.0572252*j),g=S(g,0,255),e=S(e,0,255),d=S(d,0,255),[g,e,d,b.length>3?b[3]:1]},ya=function(a){return pa(255*(.00304>=a?12.92*a:1.055*_(a,1/2.4)-.055))},O=function(a){return a>c.t1?a*a*a:c.t2*(a-c.t0)},c={Kn:18,Xn:.95047,Yn:1,Zn:1.08883,t0:.137931034,t1:.206896552,t2:.12841855,t3:.008856452},ga=function(){var a,b,c,d,e,f,g,h;return d=va(arguments),c=d[0],b=d[1],a=d[2],e=la(c,b,a),f=e[0],g=e[1],h=e[2],[116*g-16,500*(f-g),200*(g-h)]},ma=function(a){return(a/=255)<=.04045?a/12.92:_((a+.055)/1.055,2.4)},xa=function(a){return a>c.t3?_(a,1/3):a/c.t2+c.t0},la=function(){var a,b,d,e,f,g,h;return e=va(arguments),d=e[0],b=e[1],a=e[2],d=ma(d),b=ma(b),a=ma(a),f=xa((.4124564*d+.3575761*b+.1804375*a)/c.Xn),g=xa((.2126729*d+.7151522*b+.072175*a)/c.Yn),h=xa((.0193339*d+.119192*b+.9503041*a)/c.Zn),[f,g,h]},s.lab=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,za.call(arguments).concat([\"lab\"]),function(){})},j.lab=N,a.prototype.lab=function(){return ga(this._rgb)},n=function(a){var b,c,d,e,f,g,h,i,j,k,l;return a=function(){var b,c,d;for(d=[],c=0,b=a.length;b>c;c++)e=a[c],d.push(s(e));return d}(),2===a.length?(j=function(){var b,c,d;for(d=[],c=0,b=a.length;b>c;c++)e=a[c],d.push(e.lab());return d}(),f=j[0],g=j[1],b=function(a){var b,c;return c=function(){var c,d;for(d=[],b=c=0;2>=c;b=++c)d.push(f[b]+a*(g[b]-f[b]));return d}(),s.lab.apply(s,c)}):3===a.length?(k=function(){var b,c,d;for(d=[],c=0,b=a.length;b>c;c++)e=a[c],d.push(e.lab());return d}(),f=k[0],g=k[1],h=k[2],b=function(a){var b,c;return c=function(){var c,d;for(d=[],b=c=0;2>=c;b=++c)d.push((1-a)*(1-a)*f[b]+2*(1-a)*a*g[b]+a*a*h[b]);return d}(),s.lab.apply(s,c)}):4===a.length?(l=function(){var b,c,d;for(d=[],c=0,b=a.length;b>c;c++)e=a[c],d.push(e.lab());return d}(),f=l[0],g=l[1],h=l[2],i=l[3],b=function(a){var b,c;return c=function(){var c,d;for(d=[],b=c=0;2>=c;b=++c)d.push((1-a)*(1-a)*(1-a)*f[b]+3*(1-a)*(1-a)*a*g[b]+3*(1-a)*a*a*h[b]+a*a*a*i[b]);return d}(),s.lab.apply(s,c)}):5===a.length&&(c=n(a.slice(0,3)),d=n(a.slice(2,5)),b=function(a){return.5>a?c(2*a):d(2*(a-.5))}),b},s.bezier=function(a){var b;return b=n(a),b.scale=function(){return s.scale(b)},b},s.cubehelix=function(a,b,c,d,e){var f,h,i;return null==a&&(a=300),null==b&&(b=-1.5),null==c&&(c=1),null==d&&(d=1),null==e&&(e=[0,1]),h=e[1]-e[0],f=0,i=function(i){var j,k,l,m,n,o,p,q,r;return j=g*((a+120)/360+b*i),p=_(e[0]+h*i,d),o=0!==f?c[0]+i*f:c,k=o*p*(1-p)/2,m=w(j),r=ra(j),q=p+k*(-.14861*m+1.78277*r),n=p+k*(-.29227*m-.90649*r),l=p+1.97294*k*m,s(t([255*q,255*n,255*l]))},i.start=function(b){return null==b?a:(a=b,i)},i.rotations=function(a){return null==a?b:(b=a,i)},i.gamma=function(a){return null==a?d:(d=a,i)},i.hue=function(a){return null==a?c:(c=a,\"array\"===ua(c)?(f=c[1]-c[0],0===f&&(c=c[1])):f=0,i)},i.lightness=function(a){return null==a?e:(e=a,\"array\"===ua(e)?(h=e[1]-e[0],0===h&&(e=e[1])):h=0,i)},i.scale=function(){return s.scale(i)},i.hue(c),i},s.random=function(){var b,c,d,e;for(c=\"0123456789abcdef\",b=\"#\",d=e=0;6>e;d=++e)b+=c.charAt(B(16*Math.random()));return new a(b)},j.rgb=function(){var a,b,c,d;b=va(arguments),c=[];for(a in b)d=b[a],c.push(d);return c},s.rgb=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,za.call(arguments).concat([\"rgb\"]),function(){})},a.prototype.rgb=function(){return this._rgb.slice(0,3)},a.prototype.rgba=function(){return this._rgb},h.push({p:15,test:function(a){var b;return b=va(arguments),\"array\"===ua(b)&&3===b.length?\"rgb\":4===b.length&&\"number\"===ua(b[3])&&b[3]>=0&&b[3]<=1?\"rgb\":void 0}}),C=function(a){var b,c,d,e,f,g;if(a.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/))return(4===a.length||7===a.length)&&(a=a.substr(1)),3===a.length&&(a=a.split(\"\"),a=a[0]+a[0]+a[1]+a[1]+a[2]+a[2]),g=parseInt(a,16),e=g>>16,d=g>>8&255,c=255&g,[e,d,c,1];if(a.match(/^#?([A-Fa-f0-9]{8})$/))return 9===a.length&&(a=a.substr(1)),g=parseInt(a,16),e=g>>24&255,d=g>>16&255,c=g>>8&255,b=pa((255&g)/255*100)/100,[e,d,c,b];if(null!=j.css&&(f=j.css(a)))return f;throw\"unknown color: \"+a},ca=function(a,b){var c,d,e,f,g,h,i;return null==b&&(b=\"rgb\"),g=a[0],e=a[1],d=a[2],c=a[3],i=g<<16|e<<8|d,h=\"000000\"+i.toString(16),h=h.substr(h.length-6),f=\"0\"+pa(255*c).toString(16),f=f.substr(f.length-2),\"#\"+function(){switch(b.toLowerCase()){case\"rgba\":return h+f;case\"argb\":return f+h;default:return h}}()},j.hex=function(a){return C(a)},s.hex=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,za.call(arguments).concat([\"hex\"]),function(){})},a.prototype.hex=function(a){return null==a&&(a=\"rgb\"),ca(this._rgb,a)},h.push({p:10,test:function(a){return 1===arguments.length&&\"string\"===ua(a)?\"hex\":void 0}}),F=function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n;if(a=va(arguments),e=a[0],k=a[1],g=a[2],0===k)i=d=b=255*g;else{for(n=[0,0,0],c=[0,0,0],m=.5>g?g*(1+k):g+k-g*k,l=2*g-m,e/=360,n[0]=e+1/3,n[1]=e,n[2]=e-1/3,f=h=0;2>=h;f=++h)n[f]<0&&(n[f]+=1),n[f]>1&&(n[f]-=1),6*n[f]<1?c[f]=l+6*(m-l)*n[f]:2*n[f]<1?c[f]=m:3*n[f]<2?c[f]=l+(m-l)*(2/3-n[f])*6:c[f]=l;j=[pa(255*c[0]),pa(255*c[1]),pa(255*c[2])],i=j[0],d=j[1],b=j[2]}return a.length>3?[i,d,b,a[3]]:[i,d,b]},ea=function(a,b,c){var d,e,f,g,h;return void 0!==a&&a.length>=3&&(g=a,a=g[0],b=g[1],c=g[2]),a/=255,b/=255,c/=255,f=Math.min(a,b,c),W=Math.max(a,b,c),e=(W+f)/2,W===f?(h=0,d=Number.NaN):h=.5>e?(W-f)/(W+f):(W-f)/(2-W-f),a===W?d=(b-c)/(W-f):b===W?d=2+(c-a)/(W-f):c===W&&(d=4+(a-b)/(W-f)),d*=60,0>d&&(d+=360),[d,h,e]},s.hsl=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,za.call(arguments).concat([\"hsl\"]),function(){})},j.hsl=F,a.prototype.hsl=function(){return ea(this._rgb)},G=function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r;if(a=va(arguments),e=a[0],p=a[1],r=a[2],r*=255,0===p)i=d=b=r;else switch(360===e&&(e=0),e>360&&(e-=360),0>e&&(e+=360),e/=60,f=B(e),c=e-f,g=r*(1-p),h=r*(1-p*c),q=r*(1-p*(1-c)),f){case 0:j=[r,q,g],i=j[0],d=j[1],b=j[2];break;case 1:k=[h,r,g],i=k[0],d=k[1],b=k[2];break;case 2:l=[g,r,q],i=l[0],d=l[1],b=l[2];break;case 3:m=[g,h,r],i=m[0],d=m[1],b=m[2];break;case 4:n=[q,g,r],i=n[0],d=n[1],b=n[2];break;case 5:o=[r,g,h],i=o[0],d=o[1],b=o[2]}return i=pa(i),d=pa(d),b=pa(b),[i,d,b,a.length>3?a[3]:1]},fa=function(){var a,b,c,d,e,f,g,h,i;return g=va(arguments),f=g[0],c=g[1],a=g[2],e=Math.min(f,c,a),W=Math.max(f,c,a),b=W-e,i=W/255,0===W?(d=Number.NaN,h=0):(h=b/W,f===W&&(d=(c-a)/b),c===W&&(d=2+(a-f)/b),a===W&&(d=4+(f-c)/b),d*=60,0>d&&(d+=360)),[d,h,i]},s.hsv=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,za.call(arguments).concat([\"hsv\"]),function(){})},j.hsv=G,a.prototype.hsv=function(){return fa(this._rgb)},Z=function(a){var b,c,d;return\"number\"===ua(a)&&a>=0&&16777215>=a?(d=a>>16,c=a>>8&255,b=255&a,[d,c,b,1]):(console.warn(\"unknown num color: \"+a),[0,0,0,1])},ja=function(){var a,b,c,d;return d=va(arguments),c=d[0],b=d[1],a=d[2],(c<<16)+(b<<8)+a},s.num=function(b){return new a(b,\"num\")},a.prototype.num=function(a){return null==a&&(a=\"rgb\"),ja(this._rgb,a)},j.num=Z,h.push({p:10,test:function(a){return 1===arguments.length&&\"number\"===ua(a)&&a>=0&&16777215>=a?\"num\":void 0}}),x=function(a){var b,c,d,e,f,g,h,i;if(a=a.toLowerCase(),null!=s.colors&&s.colors[a])return C(s.colors[a]);if(f=a.match(/rgb\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*\\)/)){for(h=f.slice(1,4),e=g=0;2>=g;e=++g)h[e]=+h[e];h[3]=1}else if(f=a.match(/rgba\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)/))for(h=f.slice(1,5),e=i=0;3>=i;e=++i)h[e]=+h[e];else if(f=a.match(/rgb\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)){for(h=f.slice(1,4),e=b=0;2>=b;e=++b)h[e]=pa(2.55*h[e]);h[3]=1}else if(f=a.match(/rgba\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)){for(h=f.slice(1,5),e=c=0;2>=c;e=++c)h[e]=pa(2.55*h[e]);h[3]=+h[3]}else(f=a.match(/hsl\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/))?(d=f.slice(1,4),d[1]*=.01,d[2]*=.01,h=F(d),h[3]=1):(f=a.match(/hsla\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/))&&(d=f.slice(1,4),d[1]*=.01,d[2]*=.01,h=F(d),h[3]=+f[4]);return h},ba=function(a){var b;return b=a[3]<1?\"rgba\":\"rgb\",\"rgb\"===b?b+\"(\"+a.slice(0,3).map(pa).join(\",\")+\")\":\"rgba\"===b?b+\"(\"+a.slice(0,3).map(pa).join(\",\")+\",\"+a[3]+\")\":void 0},na=function(a){return pa(100*a)/100},E=function(a,b){var c;return c=1>b?\"hsla\":\"hsl\",a[0]=na(a[0]||0),a[1]=na(100*a[1])+\"%\",a[2]=na(100*a[2])+\"%\",\"hsla\"===c&&(a[3]=b),c+\"(\"+a.join(\",\")+\")\"},j.css=function(a){return x(a)},s.css=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,za.call(arguments).concat([\"css\"]),function(){})},a.prototype.css=function(a){return null==a&&(a=\"rgb\"),\"rgb\"===a.slice(0,3)?ba(this._rgb):\"hsl\"===a.slice(0,3)?E(this.hsl(),this.alpha()):void 0},j.named=function(a){return C(wa[a])},h.push({p:20,test:function(a){return 1===arguments.length&&null!=wa[a]?\"named\":void 0}}),a.prototype.name=function(a){var b,c;arguments.length&&(wa[a]&&(this._rgb=C(wa[a])),this._rgb[3]=1),b=this.hex();for(c in wa)if(b===wa[c])return c;return b},P=function(){var a,c,d,e;return e=va(arguments),d=e[0],a=e[1],c=e[2],c*=b,[d,w(c)*a,ra(c)*a]},Q=function(){var a,b,c,d,e,f,g,h,i,j,k;return c=va(arguments),h=c[0],e=c[1],g=c[2],j=P(h,e,g),a=j[0],b=j[1],d=j[2],k=N(a,b,d),i=k[0],f=k[1],d=k[2],[S(i,0,255),S(f,0,255),S(d,0,255),c.length>3?c[3]:1]},M=function(){var a,b,c,d,e,g;return g=va(arguments),e=g[0],a=g[1],b=g[2],c=sa(a*a+b*b),d=(m(b,a)*f+360)%360,0===pa(1e4*c)&&(d=Number.NaN),[e,c,d]},ha=function(){var a,b,c,d,e,f,g;return f=va(arguments),e=f[0],c=f[1],b=f[2],g=ga(e,c,b),d=g[0],a=g[1],b=g[2],M(d,a,b)},s.lch=function(){var b;return b=va(arguments),new a(b,\"lch\")},s.hcl=function(){var b;return b=va(arguments),new a(b,\"hcl\")},j.lch=Q,j.hcl=function(){var a,b,c,d;return d=va(arguments),b=d[0],a=d[1],c=d[2],Q([c,a,b])},a.prototype.lch=function(){return ha(this._rgb)},a.prototype.hcl=function(){return ha(this._rgb).reverse()},aa=function(a){var b,c,d,e,f,g,h,i,j;return null==a&&(a=\"rgb\"),i=va(arguments),h=i[0],e=i[1],b=i[2],h/=255,e/=255,b/=255,f=1-Math.max(h,Math.max(e,b)),d=1>f?1/(1-f):0,c=(1-h-f)*d,g=(1-e-f)*d,j=(1-b-f)*d,[c,g,j,f]},u=function(){var a,b,c,d,e,f,g,h,i;return b=va(arguments),d=b[0],g=b[1],i=b[2],f=b[3],a=b.length>4?b[4]:1,1===f?[0,0,0,a]:(h=d>=1?0:pa(255*(1-d)*(1-f)),e=g>=1?0:pa(255*(1-g)*(1-f)),c=i>=1?0:pa(255*(1-i)*(1-f)),[h,e,c,a])},j.cmyk=function(){return u(va(arguments))},s.cmyk=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,za.call(arguments).concat([\"cmyk\"]),function(){})},a.prototype.cmyk=function(){return aa(this._rgb)},j.gl=function(){var a,b,c,d,e;for(d=function(){var a,c;a=va(arguments),c=[];for(b in a)e=a[b],c.push(e);return c}.apply(this,arguments),a=c=0;2>=c;a=++c)d[a]*=255;return d},s.gl=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,za.call(arguments).concat([\"gl\"]),function(){})},a.prototype.gl=function(){var a;return a=this._rgb,[a[0]/255,a[1]/255,a[2]/255,a[3]]},ia=function(a,b,c){var d;return d=va(arguments),a=d[0],b=d[1],c=d[2],a=U(a),b=U(b),c=U(c),.2126*a+.7152*b+.0722*c},U=function(a){return a/=255,.03928>=a?a/12.92:_((a+.055)/1.055,2.4)},k=[],H=function(a,b,c,d){var e,f,g,h;for(null==c&&(c=.5),null==d&&(d=\"rgb\"),\"object\"!==ua(a)&&(a=s(a)),\"object\"!==ua(b)&&(b=s(b)),g=0,f=k.length;f>g;g++)if(e=k[g],d===e[0]){h=e[1](a,b,c,d);break}if(null==h)throw\"color mode \"+d+\" is not supported\";return h.alpha(a.alpha()+c*(b.alpha()-a.alpha())),h},s.interpolate=H,a.prototype.interpolate=function(a,b,c){return H(this,a,b,c)},s.mix=H,a.prototype.mix=a.prototype.interpolate,L=function(b,c,d,e){var f,g;return f=b._rgb,g=c._rgb,new a(f[0]+d*(g[0]-f[0]),f[1]+d*(g[1]-f[1]),f[2]+d*(g[2]-f[2]),e)},k.push([\"rgb\",L]),a.prototype.luminance=function(a,b){var c,d,e,f;return null==b&&(b=\"rgb\"),arguments.length?(0===a?this._rgb=[0,0,0,this._rgb[3]]:1===a?this._rgb=[255,255,255,this._rgb[3]]:(d=1e-7,e=20,f=function(c,g){var h,i;return i=c.interpolate(g,.5,b),h=i.luminance(),Math.abs(a-h)<d||!e--?i:h>a?f(c,i):f(i,g)},c=ia(this._rgb),this._rgb=(c>a?f(s(\"black\"),this):f(this,s(\"white\"))).rgba()),this):ia(this._rgb)},ta=function(a){var b,c,d,e;return e=a/100,66>e?(d=255,c=-155.25485562709179-.44596950469579133*(c=e-2)+104.49216199393888*T(c),b=20>e?0:-254.76935184120902+.8274096064007395*(b=e-10)+115.67994401066147*T(b)):(d=351.97690566805693+.114206453784165*(d=e-55)-40.25366309332127*T(d),c=325.4494125711974+.07943456536662342*(c=e-50)-28.0852963507957*T(c),b=255),t([d,c,b])},ka=function(){var a,b,c,d,e,f,g,h,i;for(g=va(arguments),f=g[0],c=g[1],a=g[2],e=1e3,d=4e4,b=.4;d-e>b;)i=.5*(d+e),h=ta(i),h[2]/h[0]>=a/f?d=i:e=i;return pa(i)},s.temperature=s.kelvin=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,za.call(arguments).concat([\"temperature\"]),function(){})},j.temperature=j.kelvin=j.K=ta,a.prototype.temperature=function(){return ka(this._rgb)},a.prototype.kelvin=a.prototype.temperature,s.contrast=function(b,c){var d,e,f,g;return(\"string\"===(f=ua(b))||\"number\"===f)&&(b=new a(b)),(\"string\"===(g=ua(c))||\"number\"===g)&&(c=new a(c)),d=b.luminance(),e=c.luminance(),d>e?(d+.05)/(e+.05):(e+.05)/(d+.05)},a.prototype.get=function(a){var b,c,d,e,f,g;return d=this,f=a.split(\".\"),e=f[0],b=f[1],g=d[e](),b?(c=e.indexOf(b),c>-1?g[c]:console.warn(\"unknown channel \"+b+\" in mode \"+e)):g},a.prototype.set=function(a,b){var c,d,e,f,g,h;if(e=this,g=a.split(\".\"),f=g[0],c=g[1],c)if(h=e[f](),d=f.indexOf(c),d>-1)if(\"string\"===ua(b))switch(b.charAt(0)){case\"+\":h[d]+=+b;break;case\"-\":h[d]+=+b;break;case\"*\":h[d]*=+b.substr(1);break;case\"/\":h[d]/=+b.substr(1);break;default:h[d]=+b}else h[d]=b;else console.warn(\"unknown channel \"+c+\" in mode \"+f);else h=b;return e._rgb=s(h,f).alpha(e.alpha())._rgb,e},a.prototype.darken=function(a){var b,d;return null==a&&(a=1),d=this,b=d.lab(),b[0]-=c.Kn*a,s.lab(b).alpha(d.alpha())},a.prototype.brighten=function(a){return null==a&&(a=1),this.darken(-a)},a.prototype.darker=a.prototype.darken,a.prototype.brighter=a.prototype.brighten,a.prototype.saturate=function(a){var b,d;return null==a&&(a=1),d=this,b=d.lch(),b[1]+=a*c.Kn,b[1]<0&&(b[1]=0),s.lch(b).alpha(d.alpha())},a.prototype.desaturate=function(a){return null==a&&(a=1),this.saturate(-a)},a.prototype.premultiply=function(){var a,b;return b=this.rgb(),a=this.alpha(),s(b[0]*a,b[1]*a,b[2]*a,a)},o=function(a,b,c){if(!o[c])throw\"unknown blend mode \"+c;return o[c](a,b)},p=function(a){return function(b,c){var d,e;return d=s(c).rgb(),e=s(b).rgb(),s(a(d,e),\"rgb\")}},A=function(a){return function(b,c){var d,e,f;for(f=[],d=e=0;3>=e;d=++e)f[d]=a(b[d],c[d]);return f}},Y=function(a,b){return a},X=function(a,b){return a*b/255},y=function(a,b){return a>b?b:a},R=function(a,b){return a>b?a:b},qa=function(a,b){return 255*(1-(1-a/255)*(1-b/255))},$=function(a,b){return 128>b?2*a*b/255:255*(1-2*(1-a/255)*(1-b/255))},r=function(a,b){return 255*(1-(1-b/255)/(a/255))},z=function(a,b){return 255===a?255:(a=255*(b/255)/(1-a/255),a>255?255:a)},o.normal=p(A(Y)),o.multiply=p(A(X)),o.screen=p(A(qa)),o.overlay=p(A($)),o.darken=p(A(y)),o.lighten=p(A(R)),o.dodge=p(A(z)),o.burn=p(A(r)),s.blend=o,s.analyze=function(a){var b,c,d,e;for(d={min:Number.MAX_VALUE,max:-1*Number.MAX_VALUE,sum:0,values:[],count:0},c=0,b=a.length;b>c;c++)e=a[c],null==e||isNaN(e)||(d.values.push(e),d.sum+=e,e<d.min&&(d.min=e),e>d.max&&(d.max=e),d.count+=1);return d.domain=[d.min,d.max],d.limits=function(a,b){return s.limits(d,a,b)},d},s.scale=function(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,t,u,v,w,x;return k=\"rgb\",l=s(\"#ccc\"),p=0,h=!1,g=[0,1],o=[],n=[0,0],c=!1,e=[],m=!1,j=0,i=1,f=!1,d={},w=function(a){var b,c,d,f,g,h,i;if(null==a&&(a=[\"#fff\",\"#000\"]),null!=a&&\"string\"===ua(a)&&null!=(null!=(f=s.brewer)?f[a]:void 0)&&(a=s.brewer[a]),\"array\"===ua(a)){for(a=a.slice(0),b=d=0,g=a.length-1;g>=0?g>=d:d>=g;b=g>=0?++d:--d)c=a[b],\"string\"===ua(c)&&(a[b]=s(c));for(o.length=0,b=i=0,h=a.length-1;h>=0?h>=i:i>=h;b=h>=0?++i:--i)o.push(b/(a.length-1))}return v(),e=a},t=function(a){var b,d;if(null!=c){for(d=c.length-1,b=0;d>b&&a>=c[b];)b++;return b-1}return 0},x=function(a){return a},q=function(a){var b,d,e,f,g;return g=a,c.length>2&&(f=c.length-1,b=t(a),e=c[0]+(c[1]-c[0])*(0+.5*p),d=c[f-1]+(c[f]-c[f-1])*(1-.5*p),g=j+(c[b]+.5*(c[b+1]-c[b])-e)/(d-e)*(i-j)),g},u=function(a,b){var f,g,h,m,p,q,r,u;if(null==b&&(b=!1),isNaN(a))return l;if(b?u=a:c&&c.length>2?(f=t(a),u=f/(c.length-2),u=n[0]+u*(1-n[0]-n[1])):i!==j?(u=(a-j)/(i-j),u=n[0]+u*(1-n[0]-n[1]),u=Math.min(1,Math.max(0,u))):u=1,b||(u=x(u)),m=Math.floor(1e4*u),d[m])g=d[m];else{if(\"array\"===ua(e))for(h=p=0,r=o.length-1;r>=0?r>=p:p>=r;h=r>=0?++p:--p){if(q=o[h],q>=u){g=e[h];break}if(u>=q&&h===o.length-1){g=e[h];break}if(u>q&&u<o[h+1]){u=(u-q)/(o[h+1]-q),g=s.interpolate(e[h],e[h+1],u,k);break}}else\"function\"===ua(e)&&(g=e(u));d[m]=g}return g},v=function(){return d={}},w(a),r=function(a){var b;return b=s(u(a)),m&&b[m]?b[m]():b},r.classes=function(a){var b;return null!=a?(\"array\"===ua(a)?(c=a,g=[a[0],a[a.length-1]]):(b=s.analyze(g),c=0===a?[b.min,b.max]:s.limits(b,\"e\",a)),r):c},r.domain=function(a){var b,c,d,f,h,k,l;if(!arguments.length)return g;if(j=a[0],i=a[a.length-1],o=[],d=e.length,a.length===d&&j!==i)for(h=0,f=a.length;f>h;h++)c=a[h],o.push((c-j)/(i-j));else for(b=l=0,k=d-1;k>=0?k>=l:l>=k;b=k>=0?++l:--l)o.push(b/(d-1));return g=[j,i],r},r.mode=function(a){return arguments.length?(k=a,v(),r):k},r.range=function(a,b){return w(a,b),r},r.out=function(a){return m=a,r},r.spread=function(a){return arguments.length?(p=a,r):p},r.correctLightness=function(a){return null==a&&(a=!0),f=a,v(),x=f?function(a){var b,c,d,e,f,g,h,i,j;for(b=u(0,!0).lab()[0],c=u(1,!0).lab()[0],h=b>c,d=u(a,!0).lab()[0],f=b+(c-b)*a,e=d-f,i=0,j=1,g=20;Math.abs(e)>.01&&g-->0;)!function(){return h&&(e*=-1),0>e?(i=a,a+=.5*(j-a)):(j=a,a+=.5*(i-a)),d=u(a,!0).lab()[0],e=d-f}();return a}:function(a){return a},r},r.padding=function(a){return null!=a?(\"number\"===ua(a)&&(a=[a,a]),n=a,r):n},r.colors=function(){var b,d,e,f,h,i,j,k,l;if(f=0,h=\"hex\",1===arguments.length&&(\"string\"===ua(arguments[0])?h=arguments[0]:f=arguments[0]),2===arguments.length&&(f=arguments[0],h=arguments[1]),f)return d=g[0],b=g[1]-d,function(){j=[];for(var a=0;f>=0?f>a:a>f;f>=0?a++:a--)j.push(a);return j}.apply(this).map(function(a){return r(d+a/(f-1)*b)[h]()});if(a=[],k=[],c&&c.length>2)for(e=l=1,i=c.length;i>=1?i>l:l>i;e=i>=1?++l:--l)k.push(.5*(c[e-1]+c[e]));else k=g;return k.map(function(a){return r(a)[h]()})},r},null==s.scales&&(s.scales={}),s.scales.cool=function(){return s.scale([s.hsl(180,1,.9),s.hsl(250,.7,.4)])},s.scales.hot=function(){return s.scale([\"#000\",\"#f00\",\"#ff0\",\"#fff\"],[0,.25,.75,1]).mode(\"rgb\")},s.analyze=function(a,b,c){var d,e,f,g,h,i,j;if(h={min:Number.MAX_VALUE,max:-1*Number.MAX_VALUE,sum:0,values:[],count:0},null==c&&(c=function(){return!0}),d=function(a){null==a||isNaN(a)||(h.values.push(a),h.sum+=a,a<h.min&&(h.min=a),a>h.max&&(h.max=a),h.count+=1)},j=function(a,e){return c(a,e)?d(null!=b&&\"function\"===ua(b)?b(a):null!=b&&\"string\"===ua(b)||\"number\"===ua(b)?a[b]:a):void 0},\"array\"===ua(a))for(g=0,f=a.length;f>g;g++)i=a[g],j(i);else for(e in a)i=a[e],j(i,e);return h.domain=[h.min,h.max],h.limits=function(a,b){return s.limits(h,a,b)},h},s.limits=function(a,b,c){var d,e,f,g,h,i,j,k,m,n,o,p,q,r,t,u,v,w,x,y,z,A,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,U,V,X,Y,Z,$,aa,ba,ca,da,ea,fa,ga,ha,ia,ja;if(null==b&&(b=\"equal\"),null==c&&(c=7),\"array\"===ua(a)&&(a=s.analyze(a)),E=a.min,W=a.max,fa=a.sum,ia=a.values.sort(function(a,b){return a-b}),C=[],\"c\"===b.substr(0,1)&&(C.push(E),C.push(W)),\"e\"===b.substr(0,1)){for(C.push(E),y=K=1,O=c-1;O>=1?O>=K:K>=O;y=O>=1?++K:--K)C.push(E+y/c*(W-E));C.push(W)}else if(\"l\"===b.substr(0,1)){if(0>=E)throw\"Logarithmic scales are only possible for values > 0\";for(F=Math.LOG10E*T(E),D=Math.LOG10E*T(W),C.push(E),y=ja=1,P=c-1;P>=1?P>=ja:ja>=P;y=P>=1?++ja:--ja)C.push(_(10,F+y/c*(D-F)));C.push(W)}else if(\"q\"===b.substr(0,1)){for(C.push(E),y=d=1,X=c-1;X>=1?X>=d:d>=X;y=X>=1?++d:--d)L=ia.length*y/c,M=B(L),M===L?C.push(ia[M]):(N=L-M,C.push(ia[M]*N+ia[M+1]*(1-N)));C.push(W)}else if(\"k\"===b.substr(0,1)){for(H=ia.length,r=new Array(H),w=new Array(c),ea=!0,I=0,u=null,u=[],u.push(E),y=e=1,Y=c-1;Y>=1?Y>=e:e>=Y;y=Y>=1?++e:--e)u.push(E+y/c*(W-E));for(u.push(W);ea;){for(z=f=0,Z=c-1;Z>=0?Z>=f:f>=Z;z=Z>=0?++f:--f)w[z]=0;for(y=g=0,$=H-1;$>=0?$>=g:g>=$;y=$>=0?++g:--g){for(ha=ia[y],G=Number.MAX_VALUE,z=h=0,aa=c-1;aa>=0?aa>=h:h>=aa;z=aa>=0?++h:--h)x=l(u[z]-ha),G>x&&(G=x,t=z);w[t]++,r[y]=t}for(J=new Array(c),z=i=0,ba=c-1;ba>=0?ba>=i:i>=ba;z=ba>=0?++i:--i)J[z]=null;for(y=j=0,ca=H-1;ca>=0?ca>=j:j>=ca;y=ca>=0?++j:--j)v=r[y],null===J[v]?J[v]=ia[y]:J[v]+=ia[y];for(z=k=0,da=c-1;da>=0?da>=k:k>=da;z=da>=0?++k:--k)J[z]*=1/w[z];for(ea=!1,z=m=0,Q=c-1;Q>=0?Q>=m:m>=Q;z=Q>=0?++m:--m)if(J[z]!==u[y]){ea=!0;break}u=J,I++,I>200&&(ea=!1)}for(A={},z=n=0,R=c-1;R>=0?R>=n:n>=R;z=R>=0?++n:--n)A[z]=[];for(y=o=0,S=H-1;S>=0?S>=o:o>=S;y=S>=0?++o:--o)v=r[y],A[v].push(ia[y]);for(ga=[],z=p=0,U=c-1;U>=0?U>=p:p>=U;z=U>=0?++p:--p)ga.push(A[z][0]),ga.push(A[z][A[z].length-1]);for(ga=ga.sort(function(a,b){return a-b}),C.push(ga[0]),y=q=1,V=ga.length-1;V>=q;y=q+=2)isNaN(ga[y])||C.push(ga[y])}return C},D=function(a,b,c){var d,f,h,i;return d=va(arguments),a=d[0],b=d[1],c=d[2],a/=360,1/3>a?(f=(1-b)/3,i=(1+b*w(g*a)/w(e-g*a))/3,h=1-(f+i)):2/3>a?(a-=1/3,i=(1-b)/3,h=(1+b*w(g*a)/w(e-g*a))/3,f=1-(i+h)):(a-=2/3,h=(1-b)/3,f=(1+b*w(g*a)/w(e-g*a))/3,i=1-(h+f)),i=S(c*i*3),h=S(c*h*3),f=S(c*f*3),[255*i,255*h,255*f,d.length>3?d[3]:1]},da=function(){var a,b,c,d,e,f,h,i;return h=va(arguments),f=h[0],b=h[1],a=h[2],g=2*Math.PI,f/=255,b/=255,a/=255,e=Math.min(f,b,a),d=(f+b+a)/3,i=1-e/d,0===i?c=0:(c=(f-b+(f-a))/2,c/=Math.sqrt((f-b)*(f-b)+(f-a)*(b-a)),c=Math.acos(c),a>b&&(c=g-c),c/=g),[360*c,i,d]},s.hsi=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,za.call(arguments).concat([\"hsi\"]),function(){})},j.hsi=D,a.prototype.hsi=function(){return da(this._rgb)},I=function(a,b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p,q;return\"hsl\"===d?(p=a.hsl(),q=b.hsl()):\"hsv\"===d?(p=a.hsv(),q=b.hsv()):\"hsi\"===d?(p=a.hsi(),q=b.hsi()):(\"lch\"===d||\"hcl\"===d)&&(d=\"hcl\",p=a.hcl(),q=b.hcl()),\"h\"===d.substr(0,1)&&(g=p[0],n=p[1],j=p[2],h=q[0],o=q[1],k=q[2]),isNaN(g)||isNaN(h)?isNaN(g)?isNaN(h)?f=Number.NaN:(f=h,1!==j&&0!==j||\"hsv\"===d||(m=o)):(f=g,1!==k&&0!==k||\"hsv\"===d||(m=n)):(e=h>g&&h-g>180?h-(g+360):g>h&&g-h>180?h+360-g:h-g,f=g+c*e),null==m&&(m=n+c*(o-n)),i=j+c*(k-j),l=s[d](f,m,i)},k=k.concat(function(){var a,b,c,d;for(c=[\"hsv\",\"hsl\",\"hsi\",\"hcl\",\"lch\"],d=[],b=0,a=c.length;a>b;b++)V=c[b],d.push([V,I]);return d}()),K=function(a,b,c,d){var e,f;return e=a.num(),f=b.num(),s.num(e+(f-e)*c,\"num\")},k.push([\"num\",K]),J=function(b,c,d,e){var f,g,h;return g=b.lab(),h=c.lab(),f=new a(g[0]+d*(h[0]-g[0]),g[1]+d*(h[1]-g[1]),g[2]+d*(h[2]-g[2]),e);\r\n},k.push([\"lab\",J])}).call(this);",
    "static": true,
    "longname": "src/lib/chroma.min.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 277,
    "kind": "file",
    "name": "src/lib/earcut.js",
    "content": "'use strict';\r\n\r\n//module.exports = earcut;\r\n\r\nfunction earcut(data, holeIndices, dim) {\r\n\r\n    dim = dim || 2;\r\n\r\n    var hasHoles = holeIndices && holeIndices.length,\r\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\r\n        outerNode = linkedList(data, 0, outerLen, dim, true),\r\n        triangles = [];\r\n\r\n    if (!outerNode) return triangles;\r\n\r\n    var minX, minY, maxX, maxY, x, y, size;\r\n\r\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\r\n\r\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\r\n    if (data.length > 80 * dim) {\r\n        minX = maxX = data[0];\r\n        minY = maxY = data[1];\r\n\r\n        for (var i = dim; i < outerLen; i += dim) {\r\n            x = data[i];\r\n            y = data[i + 1];\r\n            if (x < minX) minX = x;\r\n            if (y < minY) minY = y;\r\n            if (x > maxX) maxX = x;\r\n            if (y > maxY) maxY = y;\r\n        }\r\n\r\n        // minX, minY and size are later used to transform coords into integers for z-order calculation\r\n        size = Math.max(maxX - minX, maxY - minY);\r\n    }\r\n\r\n    earcutLinked(outerNode, triangles, dim, minX, minY, size);\r\n\r\n    return triangles;\r\n}\r\n\r\n// create a circular doubly linked list from polygon points in the specified winding order\r\nfunction linkedList(data, start, end, dim, clockwise) {\r\n    var i, last;\r\n\r\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\r\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\r\n    } else {\r\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\r\n    }\r\n\r\n    if (last && equals(last, last.next)) {\r\n        removeNode(last);\r\n        last = last.next;\r\n    }\r\n\r\n    return last;\r\n}\r\n\r\n// eliminate colinear or duplicate points\r\nfunction filterPoints(start, end) {\r\n    if (!start) return start;\r\n    if (!end) end = start;\r\n\r\n    var p = start,\r\n        again;\r\n    do {\r\n        again = false;\r\n\r\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\r\n            removeNode(p);\r\n            p = end = p.prev;\r\n            if (p === p.next) return null;\r\n            again = true;\r\n\r\n        } else {\r\n            p = p.next;\r\n        }\r\n    } while (again || p !== end);\r\n\r\n    return end;\r\n}\r\n\r\n// main ear slicing loop which triangulates a polygon (given as a linked list)\r\nfunction earcutLinked(ear, triangles, dim, minX, minY, size, pass) {\r\n    if (!ear) return;\r\n\r\n    // interlink polygon nodes in z-order\r\n    if (!pass && size) indexCurve(ear, minX, minY, size);\r\n\r\n    var stop = ear,\r\n        prev, next;\r\n\r\n    // iterate through ears, slicing them one by one\r\n    while (ear.prev !== ear.next) {\r\n        prev = ear.prev;\r\n        next = ear.next;\r\n\r\n        if (size ? isEarHashed(ear, minX, minY, size) : isEar(ear)) {\r\n            // cut off the triangle\r\n            triangles.push(prev.i / dim);\r\n            triangles.push(ear.i / dim);\r\n            triangles.push(next.i / dim);\r\n\r\n            removeNode(ear);\r\n\r\n            // skipping the next vertice leads to less sliver triangles\r\n            ear = next.next;\r\n            stop = next.next;\r\n\r\n            continue;\r\n        }\r\n\r\n        ear = next;\r\n\r\n        // if we looped through the whole remaining polygon and can't find any more ears\r\n        if (ear === stop) {\r\n            // try filtering points and slicing again\r\n            if (!pass) {\r\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, size, 1);\r\n\r\n            // if this didn't work, try curing all small self-intersections locally\r\n            } else if (pass === 1) {\r\n                ear = cureLocalIntersections(ear, triangles, dim);\r\n                earcutLinked(ear, triangles, dim, minX, minY, size, 2);\r\n\r\n            // as a last resort, try splitting the remaining polygon into two\r\n            } else if (pass === 2) {\r\n                splitEarcut(ear, triangles, dim, minX, minY, size);\r\n            }\r\n\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\n// check whether a polygon node forms a valid ear with adjacent nodes\r\nfunction isEar(ear) {\r\n    var a = ear.prev,\r\n        b = ear,\r\n        c = ear.next;\r\n\r\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\r\n\r\n    // now make sure we don't have other points inside the potential ear\r\n    var p = ear.next.next;\r\n\r\n    while (p !== ear.prev) {\r\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\r\n            area(p.prev, p, p.next) >= 0) return false;\r\n        p = p.next;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction isEarHashed(ear, minX, minY, size) {\r\n    var a = ear.prev,\r\n        b = ear,\r\n        c = ear.next;\r\n\r\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\r\n\r\n    // triangle bbox; min & max are calculated like this for speed\r\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\r\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\r\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\r\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\r\n\r\n    // z-order range for the current triangle bbox;\r\n    var minZ = zOrder(minTX, minTY, minX, minY, size),\r\n        maxZ = zOrder(maxTX, maxTY, minX, minY, size);\r\n\r\n    // first look for points inside the triangle in increasing z-order\r\n    var p = ear.nextZ;\r\n\r\n    while (p && p.z <= maxZ) {\r\n        if (p !== ear.prev && p !== ear.next &&\r\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\r\n            area(p.prev, p, p.next) >= 0) return false;\r\n        p = p.nextZ;\r\n    }\r\n\r\n    // then look for points in decreasing z-order\r\n    p = ear.prevZ;\r\n\r\n    while (p && p.z >= minZ) {\r\n        if (p !== ear.prev && p !== ear.next &&\r\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\r\n            area(p.prev, p, p.next) >= 0) return false;\r\n        p = p.prevZ;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n// go through all polygon nodes and cure small local self-intersections\r\nfunction cureLocalIntersections(start, triangles, dim) {\r\n    var p = start;\r\n    do {\r\n        var a = p.prev,\r\n            b = p.next.next;\r\n\r\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\r\n\r\n            triangles.push(a.i / dim);\r\n            triangles.push(p.i / dim);\r\n            triangles.push(b.i / dim);\r\n\r\n            // remove two nodes involved\r\n            removeNode(p);\r\n            removeNode(p.next);\r\n\r\n            p = start = b;\r\n        }\r\n        p = p.next;\r\n    } while (p !== start);\r\n\r\n    return p;\r\n}\r\n\r\n// try splitting polygon into two and triangulate them independently\r\nfunction splitEarcut(start, triangles, dim, minX, minY, size) {\r\n    // look for a valid diagonal that divides the polygon into two\r\n    var a = start;\r\n    do {\r\n        var b = a.next.next;\r\n        while (b !== a.prev) {\r\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\r\n                // split the polygon in two by the diagonal\r\n                var c = splitPolygon(a, b);\r\n\r\n                // filter colinear points around the cuts\r\n                a = filterPoints(a, a.next);\r\n                c = filterPoints(c, c.next);\r\n\r\n                // run earcut on each half\r\n                earcutLinked(a, triangles, dim, minX, minY, size);\r\n                earcutLinked(c, triangles, dim, minX, minY, size);\r\n                return;\r\n            }\r\n            b = b.next;\r\n        }\r\n        a = a.next;\r\n    } while (a !== start);\r\n}\r\n\r\n// link every hole into the outer loop, producing a single-ring polygon without holes\r\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\r\n    var queue = [],\r\n        i, len, start, end, list;\r\n\r\n    for (i = 0, len = holeIndices.length; i < len; i++) {\r\n        start = holeIndices[i] * dim;\r\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\r\n        list = linkedList(data, start, end, dim, false);\r\n        if (list === list.next) list.steiner = true;\r\n        queue.push(getLeftmost(list));\r\n    }\r\n\r\n    queue.sort(compareX);\r\n\r\n    // process holes from left to right\r\n    for (i = 0; i < queue.length; i++) {\r\n        eliminateHole(queue[i], outerNode);\r\n        outerNode = filterPoints(outerNode, outerNode.next);\r\n    }\r\n\r\n    return outerNode;\r\n}\r\n\r\nfunction compareX(a, b) {\r\n    return a.x - b.x;\r\n}\r\n\r\n// find a bridge between vertices that connects hole with an outer ring and and link it\r\nfunction eliminateHole(hole, outerNode) {\r\n    outerNode = findHoleBridge(hole, outerNode);\r\n    if (outerNode) {\r\n        var b = splitPolygon(outerNode, hole);\r\n        filterPoints(b, b.next);\r\n    }\r\n}\r\n\r\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\r\nfunction findHoleBridge(hole, outerNode) {\r\n    var p = outerNode,\r\n        hx = hole.x,\r\n        hy = hole.y,\r\n        qx = -Infinity,\r\n        m;\r\n\r\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\r\n    // segment's endpoint with lesser x will be potential connection point\r\n    do {\r\n        if (hy <= p.y && hy >= p.next.y) {\r\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\r\n            if (x <= hx && x > qx) {\r\n                qx = x;\r\n                if (x === hx) {\r\n                    if (hy === p.y) return p;\r\n                    if (hy === p.next.y) return p.next;\r\n                }\r\n                m = p.x < p.next.x ? p : p.next;\r\n            }\r\n        }\r\n        p = p.next;\r\n    } while (p !== outerNode);\r\n\r\n    if (!m) return null;\r\n\r\n    if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\r\n\r\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\r\n    // if there are no points found, we have a valid connection;\r\n    // otherwise choose the point of the minimum angle with the ray as connection point\r\n\r\n    var stop = m,\r\n        mx = m.x,\r\n        my = m.y,\r\n        tanMin = Infinity,\r\n        tan;\r\n\r\n    p = m.next;\r\n\r\n    while (p !== stop) {\r\n        if (hx >= p.x && p.x >= mx &&\r\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\r\n\r\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\r\n\r\n            if ((tan < tanMin || (tan === tanMin && p.x > m.x)) && locallyInside(p, hole)) {\r\n                m = p;\r\n                tanMin = tan;\r\n            }\r\n        }\r\n\r\n        p = p.next;\r\n    }\r\n\r\n    return m;\r\n}\r\n\r\n// interlink polygon nodes in z-order\r\nfunction indexCurve(start, minX, minY, size) {\r\n    var p = start;\r\n    do {\r\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, size);\r\n        p.prevZ = p.prev;\r\n        p.nextZ = p.next;\r\n        p = p.next;\r\n    } while (p !== start);\r\n\r\n    p.prevZ.nextZ = null;\r\n    p.prevZ = null;\r\n\r\n    sortLinked(p);\r\n}\r\n\r\n// Simon Tatham's linked list merge sort algorithm\r\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\r\nfunction sortLinked(list) {\r\n    var i, p, q, e, tail, numMerges, pSize, qSize,\r\n        inSize = 1;\r\n\r\n    do {\r\n        p = list;\r\n        list = null;\r\n        tail = null;\r\n        numMerges = 0;\r\n\r\n        while (p) {\r\n            numMerges++;\r\n            q = p;\r\n            pSize = 0;\r\n            for (i = 0; i < inSize; i++) {\r\n                pSize++;\r\n                q = q.nextZ;\r\n                if (!q) break;\r\n            }\r\n\r\n            qSize = inSize;\r\n\r\n            while (pSize > 0 || (qSize > 0 && q)) {\r\n\r\n                if (pSize === 0) {\r\n                    e = q;\r\n                    q = q.nextZ;\r\n                    qSize--;\r\n                } else if (qSize === 0 || !q) {\r\n                    e = p;\r\n                    p = p.nextZ;\r\n                    pSize--;\r\n                } else if (p.z <= q.z) {\r\n                    e = p;\r\n                    p = p.nextZ;\r\n                    pSize--;\r\n                } else {\r\n                    e = q;\r\n                    q = q.nextZ;\r\n                    qSize--;\r\n                }\r\n\r\n                if (tail) tail.nextZ = e;\r\n                else list = e;\r\n\r\n                e.prevZ = tail;\r\n                tail = e;\r\n            }\r\n\r\n            p = q;\r\n        }\r\n\r\n        tail.nextZ = null;\r\n        inSize *= 2;\r\n\r\n    } while (numMerges > 1);\r\n\r\n    return list;\r\n}\r\n\r\n// z-order of a point given coords and size of the data bounding box\r\nfunction zOrder(x, y, minX, minY, size) {\r\n    // coords are transformed into non-negative 15-bit integer range\r\n    x = 32767 * (x - minX) / size;\r\n    y = 32767 * (y - minY) / size;\r\n\r\n    x = (x | (x << 8)) & 0x00FF00FF;\r\n    x = (x | (x << 4)) & 0x0F0F0F0F;\r\n    x = (x | (x << 2)) & 0x33333333;\r\n    x = (x | (x << 1)) & 0x55555555;\r\n\r\n    y = (y | (y << 8)) & 0x00FF00FF;\r\n    y = (y | (y << 4)) & 0x0F0F0F0F;\r\n    y = (y | (y << 2)) & 0x33333333;\r\n    y = (y | (y << 1)) & 0x55555555;\r\n\r\n    return x | (y << 1);\r\n}\r\n\r\n// find the leftmost node of a polygon ring\r\nfunction getLeftmost(start) {\r\n    var p = start,\r\n        leftmost = start;\r\n    do {\r\n        if (p.x < leftmost.x) leftmost = p;\r\n        p = p.next;\r\n    } while (p !== start);\r\n\r\n    return leftmost;\r\n}\r\n\r\n// check if a point lies within a convex triangle\r\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\r\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\r\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\r\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\r\n}\r\n\r\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\r\nfunction isValidDiagonal(a, b) {\r\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) &&\r\n           locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b);\r\n}\r\n\r\n// signed area of a triangle\r\nfunction area(p, q, r) {\r\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\r\n}\r\n\r\n// check if two points are equal\r\nfunction equals(p1, p2) {\r\n    return p1.x === p2.x && p1.y === p2.y;\r\n}\r\n\r\n// check if two segments intersect\r\nfunction intersects(p1, q1, p2, q2) {\r\n    if ((equals(p1, q1) && equals(p2, q2)) ||\r\n        (equals(p1, q2) && equals(p2, q1))) return true;\r\n    return area(p1, q1, p2) > 0 !== area(p1, q1, q2) > 0 &&\r\n           area(p2, q2, p1) > 0 !== area(p2, q2, q1) > 0;\r\n}\r\n\r\n// check if a polygon diagonal intersects any polygon segments\r\nfunction intersectsPolygon(a, b) {\r\n    var p = a;\r\n    do {\r\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\r\n                intersects(p, p.next, a, b)) return true;\r\n        p = p.next;\r\n    } while (p !== a);\r\n\r\n    return false;\r\n}\r\n\r\n// check if a polygon diagonal is locally inside the polygon\r\nfunction locallyInside(a, b) {\r\n    return area(a.prev, a, a.next) < 0 ?\r\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\r\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\r\n}\r\n\r\n// check if the middle point of a polygon diagonal is inside the polygon\r\nfunction middleInside(a, b) {\r\n    var p = a,\r\n        inside = false,\r\n        px = (a.x + b.x) / 2,\r\n        py = (a.y + b.y) / 2;\r\n    do {\r\n        if (((p.y > py) !== (p.next.y > py)) && (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\r\n            inside = !inside;\r\n        p = p.next;\r\n    } while (p !== a);\r\n\r\n    return inside;\r\n}\r\n\r\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\r\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\r\nfunction splitPolygon(a, b) {\r\n    var a2 = new Node(a.i, a.x, a.y),\r\n        b2 = new Node(b.i, b.x, b.y),\r\n        an = a.next,\r\n        bp = b.prev;\r\n\r\n    a.next = b;\r\n    b.prev = a;\r\n\r\n    a2.next = an;\r\n    an.prev = a2;\r\n\r\n    b2.next = a2;\r\n    a2.prev = b2;\r\n\r\n    bp.next = b2;\r\n    b2.prev = bp;\r\n\r\n    return b2;\r\n}\r\n\r\n// create a node and optionally link it with previous one (in a circular doubly linked list)\r\nfunction insertNode(i, x, y, last) {\r\n    var p = new Node(i, x, y);\r\n\r\n    if (!last) {\r\n        p.prev = p;\r\n        p.next = p;\r\n\r\n    } else {\r\n        p.next = last.next;\r\n        p.prev = last;\r\n        last.next.prev = p;\r\n        last.next = p;\r\n    }\r\n    return p;\r\n}\r\n\r\nfunction removeNode(p) {\r\n    p.next.prev = p.prev;\r\n    p.prev.next = p.next;\r\n\r\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\r\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\r\n}\r\n\r\nfunction Node(i, x, y) {\r\n    // vertice index in coordinates array\r\n    this.i = i;\r\n\r\n    // vertex coordinates\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    // previous and next vertice nodes in a polygon ring\r\n    this.prev = null;\r\n    this.next = null;\r\n\r\n    // z-order curve value\r\n    this.z = null;\r\n\r\n    // previous and next nodes in z-order\r\n    this.prevZ = null;\r\n    this.nextZ = null;\r\n\r\n    // indicates whether this is a steiner point\r\n    this.steiner = false;\r\n}\r\n\r\n// return a percentage difference between the polygon area and its triangulation area;\r\n// used to verify correctness of triangulation\r\nearcut.deviation = function (data, holeIndices, dim, triangles) {\r\n    var hasHoles = holeIndices && holeIndices.length;\r\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\r\n\r\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\r\n    if (hasHoles) {\r\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\r\n            var start = holeIndices[i] * dim;\r\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\r\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\r\n        }\r\n    }\r\n\r\n    var trianglesArea = 0;\r\n    for (i = 0; i < triangles.length; i += 3) {\r\n        var a = triangles[i] * dim;\r\n        var b = triangles[i + 1] * dim;\r\n        var c = triangles[i + 2] * dim;\r\n        trianglesArea += Math.abs(\r\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\r\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\r\n    }\r\n\r\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\r\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\r\n};\r\n\r\nfunction signedArea(data, start, end, dim) {\r\n    var sum = 0;\r\n    for (var i = start, j = end - dim; i < end; i += dim) {\r\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\r\n        j = i;\r\n    }\r\n    return sum;\r\n}\r\n\r\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\r\nearcut.flatten = function (data) {\r\n    var dim = data[0][0].length,\r\n        result = {vertices: [], holes: [], dimensions: dim},\r\n        holeIndex = 0;\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        for (var j = 0; j < data[i].length; j++) {\r\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\r\n        }\r\n        if (i > 0) {\r\n            holeIndex += data[i - 1].length;\r\n            result.holes.push(holeIndex);\r\n        }\r\n    }\r\n    return result;\r\n};",
    "static": true,
    "longname": "src/lib/earcut.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 278,
    "kind": "function",
    "name": "earcut",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~earcut",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      },
      {
        "name": "holeIndices",
        "types": [
          "*"
        ]
      },
      {
        "name": "dim",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 279,
    "kind": "function",
    "name": "linkedList",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~linkedList",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      },
      {
        "name": "start",
        "types": [
          "*"
        ]
      },
      {
        "name": "end",
        "types": [
          "*"
        ]
      },
      {
        "name": "dim",
        "types": [
          "*"
        ]
      },
      {
        "name": "clockwise",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 280,
    "kind": "function",
    "name": "filterPoints",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~filterPoints",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "start",
        "types": [
          "*"
        ]
      },
      {
        "name": "end",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 281,
    "kind": "function",
    "name": "earcutLinked",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~earcutLinked",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "ear",
        "types": [
          "*"
        ]
      },
      {
        "name": "triangles",
        "types": [
          "*"
        ]
      },
      {
        "name": "dim",
        "types": [
          "*"
        ]
      },
      {
        "name": "minX",
        "types": [
          "*"
        ]
      },
      {
        "name": "minY",
        "types": [
          "*"
        ]
      },
      {
        "name": "size",
        "types": [
          "*"
        ]
      },
      {
        "name": "pass",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 282,
    "kind": "function",
    "name": "isEar",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~isEar",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 139,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "ear",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 283,
    "kind": "function",
    "name": "isEarHashed",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~isEarHashed",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 158,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "ear",
        "types": [
          "*"
        ]
      },
      {
        "name": "minX",
        "types": [
          "*"
        ]
      },
      {
        "name": "minY",
        "types": [
          "*"
        ]
      },
      {
        "name": "size",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 284,
    "kind": "function",
    "name": "cureLocalIntersections",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~cureLocalIntersections",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 199,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "start",
        "types": [
          "*"
        ]
      },
      {
        "name": "triangles",
        "types": [
          "*"
        ]
      },
      {
        "name": "dim",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 285,
    "kind": "function",
    "name": "splitEarcut",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~splitEarcut",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 224,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "start",
        "types": [
          "*"
        ]
      },
      {
        "name": "triangles",
        "types": [
          "*"
        ]
      },
      {
        "name": "dim",
        "types": [
          "*"
        ]
      },
      {
        "name": "minX",
        "types": [
          "*"
        ]
      },
      {
        "name": "minY",
        "types": [
          "*"
        ]
      },
      {
        "name": "size",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 286,
    "kind": "function",
    "name": "eliminateHoles",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~eliminateHoles",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 250,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      },
      {
        "name": "holeIndices",
        "types": [
          "*"
        ]
      },
      {
        "name": "outerNode",
        "types": [
          "*"
        ]
      },
      {
        "name": "dim",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 287,
    "kind": "function",
    "name": "compareX",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~compareX",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 273,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 288,
    "kind": "function",
    "name": "eliminateHole",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~eliminateHole",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 278,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "hole",
        "types": [
          "*"
        ]
      },
      {
        "name": "outerNode",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 289,
    "kind": "function",
    "name": "findHoleBridge",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~findHoleBridge",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 287,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "hole",
        "types": [
          "*"
        ]
      },
      {
        "name": "outerNode",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 290,
    "kind": "function",
    "name": "indexCurve",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~indexCurve",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 346,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "start",
        "types": [
          "*"
        ]
      },
      {
        "name": "minX",
        "types": [
          "*"
        ]
      },
      {
        "name": "minY",
        "types": [
          "*"
        ]
      },
      {
        "name": "size",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 291,
    "kind": "function",
    "name": "sortLinked",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~sortLinked",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 363,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "list",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 292,
    "kind": "function",
    "name": "zOrder",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~zOrder",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 424,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      },
      {
        "name": "minX",
        "types": [
          "*"
        ]
      },
      {
        "name": "minY",
        "types": [
          "*"
        ]
      },
      {
        "name": "size",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 293,
    "kind": "function",
    "name": "getLeftmost",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~getLeftmost",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 443,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "start",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 294,
    "kind": "function",
    "name": "pointInTriangle",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~pointInTriangle",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 455,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "ax",
        "types": [
          "*"
        ]
      },
      {
        "name": "ay",
        "types": [
          "*"
        ]
      },
      {
        "name": "bx",
        "types": [
          "*"
        ]
      },
      {
        "name": "by",
        "types": [
          "*"
        ]
      },
      {
        "name": "cx",
        "types": [
          "*"
        ]
      },
      {
        "name": "cy",
        "types": [
          "*"
        ]
      },
      {
        "name": "px",
        "types": [
          "*"
        ]
      },
      {
        "name": "py",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 295,
    "kind": "function",
    "name": "isValidDiagonal",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~isValidDiagonal",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 462,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 296,
    "kind": "function",
    "name": "area",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~area",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 468,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "p",
        "types": [
          "*"
        ]
      },
      {
        "name": "q",
        "types": [
          "*"
        ]
      },
      {
        "name": "r",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 297,
    "kind": "function",
    "name": "equals",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~equals",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 473,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "p1",
        "types": [
          "*"
        ]
      },
      {
        "name": "p2",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 298,
    "kind": "function",
    "name": "intersects",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~intersects",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 478,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "p1",
        "types": [
          "*"
        ]
      },
      {
        "name": "q1",
        "types": [
          "*"
        ]
      },
      {
        "name": "p2",
        "types": [
          "*"
        ]
      },
      {
        "name": "q2",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 299,
    "kind": "function",
    "name": "intersectsPolygon",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~intersectsPolygon",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 486,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 300,
    "kind": "function",
    "name": "locallyInside",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~locallyInside",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 498,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 301,
    "kind": "function",
    "name": "middleInside",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~middleInside",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 505,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 302,
    "kind": "function",
    "name": "splitPolygon",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~splitPolygon",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 521,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 303,
    "kind": "function",
    "name": "insertNode",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~insertNode",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 543,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "i",
        "types": [
          "*"
        ]
      },
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      },
      {
        "name": "last",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 304,
    "kind": "function",
    "name": "removeNode",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~removeNode",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 559,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "p",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 305,
    "kind": "function",
    "name": "Node",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~Node",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 567,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "i",
        "types": [
          "*"
        ]
      },
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 306,
    "kind": "function",
    "name": "deviation",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~deviation",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 592,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      },
      {
        "name": "holeIndices",
        "types": [
          "*"
        ]
      },
      {
        "name": "dim",
        "types": [
          "*"
        ]
      },
      {
        "name": "triangles",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 307,
    "kind": "function",
    "name": "signedArea",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~signedArea",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 619,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      },
      {
        "name": "start",
        "types": [
          "*"
        ]
      },
      {
        "name": "end",
        "types": [
          "*"
        ]
      },
      {
        "name": "dim",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 308,
    "kind": "function",
    "name": "flatten",
    "memberof": "src/lib/earcut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/earcut.js~flatten",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/earcut.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 629,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 309,
    "kind": "file",
    "name": "src/lib/jquery-2.1.4.min.js",
    "content": "/*! jQuery v2.1.4 | (c) 2005, 2015 jQuery Foundation, Inc. | jquery.org/license */\r\n!function(a,b){\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\"jQuery requires a window with a document\");return b(a)}:b(a)}(\"undefined\"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l=a.document,m=\"2.1.4\",n=function(a,b){return new n.fn.init(a,b)},o=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,p=/^-ms-/,q=/-([\\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:\"\",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return n.each(this,a,b)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\"boolean\"==typeof g&&(j=g,g=arguments[h]||{},h++),\"object\"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(n.isPlainObject(d)||(e=n.isArray(d)))?(e?(e=!1,f=c&&n.isArray(c)?c:[]):f=c&&n.isPlainObject(c)?c:{},g[b]=n.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},n.extend({expando:\"jQuery\"+(m+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\"function\"===n.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){return!n.isArray(a)&&a-parseFloat(a)+1>=0},isPlainObject:function(a){return\"object\"!==n.type(a)||a.nodeType||n.isWindow(a)?!1:a.constructor&&!j.call(a.constructor.prototype,\"isPrototypeOf\")?!1:!0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+\"\":\"object\"==typeof a||\"function\"==typeof a?h[i.call(a)]||\"object\":typeof a},globalEval:function(a){var b,c=eval;a=n.trim(a),a&&(1===a.indexOf(\"use strict\")?(b=l.createElement(\"script\"),b.text=a,l.head.appendChild(b).parentNode.removeChild(b)):c(a))},camelCase:function(a){return a.replace(p,\"ms-\").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=s(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?\"\":(a+\"\").replace(o,\"\")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,\"string\"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:g.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=s(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return\"string\"==typeof b&&(c=a[b],b=a,a=c),n.isFunction(a)?(e=d.call(arguments,2),f=function(){return a.apply(b||this,e.concat(d.call(arguments)))},f.guid=a.guid=a.guid||n.guid++,f):void 0},now:Date.now,support:k}),n.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(a,b){h[\"[object \"+b+\"]\"]=b.toLowerCase()});function s(a){var b=\"length\"in a&&a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:1===a.nodeType&&b?!0:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\"sizzle\"+1*new Date,v=a.document,w=0,x=0,y=ha(),z=ha(),A=ha(),B=function(a,b){return a===b&&(l=!0),0},C=1<<31,D={}.hasOwnProperty,E=[],F=E.pop,G=E.push,H=E.push,I=E.slice,J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1},K=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",L=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",M=\"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",N=M.replace(\"w\",\"w#\"),O=\"\\\\[\"+L+\"*(\"+M+\")(?:\"+L+\"*([*^$|!~]?=)\"+L+\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\"+N+\"))|)\"+L+\"*\\\\]\",P=\":(\"+M+\")(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+O+\")*)|.*)\\\\)|)\",Q=new RegExp(L+\"+\",\"g\"),R=new RegExp(\"^\"+L+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+L+\"+$\",\"g\"),S=new RegExp(\"^\"+L+\"*,\"+L+\"*\"),T=new RegExp(\"^\"+L+\"*([>+~]|\"+L+\")\"+L+\"*\"),U=new RegExp(\"=\"+L+\"*([^\\\\]'\\\"]*?)\"+L+\"*\\\\]\",\"g\"),V=new RegExp(P),W=new RegExp(\"^\"+N+\"$\"),X={ID:new RegExp(\"^#(\"+M+\")\"),CLASS:new RegExp(\"^\\\\.(\"+M+\")\"),TAG:new RegExp(\"^(\"+M.replace(\"w\",\"w*\")+\")\"),ATTR:new RegExp(\"^\"+O),PSEUDO:new RegExp(\"^\"+P),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+L+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+L+\"*(?:([+-]|)\"+L+\"*(\\\\d+)|))\"+L+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+K+\")$\",\"i\"),needsContext:new RegExp(\"^\"+L+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+L+\"*((?:-\\\\d)?\\\\d*)\"+L+\"*\\\\)|)(?=[^-]|$)\",\"i\")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\\d$/i,$=/^[^{]+\\{\\s*\\[native \\w/,_=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,aa=/[+~]/,ba=/'|\\\\/g,ca=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+L+\"?|(\"+L+\")|.)\",\"ig\"),da=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},ea=function(){m()};try{H.apply(E=I.call(v.childNodes),v.childNodes),E[v.childNodes.length].nodeType}catch(fa){H={apply:E.length?function(a,b){G.apply(a,I.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function ga(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,d=d||[],k=b.nodeType,\"string\"!=typeof a||!a||1!==k&&9!==k&&11!==k)return d;if(!e&&p){if(11!==k&&(f=_.exec(a)))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&&(h=b.ownerDocument.getElementById(j))&&t(b,h)&&h.id===j)return d.push(h),d}else{if(f[2])return H.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&&c.getElementsByClassName)return H.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&&(!q||!q.test(a))){if(s=r=u,w=b,x=1!==k&&a,1===k&&\"object\"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute(\"id\"))?s=r.replace(ba,\"\\\\$&\"):b.setAttribute(\"id\",s),s=\"[id='\"+s+\"'] \",l=o.length;while(l--)o[l]=s+ra(o[l]);w=aa.test(a)&&pa(b.parentNode)||b,x=o.join(\",\")}if(x)try{return H.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute(\"id\")}}}return i(a.replace(R,\"$1\"),b,d,e)}function ha(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}function ia(a){return a[u]=!0,a}function ja(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function ka(a,b){var c=a.split(\"|\"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function la(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}function na(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}function oa(a){return ia(function(b){return b=+b,ia(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function pa(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}c=ga.support={},f=ga.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?\"HTML\"!==b.nodeName:!1},m=ga.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=g.documentElement,e=g.defaultView,e&&e!==e.top&&(e.addEventListener?e.addEventListener(\"unload\",ea,!1):e.attachEvent&&e.attachEvent(\"onunload\",ea)),p=!f(g),c.attributes=ja(function(a){return a.className=\"i\",!a.getAttribute(\"className\")}),c.getElementsByTagName=ja(function(a){return a.appendChild(g.createComment(\"\")),!a.getElementsByTagName(\"*\").length}),c.getElementsByClassName=$.test(g.getElementsByClassName),c.getById=ja(function(a){return o.appendChild(a).id=u,!g.getElementsByName||!g.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if(\"undefined\"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(ca,da);return function(a){return a.getAttribute(\"id\")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(ca,da);return function(a){var c=\"undefined\"!=typeof a.getAttributeNode&&a.getAttributeNode(\"id\");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return\"undefined\"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if(\"*\"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(g.querySelectorAll))&&(ja(function(a){o.appendChild(a).innerHTML=\"<a id='\"+u+\"'></a><select id='\"+u+\"-\\f]' msallowcapture=''><option selected=''></option></select>\",a.querySelectorAll(\"[msallowcapture^='']\").length&&q.push(\"[*^$]=\"+L+\"*(?:''|\\\"\\\")\"),a.querySelectorAll(\"[selected]\").length||q.push(\"\\\\[\"+L+\"*(?:value|\"+K+\")\"),a.querySelectorAll(\"[id~=\"+u+\"-]\").length||q.push(\"~=\"),a.querySelectorAll(\":checked\").length||q.push(\":checked\"),a.querySelectorAll(\"a#\"+u+\"+*\").length||q.push(\".#.+[+~]\")}),ja(function(a){var b=g.createElement(\"input\");b.setAttribute(\"type\",\"hidden\"),a.appendChild(b).setAttribute(\"name\",\"D\"),a.querySelectorAll(\"[name=d]\").length&&q.push(\"name\"+L+\"*[*^$|!~]?=\"),a.querySelectorAll(\":enabled\").length||q.push(\":enabled\",\":disabled\"),a.querySelectorAll(\"*,:x\"),q.push(\",.*:\")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ja(function(a){c.disconnectedMatch=s.call(a,\"div\"),s.call(a,\"[s!='']:x\"),r.push(\"!=\",P)}),q=q.length&&new RegExp(q.join(\"|\")),r=r.length&&new RegExp(r.join(\"|\")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===g||a.ownerDocument===v&&t(v,a)?-1:b===g||b.ownerDocument===v&&t(v,b)?1:k?J(k,a)-J(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,h=[a],i=[b];if(!e||!f)return a===g?-1:b===g?1:e?-1:f?1:k?J(k,a)-J(k,b):0;if(e===f)return la(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?la(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},g):n},ga.matches=function(a,b){return ga(a,null,null,b)},ga.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(U,\"='$1']\"),!(!c.matchesSelector||!p||r&&r.test(b)||q&&q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return ga(b,n,null,[a]).length>0},ga.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},ga.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&D.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},ga.error=function(a){throw new Error(\"Syntax error, unrecognized expression: \"+a)},ga.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=ga.getText=function(a){var b,c=\"\",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if(\"string\"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=ga.selectors={cacheLength:50,createPseudo:ia,match:X,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(ca,da),a[3]=(a[3]||a[4]||a[5]||\"\").replace(ca,da),\"~=\"===a[2]&&(a[3]=\" \"+a[3]+\" \"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),\"nth\"===a[1].slice(0,3)?(a[3]||ga.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*(\"even\"===a[3]||\"odd\"===a[3])),a[5]=+(a[7]+a[8]||\"odd\"===a[3])):a[3]&&ga.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||\"\":c&&V.test(c)&&(b=g(c,!0))&&(b=c.indexOf(\")\",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(ca,da).toLowerCase();return\"*\"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+\" \"];return b||(b=new RegExp(\"(^|\"+L+\")\"+a+\"(\"+L+\"|$)\"))&&y(a,function(a){return b.test(\"string\"==typeof a.className&&a.className||\"undefined\"!=typeof a.getAttribute&&a.getAttribute(\"class\")||\"\")})},ATTR:function(a,b,c){return function(d){var e=ga.attr(d,a);return null==e?\"!=\"===b:b?(e+=\"\",\"=\"===b?e===c:\"!=\"===b?e!==c:\"^=\"===b?c&&0===e.indexOf(c):\"*=\"===b?c&&e.indexOf(c)>-1:\"$=\"===b?c&&e.slice(-c.length)===c:\"~=\"===b?(\" \"+e.replace(Q,\" \")+\" \").indexOf(c)>-1:\"|=\"===b?e===c||e.slice(0,c.length+1)===c+\"-\":!1):!0}},CHILD:function(a,b,c,d,e){var f=\"nth\"!==a.slice(0,3),g=\"last\"!==a.slice(-4),h=\"of-type\"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?\"nextSibling\":\"previousSibling\",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p=\"only\"===a&&!o&&\"nextSibling\"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&&j[1],m=j[0]===w&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if(1===l.nodeType&&++m&&l===b){k[a]=[w,n,m];break}}else if(s&&(j=(b[u]||(b[u]={}))[a])&&j[0]===w)m=j[1];else while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(s&&((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||ga.error(\"unsupported pseudo: \"+a);return e[u]?e(b):e.length>1?(c=[a,a,\"\",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ia(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=J(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ia(function(a){var b=[],c=[],d=h(a.replace(R,\"$1\"));return d[u]?ia(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ia(function(a){return function(b){return ga(a,b).length>0}}),contains:ia(function(a){return a=a.replace(ca,da),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ia(function(a){return W.test(a||\"\")||ga.error(\"unsupported lang: \"+a),a=a.replace(ca,da).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute(\"xml:lang\")||b.getAttribute(\"lang\"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+\"-\");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&!!a.checked||\"option\"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&\"button\"===a.type||\"button\"===b},text:function(a){var b;return\"input\"===a.nodeName.toLowerCase()&&\"text\"===a.type&&(null==(b=a.getAttribute(\"type\"))||\"text\"===b.toLowerCase())},first:oa(function(){return[0]}),last:oa(function(a,b){return[b-1]}),eq:oa(function(a,b,c){return[0>c?c+b:c]}),even:oa(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:oa(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:oa(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:oa(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=ma(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=na(b);function qa(){}qa.prototype=d.filters=d.pseudos,d.setFilters=new qa,g=ga.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+\" \"];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(R,\" \")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?ga.error(a):z(a,i).slice(0)};function ra(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}function sa(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&&h[0]===w&&h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function ta(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function ua(a,b,c){for(var d=0,e=b.length;e>d;d++)ga(a,b[d],c);return c}function va(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h));return g}function wa(a,b,c,d,e,f){return d&&!d[u]&&(d=wa(d)),e&&!e[u]&&(e=wa(e,f)),ia(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ua(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:va(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=va(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=va(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}function xa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=sa(function(a){return a===b},h,!0),l=sa(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[sa(ta(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return wa(i>1&&ta(m),i>1&&ra(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(R,\"$1\"),c,e>i&&xa(a.slice(i,e)),f>e&&xa(a=a.slice(e)),f>e&&ra(a))}m.push(c)}return ta(m)}function ya(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,m,o,p=0,q=\"0\",r=f&&[],s=[],t=j,u=f||e&&d.find.TAG(\"*\",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&&(j=g!==n&&g);q!==x&&null!=(l=u[q]);q++){if(e&&l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&&(w=v)}c&&((l=!o&&l)&&p--,f&&r.push(l))}if(p+=q,c&&q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p>0)while(q--)r[q]||s[q]||(s[q]=F.call(i));s=va(s)}H.apply(i,s),k&&!f&&s.length>0&&p+b.length>1&&ga.uniqueSort(i)}return k&&(w=v,j=t),r};return c?ia(f):f}return h=ga.compile=function(a,b){var c,d=[],e=[],f=A[a+\" \"];if(!f){b||(b=g(a)),c=b.length;while(c--)f=xa(b[c]),f[u]?d.push(f):e.push(f);f=A(a,ya(e,d)),f.selector=a}return f},i=ga.select=function(a,b,e,f){var i,j,k,l,m,n=\"function\"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&\"ID\"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(ca,da),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(ca,da),aa.test(j[0].type)&&pa(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&ra(j),!a)return H.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,aa.test(a)&&pa(b.parentNode)||b),e},c.sortStable=u.split(\"\").sort(B).join(\"\")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ja(function(a){return 1&a.compareDocumentPosition(n.createElement(\"div\"))}),ja(function(a){return a.innerHTML=\"<a href='#'></a>\",\"#\"===a.firstChild.getAttribute(\"href\")})||ka(\"type|href|height|width\",function(a,b,c){return c?void 0:a.getAttribute(b,\"type\"===b.toLowerCase()?1:2)}),c.attributes&&ja(function(a){return a.innerHTML=\"<input/>\",a.firstChild.setAttribute(\"value\",\"\"),\"\"===a.firstChild.getAttribute(\"value\")})||ka(\"value\",function(a,b,c){return c||\"input\"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ja(function(a){return null==a.getAttribute(\"disabled\")})||ka(K,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),ga}(a);n.find=t,n.expr=t.selectors,n.expr[\":\"]=n.expr.pseudos,n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=n.expr.match.needsContext,v=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,w=/^.[^:#\\[\\.,]*$/;function x(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(w.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return g.call(b,a)>=0!==c})}n.filter=function(a,b,c){var d=b[0];return c&&(a=\":not(\"+a+\")\"),1===b.length&&1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=this.length,d=[],e=this;if(\"string\"!=typeof a)return this.pushStack(n(a).filter(function(){for(b=0;c>b;b++)if(n.contains(e[b],this))return!0}));for(b=0;c>b;b++)n.find(a,e[b],d);return d=this.pushStack(c>1?n.unique(d):d),d.selector=this.selector?this.selector+\" \"+a:a,d},filter:function(a){return this.pushStack(x(this,a||[],!1))},not:function(a){return this.pushStack(x(this,a||[],!0))},is:function(a){return!!x(this,\"string\"==typeof a&&u.test(a)?n(a):a||[],!1).length}});var y,z=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,A=n.fn.init=function(a,b){var c,d;if(!a)return this;if(\"string\"==typeof a){if(c=\"<\"===a[0]&&\">\"===a[a.length-1]&&a.length>=3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||y).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:l,!0)),v.test(c[1])&&n.isPlainObject(b))for(c in b)n.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}return d=l.getElementById(c[2]),d&&d.parentNode&&(this.length=1,this[0]=d),this.context=l,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?\"undefined\"!=typeof y.ready?y.ready(a):a(n):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))};A.prototype=n.fn,y=n(l);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};n.extend({dir:function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}}),n.fn.extend({has:function(a){var b=n(a,this),c=b.length;return this.filter(function(){for(var a=0;c>a;a++)if(n.contains(this,b[a]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=u.test(a)||\"string\"!=typeof a?n(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&n.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?n.unique(f):f)},index:function(a){return a?\"string\"==typeof a?g.call(n(a),this[0]):g.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.unique(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){while((a=a[b])&&1!==a.nodeType);return a}n.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return n.dir(a,\"parentNode\")},parentsUntil:function(a,b,c){return n.dir(a,\"parentNode\",c)},next:function(a){return D(a,\"nextSibling\")},prev:function(a){return D(a,\"previousSibling\")},nextAll:function(a){return n.dir(a,\"nextSibling\")},prevAll:function(a){return n.dir(a,\"previousSibling\")},nextUntil:function(a,b,c){return n.dir(a,\"nextSibling\",c)},prevUntil:function(a,b,c){return n.dir(a,\"previousSibling\",c)},siblings:function(a){return n.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return n.sibling(a.firstChild)},contents:function(a){return a.contentDocument||n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return\"Until\"!==a.slice(-5)&&(d=c),d&&\"string\"==typeof d&&(e=n.filter(d,e)),this.length>1&&(C[a]||n.unique(e),B.test(a)&&e.reverse()),this.pushStack(e)}});var E=/\\S+/g,F={};function G(a){var b=F[a]={};return n.each(a.match(E)||[],function(a,c){b[c]=!0}),b}n.Callbacks=function(a){a=\"string\"==typeof a?F[a]||G(a):n.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(b=a.memory&&l,c=!0,g=e||0,e=0,f=h.length,d=!0;h&&f>g;g++)if(h[g].apply(l[0],l[1])===!1&&a.stopOnFalse){b=!1;break}d=!1,h&&(i?i.length&&j(i.shift()):b?h=[]:k.disable())},k={add:function(){if(h){var c=h.length;!function g(b){n.each(b,function(b,c){var d=n.type(c);\"function\"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&\"string\"!==d&&g(c)})}(arguments),d?f=h.length:b&&(e=c,j(b))}return this},remove:function(){return h&&n.each(arguments,function(a,b){var c;while((c=n.inArray(b,h,c))>-1)h.splice(c,1),d&&(f>=c&&f--,g>=c&&g--)}),this},has:function(a){return a?n.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],f=0,this},disable:function(){return h=i=b=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,b||k.disable(),this},locked:function(){return!i},fireWith:function(a,b){return!h||c&&!i||(b=b||[],b=[a,b.slice?b.slice():b],d?i.push(b):j(b)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!c}};return k},n.extend({Deferred:function(a){var b=[[\"resolve\",\"done\",n.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",n.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",n.Callbacks(\"memory\")]],c=\"pending\",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&n.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+\"With\"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+\"With\"](this===e?d:this,arguments),this},e[f[0]+\"With\"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&n.isFunction(a.promise)?e:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++)c[b]&&n.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0)},ready:function(a){(a===!0?--n.readyWait:n.isReady)||(n.isReady=!0,a!==!0&&--n.readyWait>0||(H.resolveWith(l,[n]),n.fn.triggerHandler&&(n(l).triggerHandler(\"ready\"),n(l).off(\"ready\"))))}});function I(){l.removeEventListener(\"DOMContentLoaded\",I,!1),a.removeEventListener(\"load\",I,!1),n.ready()}n.ready.promise=function(b){return H||(H=n.Deferred(),\"complete\"===l.readyState?setTimeout(n.ready):(l.addEventListener(\"DOMContentLoaded\",I,!1),a.addEventListener(\"load\",I,!1))),H.promise(b)},n.ready.promise();var J=n.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)n.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f};n.acceptData=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function K(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=n.expando+K.uid++}K.uid=1,K.accepts=n.acceptData,K.prototype={key:function(a){if(!K.accepts(a))return 0;var b={},c=a[this.expando];if(!c){c=K.uid++;try{b[this.expando]={value:c},Object.defineProperties(a,b)}catch(d){b[this.expando]=c,n.extend(a,b)}}return this.cache[c]||(this.cache[c]={}),c},set:function(a,b,c){var d,e=this.key(a),f=this.cache[e];if(\"string\"==typeof b)f[b]=c;else if(n.isEmptyObject(f))n.extend(this.cache[e],b);else for(d in b)f[d]=b[d];return f},get:function(a,b){var c=this.cache[this.key(a)];return void 0===b?c:c[b]},access:function(a,b,c){var d;return void 0===b||b&&\"string\"==typeof b&&void 0===c?(d=this.get(a,b),void 0!==d?d:this.get(a,n.camelCase(b))):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d,e,f=this.key(a),g=this.cache[f];if(void 0===b)this.cache[f]={};else{n.isArray(b)?d=b.concat(b.map(n.camelCase)):(e=n.camelCase(b),b in g?d=[b,e]:(d=e,d=d in g?[d]:d.match(E)||[])),c=d.length;while(c--)delete g[d[c]]}},hasData:function(a){return!n.isEmptyObject(this.cache[a[this.expando]]||{})},discard:function(a){a[this.expando]&&delete this.cache[a[this.expando]]}};var L=new K,M=new K,N=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,O=/([A-Z])/g;function P(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d=\"data-\"+b.replace(O,\"-$1\").toLowerCase(),c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}M.set(a,b,c)}else c=void 0;return c}n.extend({hasData:function(a){return M.hasData(a)||L.hasData(a)},data:function(a,b,c){\r\nreturn M.access(a,b,c)},removeData:function(a,b){M.remove(a,b)},_data:function(a,b,c){return L.access(a,b,c)},_removeData:function(a,b){L.remove(a,b)}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=M.get(f),1===f.nodeType&&!L.get(f,\"hasDataAttrs\"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf(\"data-\")&&(d=n.camelCase(d.slice(5)),P(f,d,e[d])));L.set(f,\"hasDataAttrs\",!0)}return e}return\"object\"==typeof a?this.each(function(){M.set(this,a)}):J(this,function(b){var c,d=n.camelCase(a);if(f&&void 0===b){if(c=M.get(f,a),void 0!==c)return c;if(c=M.get(f,d),void 0!==c)return c;if(c=P(f,d,void 0),void 0!==c)return c}else this.each(function(){var c=M.get(this,d);M.set(this,d,b),-1!==a.indexOf(\"-\")&&void 0!==c&&M.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){M.remove(this,a)})}}),n.extend({queue:function(a,b,c){var d;return a?(b=(b||\"fx\")+\"queue\",d=L.get(a,b),c&&(!d||n.isArray(c)?d=L.access(a,b,n.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||\"fx\";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b)};\"inprogress\"===e&&(e=c.shift(),d--),e&&(\"fx\"===b&&c.unshift(\"inprogress\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\"queueHooks\";return L.get(a,c)||L.access(a,c,{empty:n.Callbacks(\"once memory\").add(function(){L.remove(a,[b+\"queue\",c])})})}}),n.fn.extend({queue:function(a,b){var c=2;return\"string\"!=typeof a&&(b=a,a=\"fx\",c--),arguments.length<c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),\"fx\"===a&&\"inprogress\"!==c[0]&&n.dequeue(this,a)})},dequeue:function(a){return this.each(function(){n.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||\"fx\",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};\"string\"!=typeof a&&(b=a,a=void 0),a=a||\"fx\";while(g--)c=L.get(f[g],a+\"queueHooks\"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var Q=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,R=[\"Top\",\"Right\",\"Bottom\",\"Left\"],S=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)},T=/^(?:checkbox|radio)$/i;!function(){var a=l.createDocumentFragment(),b=a.appendChild(l.createElement(\"div\")),c=l.createElement(\"input\");c.setAttribute(\"type\",\"radio\"),c.setAttribute(\"checked\",\"checked\"),c.setAttribute(\"name\",\"t\"),b.appendChild(c),k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML=\"<textarea>x</textarea>\",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var U=\"undefined\";k.focusinBubbles=\"onfocusin\"in a;var V=/^key/,W=/^(?:mouse|pointer|contextmenu)|click/,X=/^(?:focusinfocus|focusoutblur)$/,Y=/^([^.]*)(?:\\.(.+)|)$/;function Z(){return!0}function $(){return!1}function _(){try{return l.activeElement}catch(a){}}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.get(a);if(r){c.handler&&(f=c,c=f.handler,e=f.selector),c.guid||(c.guid=n.guid++),(i=r.events)||(i=r.events={}),(g=r.handle)||(g=r.handle=function(b){return typeof n!==U&&n.event.triggered!==b.type?n.event.dispatch.apply(a,arguments):void 0}),b=(b||\"\").match(E)||[\"\"],j=b.length;while(j--)h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||\"\").split(\".\").sort(),o&&(l=n.event.special[o]||{},o=(e?l.delegateType:l.bindType)||o,l=n.event.special[o]||{},k=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&n.expr.match.needsContext.test(e),namespace:p.join(\".\")},f),(m=i[o])||(m=i[o]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,p,g)!==!1||a.addEventListener&&a.addEventListener(o,g,!1)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),n.event.global[o]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.hasData(a)&&L.get(a);if(r&&(i=r.events)){b=(b||\"\").match(E)||[\"\"],j=b.length;while(j--)if(h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||\"\").split(\".\").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=i[o]||[],h=h[2]&&new RegExp(\"(^|\\\\.)\"+p.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),g=f=m.length;while(f--)k=m[f],!e&&q!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&(\"**\"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||n.removeEvent(a,o,r.handle),delete i[o])}else for(o in i)n.event.remove(a,o+b[j],c,d,!0);n.isEmptyObject(i)&&(delete r.handle,L.remove(a,\"events\"))}},trigger:function(b,c,d,e){var f,g,h,i,k,m,o,p=[d||l],q=j.call(b,\"type\")?b.type:b,r=j.call(b,\"namespace\")?b.namespace.split(\".\"):[];if(g=h=d=d||l,3!==d.nodeType&&8!==d.nodeType&&!X.test(q+n.event.triggered)&&(q.indexOf(\".\")>=0&&(r=q.split(\".\"),q=r.shift(),r.sort()),k=q.indexOf(\":\")<0&&\"on\"+q,b=b[n.expando]?b:new n.Event(q,\"object\"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=r.join(\".\"),b.namespace_re=b.namespace?new RegExp(\"(^|\\\\.)\"+r.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:n.makeArray(c,[b]),o=n.event.special[q]||{},e||!o.trigger||o.trigger.apply(d,c)!==!1)){if(!e&&!o.noBubble&&!n.isWindow(d)){for(i=o.delegateType||q,X.test(i+q)||(g=g.parentNode);g;g=g.parentNode)p.push(g),h=g;h===(d.ownerDocument||l)&&p.push(h.defaultView||h.parentWindow||a)}f=0;while((g=p[f++])&&!b.isPropagationStopped())b.type=f>1?i:o.bindType||q,m=(L.get(g,\"events\")||{})[b.type]&&L.get(g,\"handle\"),m&&m.apply(g,c),m=k&&g[k],m&&m.apply&&n.acceptData(g)&&(b.result=m.apply(g,c),b.result===!1&&b.preventDefault());return b.type=q,e||b.isDefaultPrevented()||o._default&&o._default.apply(p.pop(),c)!==!1||!n.acceptData(d)||k&&n.isFunction(d[q])&&!n.isWindow(d)&&(h=d[k],h&&(d[k]=null),n.event.triggered=q,d[q](),n.event.triggered=void 0,h&&(d[k]=h)),b.result}},dispatch:function(a){a=n.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(L.get(this,\"events\")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&&!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(g.namespace))&&(a.handleObj=g,a.data=g.data,e=((n.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(a.result=e)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||\"click\"!==a.type))for(;i!==this;i=i.parentNode||this)if(i.disabled!==!0||\"click\"!==a.type){for(d=[],c=0;h>c;c++)f=b[c],e=f.selector+\" \",void 0===d[e]&&(d[e]=f.needsContext?n(e,this).index(i)>=0:n.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},props:\"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:\"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),filter:function(a,b){var c,d,e,f=b.button;return null==a.pageX&&null!=b.clientX&&(c=a.target.ownerDocument||l,d=c.documentElement,e=c.body,a.pageX=b.clientX+(d&&d.scrollLeft||e&&e.scrollLeft||0)-(d&&d.clientLeft||e&&e.clientLeft||0),a.pageY=b.clientY+(d&&d.scrollTop||e&&e.scrollTop||0)-(d&&d.clientTop||e&&e.clientTop||0)),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},fix:function(a){if(a[n.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=W.test(e)?this.mouseHooks:V.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new n.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=l),3===a.target.nodeType&&(a.target=a.target.parentNode),g.filter?g.filter(a,f):a},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==_()&&this.focus?(this.focus(),!1):void 0},delegateType:\"focusin\"},blur:{trigger:function(){return this===_()&&this.blur?(this.blur(),!1):void 0},delegateType:\"focusout\"},click:{trigger:function(){return\"checkbox\"===this.type&&this.click&&n.nodeName(this,\"input\")?(this.click(),!1):void 0},_default:function(a){return n.nodeName(a.target,\"a\")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=n.extend(new n.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?n.event.trigger(e,null,b):n.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},n.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)},n.Event=function(a,b){return this instanceof n.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?Z:$):this.type=a,b&&n.extend(this,b),this.timeStamp=a&&a.timeStamp||n.now(),void(this[n.expando]=!0)):new n.Event(a,b)},n.Event.prototype={isDefaultPrevented:$,isPropagationStopped:$,isImmediatePropagationStopped:$,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=Z,a&&a.preventDefault&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=Z,a&&a.stopPropagation&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=Z,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}},n.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!n.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.focusinBubbles||n.each({focus:\"focusin\",blur:\"focusout\"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a),!0)};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=L.access(d,b);e||d.addEventListener(a,c,!0),L.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=L.access(d,b)-1;e?L.access(d,b,e):(d.removeEventListener(a,c,!0),L.remove(d,b))}}}),n.fn.extend({on:function(a,b,c,d,e){var f,g;if(\"object\"==typeof a){\"string\"!=typeof b&&(c=c||b,b=void 0);for(g in a)this.on(g,b,c,a[g],e);return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&(\"string\"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=$;else if(!d)return this;return 1===e&&(f=d,d=function(a){return n().off(a),f.apply(this,arguments)},d.guid=f.guid||(f.guid=n.guid++)),this.each(function(){n.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+\".\"+d.namespace:d.origType,d.selector,d.handler),this;if(\"object\"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||\"function\"==typeof b)&&(c=b,b=void 0),c===!1&&(c=$),this.each(function(){n.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?n.event.trigger(a,b,c,!0):void 0}});var aa=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,ba=/<([\\w:]+)/,ca=/<|&#?\\w+;/,da=/<(?:script|style|link)/i,ea=/checked\\s*(?:[^=]|=\\s*.checked.)/i,fa=/^$|\\/(?:java|ecma)script/i,ga=/^true\\/(.*)/,ha=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,ia={option:[1,\"<select multiple='multiple'>\",\"</select>\"],thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};ia.optgroup=ia.option,ia.tbody=ia.tfoot=ia.colgroup=ia.caption=ia.thead,ia.th=ia.td;function ja(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}function ka(a){return a.type=(null!==a.getAttribute(\"type\"))+\"/\"+a.type,a}function la(a){var b=ga.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}function ma(a,b){for(var c=0,d=a.length;d>c;c++)L.set(a[c],\"globalEval\",!b||L.get(b[c],\"globalEval\"))}function na(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(L.hasData(a)&&(f=L.access(a),g=L.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;d>c;c++)n.event.add(b,e,j[e][c])}M.hasData(a)&&(h=M.access(a),i=n.extend({},h),M.set(b,i))}}function oa(a,b){var c=a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):a.querySelectorAll?a.querySelectorAll(b||\"*\"):[];return void 0===b||b&&n.nodeName(a,b)?n.merge([a],c):c}function pa(a,b){var c=b.nodeName.toLowerCase();\"input\"===c&&T.test(a.type)?b.checked=a.checked:(\"input\"===c||\"textarea\"===c)&&(b.defaultValue=a.defaultValue)}n.extend({clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=n.contains(a.ownerDocument,a);if(!(k.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||n.isXMLDoc(a)))for(g=oa(h),f=oa(a),d=0,e=f.length;e>d;d++)pa(f[d],g[d]);if(b)if(c)for(f=f||oa(a),g=g||oa(h),d=0,e=f.length;e>d;d++)na(f[d],g[d]);else na(a,h);return g=oa(h,\"script\"),g.length>0&&ma(g,!i&&oa(a,\"script\")),h},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,k=b.createDocumentFragment(),l=[],m=0,o=a.length;o>m;m++)if(e=a[m],e||0===e)if(\"object\"===n.type(e))n.merge(l,e.nodeType?[e]:e);else if(ca.test(e)){f=f||k.appendChild(b.createElement(\"div\")),g=(ba.exec(e)||[\"\",\"\"])[1].toLowerCase(),h=ia[g]||ia._default,f.innerHTML=h[1]+e.replace(aa,\"<$1></$2>\")+h[2],j=h[0];while(j--)f=f.lastChild;n.merge(l,f.childNodes),f=k.firstChild,f.textContent=\"\"}else l.push(b.createTextNode(e));k.textContent=\"\",m=0;while(e=l[m++])if((!d||-1===n.inArray(e,d))&&(i=n.contains(e.ownerDocument,e),f=oa(k.appendChild(e),\"script\"),i&&ma(f),c)){j=0;while(e=f[j++])fa.test(e.type||\"\")&&c.push(e)}return k},cleanData:function(a){for(var b,c,d,e,f=n.event.special,g=0;void 0!==(c=a[g]);g++){if(n.acceptData(c)&&(e=c[L.expando],e&&(b=L.cache[e]))){if(b.events)for(d in b.events)f[d]?n.event.remove(c,d):n.removeEvent(c,d,b.handle);L.cache[e]&&delete L.cache[e]}delete M.cache[c[M.expando]]}}}),n.fn.extend({text:function(a){return J(this,function(a){return void 0===a?n.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=a)})},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=ja(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=ja(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?n.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||n.cleanData(oa(c)),c.parentNode&&(b&&n.contains(c.ownerDocument,c)&&ma(oa(c,\"script\")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(n.cleanData(oa(a,!1)),a.textContent=\"\");return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return J(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if(\"string\"==typeof a&&!da.test(a)&&!ia[(ba.exec(a)||[\"\",\"\"])[1].toLowerCase()]){a=a.replace(aa,\"<$1></$2>\");try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(n.cleanData(oa(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,n.cleanData(oa(this)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,m=this,o=l-1,p=a[0],q=n.isFunction(p);if(q||l>1&&\"string\"==typeof p&&!k.checkClone&&ea.test(p))return this.each(function(c){var d=m.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(l&&(c=n.buildFragment(a,this[0].ownerDocument,!1,this),d=c.firstChild,1===c.childNodes.length&&(c=d),d)){for(f=n.map(oa(c,\"script\"),ka),g=f.length;l>j;j++)h=c,j!==o&&(h=n.clone(h,!0,!0),g&&n.merge(f,oa(h,\"script\"))),b.call(this[j],h,j);if(g)for(i=f[f.length-1].ownerDocument,n.map(f,la),j=0;g>j;j++)h=f[j],fa.test(h.type||\"\")&&!L.access(h,\"globalEval\")&&n.contains(i,h)&&(h.src?n._evalUrl&&n._evalUrl(h.src):n.globalEval(h.textContent.replace(ha,\"\")))}return this}}),n.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(a,b){n.fn[a]=function(a){for(var c,d=[],e=n(a),g=e.length-1,h=0;g>=h;h++)c=h===g?this:this.clone(!0),n(e[h])[b](c),f.apply(d,c.get());return this.pushStack(d)}});var qa,ra={};function sa(b,c){var d,e=n(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&&(d=a.getDefaultComputedStyle(e[0]))?d.display:n.css(e[0],\"display\");return e.detach(),f}function ta(a){var b=l,c=ra[a];return c||(c=sa(a,b),\"none\"!==c&&c||(qa=(qa||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=qa[0].contentDocument,b.write(),b.close(),c=sa(a,b),qa.detach()),ra[a]=c),c}var ua=/^margin/,va=new RegExp(\"^(\"+Q+\")(?!px)[a-z%]+$\",\"i\"),wa=function(b){return b.ownerDocument.defaultView.opener?b.ownerDocument.defaultView.getComputedStyle(b,null):a.getComputedStyle(b,null)};function xa(a,b,c){var d,e,f,g,h=a.style;return c=c||wa(a),c&&(g=c.getPropertyValue(b)||c[b]),c&&(\"\"!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),va.test(g)&&ua.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+\"\":g}function ya(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d=l.documentElement,e=l.createElement(\"div\"),f=l.createElement(\"div\");if(f.style){f.style.backgroundClip=\"content-box\",f.cloneNode(!0).style.backgroundClip=\"\",k.clearCloneStyle=\"content-box\"===f.style.backgroundClip,e.style.cssText=\"border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute\",e.appendChild(f);function g(){f.style.cssText=\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute\",f.innerHTML=\"\",d.appendChild(e);var g=a.getComputedStyle(f,null);b=\"1%\"!==g.top,c=\"4px\"===g.width,d.removeChild(e)}a.getComputedStyle&&n.extend(k,{pixelPosition:function(){return g(),b},boxSizingReliable:function(){return null==c&&g(),c},reliableMarginRight:function(){var b,c=f.appendChild(l.createElement(\"div\"));return c.style.cssText=f.style.cssText=\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",c.style.marginRight=c.style.width=\"0\",f.style.width=\"1px\",d.appendChild(e),b=!parseFloat(a.getComputedStyle(c,null).marginRight),d.removeChild(e),f.removeChild(c),b}})}}(),n.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var za=/^(none|table(?!-c[ea]).+)/,Aa=new RegExp(\"^(\"+Q+\")(.*)$\",\"i\"),Ba=new RegExp(\"^([+-])=(\"+Q+\")\",\"i\"),Ca={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Da={letterSpacing:\"0\",fontWeight:\"400\"},Ea=[\"Webkit\",\"O\",\"Moz\",\"ms\"];function Fa(a,b){if(b in a)return b;var c=b[0].toUpperCase()+b.slice(1),d=b,e=Ea.length;while(e--)if(b=Ea[e]+c,b in a)return b;return d}function Ga(a,b,c){var d=Aa.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}function Ha(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+R[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+R[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+R[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+R[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+R[f]+\"Width\",!0,e)));return g}function Ia(a,b,c){var d=!0,e=\"width\"===b?a.offsetWidth:a.offsetHeight,f=wa(a),g=\"border-box\"===n.css(a,\"boxSizing\",!1,f);if(0>=e||null==e){if(e=xa(a,b,f),(0>e||null==e)&&(e=a.style[b]),va.test(e))return e;d=g&&(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Ha(a,b,c||(g?\"border\":\"content\"),d,f)+\"px\"}function Ja(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=L.get(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&S(d)&&(f[g]=L.access(d,\"olddisplay\",ta(d.nodeName)))):(e=S(d),\"none\"===c&&e||L.set(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=xa(a,\"opacity\");return\"\"===c?\"1\":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":\"cssFloat\"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=n.camelCase(b),i=a.style;return b=n.cssProps[h]||(n.cssProps[h]=Fa(i,h)),g=n.cssHooks[b]||n.cssHooks[h],void 0===c?g&&\"get\"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,\"string\"===f&&(e=Ba.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(n.css(a,b)),f=\"number\"),null!=c&&c===c&&(\"number\"!==f||n.cssNumber[h]||(c+=\"px\"),k.clearCloneStyle||\"\"!==c||0!==b.indexOf(\"background\")||(i[b]=\"inherit\"),g&&\"set\"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=Fa(a.style,h)),g=n.cssHooks[b]||n.cssHooks[h],g&&\"get\"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=xa(a,b,d)),\"normal\"===e&&b in Da&&(e=Da[b]),\"\"===c||c?(f=parseFloat(e),c===!0||n.isNumeric(f)?f||0:e):e}}),n.each([\"height\",\"width\"],function(a,b){n.cssHooks[b]={get:function(a,c,d){return c?za.test(n.css(a,\"display\"))&&0===a.offsetWidth?n.swap(a,Ca,function(){return Ia(a,b,d)}):Ia(a,b,d):void 0},set:function(a,c,d){var e=d&&wa(a);return Ga(a,c,d?Ha(a,b,d,\"border-box\"===n.css(a,\"boxSizing\",!1,e),e):0)}}}),n.cssHooks.marginRight=ya(k.reliableMarginRight,function(a,b){return b?n.swap(a,{display:\"inline-block\"},xa,[a,\"marginRight\"]):void 0}),n.each({margin:\"\",padding:\"\",border:\"Width\"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f=\"string\"==typeof c?c.split(\" \"):[c];4>d;d++)e[a+R[d]+b]=f[d]||f[d-2]||f[0];return e}},ua.test(a)||(n.cssHooks[a+b].set=Ga)}),n.fn.extend({css:function(a,b){return J(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=wa(a),e=b.length;e>g;g++)f[b[g]]=n.css(a,b[g],!1,d);return f}return void 0!==c?n.style(a,b,c):n.css(a,b)},a,b,arguments.length>1)},show:function(){return Ja(this,!0)},hide:function(){return Ja(this)},toggle:function(a){return\"boolean\"==typeof a?a?this.show():this.hide():this.each(function(){S(this)?n(this).show():n(this).hide()})}});function Ka(a,b,c,d,e){return new Ka.prototype.init(a,b,c,d,e)}n.Tween=Ka,Ka.prototype={constructor:Ka,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||\"swing\",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?\"\":\"px\")},cur:function(){var a=Ka.propHooks[this.prop];return a&&a.get?a.get(this):Ka.propHooks._default.get(this)},run:function(a){var b,c=Ka.propHooks[this.prop];return this.options.duration?this.pos=b=n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Ka.propHooks._default.set(this),this}},Ka.prototype.init.prototype=Ka.prototype,Ka.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=n.css(a.elem,a.prop,\"\"),b&&\"auto\"!==b?b:0):a.elem[a.prop]},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[n.cssProps[a.prop]]||n.cssHooks[a.prop])?n.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Ka.propHooks.scrollTop=Ka.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},n.fx=Ka.prototype.init,n.fx.step={};var La,Ma,Na=/^(?:toggle|show|hide)$/,Oa=new RegExp(\"^(?:([+-])=|)(\"+Q+\")([a-z%]*)$\",\"i\"),Pa=/queueHooks$/,Qa=[Va],Ra={\"*\":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=Oa.exec(b),f=e&&e[3]||(n.cssNumber[a]?\"\":\"px\"),g=(n.cssNumber[a]||\"px\"!==f&&+d)&&Oa.exec(n.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||\".5\",g/=h,n.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function Sa(){return setTimeout(function(){La=void 0}),La=n.now()}function Ta(a,b){var c,d=0,e={height:a};for(b=b?1:0;4>d;d+=2-b)c=R[d],e[\"margin\"+c]=e[\"padding\"+c]=a;return b&&(e.opacity=e.width=a),e}function Ua(a,b,c){for(var d,e=(Ra[b]||[]).concat(Ra[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function Va(a,b,c){var d,e,f,g,h,i,j,k,l=this,m={},o=a.style,p=a.nodeType&&S(a),q=L.get(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,l.always(function(){l.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?L.get(a,\"olddisplay\")||ta(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(o.display=\"inline-block\")),c.overflow&&(o.overflow=\"hidden\",l.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],Na.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(p?\"hide\":\"show\")){if(\"show\"!==e||!q||void 0===q[d])continue;p=!0}m[d]=q&&q[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(m))\"inline\"===(\"none\"===j?ta(a.nodeName):j)&&(o.display=j);else{q?\"hidden\"in q&&(p=q.hidden):q=L.access(a,\"fxshow\",{}),f&&(q.hidden=!p),p?n(a).show():l.done(function(){n(a).hide()}),l.done(function(){var b;L.remove(a,\"fxshow\");for(b in m)n.style(a,b,m[b])});for(d in m)g=Ua(p?q[d]:0,d,l),d in q||(q[d]=g.start,p&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}function Wa(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function Xa(a,b,c){var d,e,f=0,g=Qa.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=La||Sa(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:La||Sa(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(Wa(k,j.opts.specialEasing);g>f;f++)if(d=Qa[f].call(j,a,k,j.opts))return d;return n.map(k,Ua,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(Xa,{tweener:function(a,b){n.isFunction(a)?(b=a,a=[\"*\"]):a=a.split(\" \");for(var c,d=0,e=a.length;e>d;d++)c=a[d],Ra[c]=Ra[c]||[],Ra[c].unshift(b)},prefilter:function(a,b){b?Qa.unshift(a):Qa.push(a)}}),n.speed=function(a,b,c){var d=a&&\"object\"==typeof a?n.extend({},a):{complete:c||!c&&b||n.isFunction(a)&&a,duration:a,easing:c&&b||b&&!n.isFunction(b)&&b};return d.duration=n.fx.off?0:\"number\"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue=\"fx\"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&&d.old.call(this),d.queue&&n.dequeue(this,d.queue)},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(S).css(\"opacity\",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=Xa(this,n.extend({},a),f);(e||L.get(this,\"finish\"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return\"string\"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||\"fx\",[]),this.each(function(){var b=!0,e=null!=a&&a+\"queueHooks\",f=n.timers,g=L.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&Pa.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&&n.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||\"fx\"),this.each(function(){var b,c=L.get(this),d=c[a+\"queue\"],e=c[a+\"queueHooks\"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),n.each([\"toggle\",\"show\",\"hide\"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||\"boolean\"==typeof a?c.apply(this,arguments):this.animate(Ta(b,!0),a,d,e)}}),n.each({slideDown:Ta(\"show\"),slideUp:Ta(\"hide\"),slideToggle:Ta(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),n.timers=[],n.fx.tick=function(){var a,b=0,c=n.timers;for(La=n.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||n.fx.stop(),La=void 0},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop()},n.fx.interval=13,n.fx.start=function(){Ma||(Ma=setInterval(n.fx.tick,n.fx.interval))},n.fx.stop=function(){clearInterval(Ma),Ma=null},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(a,b){return a=n.fx?n.fx.speeds[a]||a:a,b=b||\"fx\",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a=l.createElement(\"input\"),b=l.createElement(\"select\"),c=b.appendChild(l.createElement(\"option\"));a.type=\"checkbox\",k.checkOn=\"\"!==a.value,k.optSelected=c.selected,b.disabled=!0,k.optDisabled=!c.disabled,a=l.createElement(\"input\"),a.value=\"t\",a.type=\"radio\",k.radioValue=\"t\"===a.value}();var Ya,Za,$a=n.expr.attrHandle;n.fn.extend({attr:function(a,b){return J(this,n.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a)})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f)return typeof a.getAttribute===U?n.prop(a,b,c):(1===f&&n.isXMLDoc(a)||(b=b.toLowerCase(),d=n.attrHooks[b]||(n.expr.match.bool.test(b)?Za:Ya)),\r\nvoid 0===c?d&&\"get\"in d&&null!==(e=d.get(a,b))?e:(e=n.find.attr(a,b),null==e?void 0:e):null!==c?d&&\"set\"in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+\"\"),c):void n.removeAttr(a,b))},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(E);if(f&&1===a.nodeType)while(c=f[e++])d=n.propFix[c]||c,n.expr.match.bool.test(c)&&(a[d]=!1),a.removeAttribute(c)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&\"radio\"===b&&n.nodeName(a,\"input\")){var c=a.value;return a.setAttribute(\"type\",b),c&&(a.value=c),b}}}}}),Za={set:function(a,b,c){return b===!1?n.removeAttr(a,c):a.setAttribute(c,c),c}},n.each(n.expr.match.bool.source.match(/\\w+/g),function(a,b){var c=$a[b]||n.find.attr;$a[b]=function(a,b,d){var e,f;return d||(f=$a[b],$a[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,$a[b]=f),e}});var _a=/^(?:input|select|textarea|button)$/i;n.fn.extend({prop:function(a,b){return J(this,n.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[n.propFix[a]||a]})}}),n.extend({propFix:{\"for\":\"htmlFor\",\"class\":\"className\"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g)return f=1!==g||!n.isXMLDoc(a),f&&(b=n.propFix[b]||b,e=n.propHooks[b]),void 0!==c?e&&\"set\"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&\"get\"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){return a.hasAttribute(\"tabindex\")||_a.test(a.nodeName)||a.href?a.tabIndex:-1}}}}),k.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null}}),n.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){n.propFix[this.toLowerCase()]=this});var ab=/[\\t\\r\\n\\f]/g;n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h=\"string\"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).addClass(a.call(this,b,this.className))});if(h)for(b=(a||\"\").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(\" \"+c.className+\" \").replace(ab,\" \"):\" \")){f=0;while(e=b[f++])d.indexOf(\" \"+e+\" \")<0&&(d+=e+\" \");g=n.trim(d),c.className!==g&&(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0===arguments.length||\"string\"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).removeClass(a.call(this,b,this.className))});if(h)for(b=(a||\"\").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(\" \"+c.className+\" \").replace(ab,\" \"):\"\")){f=0;while(e=b[f++])while(d.indexOf(\" \"+e+\" \")>=0)d=d.replace(\" \"+e+\" \",\" \");g=a?n.trim(d):\"\",c.className!==g&&(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return\"boolean\"==typeof b&&\"string\"===c?b?this.addClass(a):this.removeClass(a):this.each(n.isFunction(a)?function(c){n(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if(\"string\"===c){var b,d=0,e=n(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===U||\"boolean\"===c)&&(this.className&&L.set(this,\"__className__\",this.className),this.className=this.className||a===!1?\"\":L.get(this,\"__className__\")||\"\")})},hasClass:function(a){for(var b=\" \"+a+\" \",c=0,d=this.length;d>c;c++)if(1===this[c].nodeType&&(\" \"+this[c].className+\" \").replace(ab,\" \").indexOf(b)>=0)return!0;return!1}});var bb=/\\r/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,n(this).val()):a,null==e?e=\"\":\"number\"==typeof e?e+=\"\":n.isArray(e)&&(e=n.map(e,function(a){return null==a?\"\":a+\"\"})),b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],b&&\"set\"in b&&void 0!==b.set(this,e,\"value\")||(this.value=e))});if(e)return b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()],b&&\"get\"in b&&void 0!==(c=b.get(e,\"value\"))?c:(c=e.value,\"string\"==typeof c?c.replace(bb,\"\"):null==c?\"\":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,\"value\");return null!=b?b:n.trim(n.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f=\"select-one\"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],!(!c.selected&&i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute(\"disabled\"))||c.parentNode.disabled&&n.nodeName(c.parentNode,\"optgroup\"))){if(b=n(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=n.inArray(d.value,f)>=0)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),n.each([\"radio\",\"checkbox\"],function(){n.valHooks[this]={set:function(a,b){return n.isArray(b)?a.checked=n.inArray(n(a).val(),b)>=0:void 0}},k.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute(\"value\")?\"on\":a.value})}),n.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\".split(\" \"),function(a,b){n.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,\"**\"):this.off(b,a||\"**\",c)}});var cb=n.now(),db=/\\?/;n.parseJSON=function(a){return JSON.parse(a+\"\")},n.parseXML=function(a){var b,c;if(!a||\"string\"!=typeof a)return null;try{c=new DOMParser,b=c.parseFromString(a,\"text/xml\")}catch(d){b=void 0}return(!b||b.getElementsByTagName(\"parsererror\").length)&&n.error(\"Invalid XML: \"+a),b};var eb=/#.*$/,fb=/([?&])_=[^&]*/,gb=/^(.*?):[ \\t]*([^\\r\\n]*)$/gm,hb=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,ib=/^(?:GET|HEAD)$/,jb=/^\\/\\//,kb=/^([\\w.+-]+:)(?:\\/\\/(?:[^\\/?#]*@|)([^\\/?#:]*)(?::(\\d+)|)|)/,lb={},mb={},nb=\"*/\".concat(\"*\"),ob=a.location.href,pb=kb.exec(ob.toLowerCase())||[];function qb(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(E)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d[0]?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function rb(a,b,c,d){var e={},f=a===mb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}function sb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&n.extend(!0,a,d),a}function tb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+\" \"+i[0]]){f=e;break}g||(g=e)}f=f||g}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function ub(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:ob,type:\"GET\",isLocal:hb.test(pb[1]),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":nb,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":n.parseJSON,\"text xml\":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?sb(sb(a,n.ajaxSettings),b):sb(n.ajaxSettings,a)},ajaxPrefilter:qb(lb),ajaxTransport:qb(mb),ajax:function(a,b){\"object\"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=n.ajaxSetup({},b),l=k.context||k,m=k.context&&(l.nodeType||l.jquery)?n(l):n.event,o=n.Deferred(),p=n.Callbacks(\"once memory\"),q=k.statusCode||{},r={},s={},t=0,u=\"canceled\",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!f){f={};while(b=gb.exec(e))f[b[1].toLowerCase()]=b[2]}b=f[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?e:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return c&&c.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||ob)+\"\").replace(eb,\"\").replace(jb,pb[1]+\"//\"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=n.trim(k.dataType||\"*\").toLowerCase().match(E)||[\"\"],null==k.crossDomain&&(h=kb.exec(k.url.toLowerCase()),k.crossDomain=!(!h||h[1]===pb[1]&&h[2]===pb[2]&&(h[3]||(\"http:\"===h[1]?\"80\":\"443\"))===(pb[3]||(\"http:\"===pb[1]?\"80\":\"443\")))),k.data&&k.processData&&\"string\"!=typeof k.data&&(k.data=n.param(k.data,k.traditional)),rb(lb,k,b,v),2===t)return v;i=n.event&&k.global,i&&0===n.active++&&n.event.trigger(\"ajaxStart\"),k.type=k.type.toUpperCase(),k.hasContent=!ib.test(k.type),d=k.url,k.hasContent||(k.data&&(d=k.url+=(db.test(d)?\"&\":\"?\")+k.data,delete k.data),k.cache===!1&&(k.url=fb.test(d)?d.replace(fb,\"$1_=\"+cb++):d+(db.test(d)?\"&\":\"?\")+\"_=\"+cb++)),k.ifModified&&(n.lastModified[d]&&v.setRequestHeader(\"If-Modified-Since\",n.lastModified[d]),n.etag[d]&&v.setRequestHeader(\"If-None-Match\",n.etag[d])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader(\"Content-Type\",k.contentType),v.setRequestHeader(\"Accept\",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+(\"*\"!==k.dataTypes[0]?\", \"+nb+\"; q=0.01\":\"\"):k.accepts[\"*\"]);for(j in k.headers)v.setRequestHeader(j,k.headers[j]);if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u=\"abort\";for(j in{success:1,error:1,complete:1})v[j](k[j]);if(c=rb(mb,k,b,v)){v.readyState=1,i&&m.trigger(\"ajaxSend\",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort(\"timeout\")},k.timeout));try{t=1,c.send(r,x)}catch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,\"No Transport\");function x(a,b,f,h){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),c=void 0,e=h||\"\",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,f&&(u=tb(k,v,f)),u=ub(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader(\"Last-Modified\"),w&&(n.lastModified[d]=w),w=v.getResponseHeader(\"etag\"),w&&(n.etag[d]=w)),204===a||\"HEAD\"===k.type?x=\"nocontent\":304===a?x=\"notmodified\":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x=\"error\",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+\"\",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,i&&m.trigger(j?\"ajaxSuccess\":\"ajaxError\",[v,k,j?r:s]),p.fireWith(l,[v,x]),i&&(m.trigger(\"ajaxComplete\",[v,k]),--n.active||n.event.trigger(\"ajaxStop\")))}return v},getJSON:function(a,b,c){return n.get(a,b,c,\"json\")},getScript:function(a,b){return n.get(a,void 0,b,\"script\")}}),n.each([\"get\",\"post\"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&&(e=e||d,d=c,c=void 0),n.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),n._evalUrl=function(a){return n.ajax({url:a,type:\"GET\",dataType:\"script\",async:!1,global:!1,\"throws\":!0})},n.fn.extend({wrapAll:function(a){var b;return n.isFunction(a)?this.each(function(b){n(this).wrapAll(a.call(this,b))}):(this[0]&&(b=n(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this)},wrapInner:function(a){return this.each(n.isFunction(a)?function(b){n(this).wrapInner(a.call(this,b))}:function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,\"body\")||n(this).replaceWith(this.childNodes)}).end()}}),n.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0},n.expr.filters.visible=function(a){return!n.expr.filters.hidden(a)};var vb=/%20/g,wb=/\\[\\]$/,xb=/\\r?\\n/g,yb=/^(?:submit|button|image|reset|file)$/i,zb=/^(?:input|select|textarea|keygen)/i;function Ab(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||wb.test(a)?d(a,e):Ab(a+\"[\"+(\"object\"==typeof e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)Ab(a+\"[\"+e+\"]\",b[e],c,d)}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)};if(void 0===b&&(b=n.ajaxSettings&&n.ajaxSettings.traditional),n.isArray(a)||a.jquery&&!n.isPlainObject(a))n.each(a,function(){e(this.name,this.value)});else for(c in a)Ab(c,a[c],b,e);return d.join(\"&\").replace(vb,\"+\")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,\"elements\");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!n(this).is(\":disabled\")&&zb.test(this.nodeName)&&!yb.test(a)&&(this.checked||!T.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(xb,\"\\r\\n\")}}):{name:b.name,value:c.replace(xb,\"\\r\\n\")}}).get()}}),n.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(a){}};var Bb=0,Cb={},Db={0:200,1223:204},Eb=n.ajaxSettings.xhr();a.attachEvent&&a.attachEvent(\"onunload\",function(){for(var a in Cb)Cb[a]()}),k.cors=!!Eb&&\"withCredentials\"in Eb,k.ajax=Eb=!!Eb,n.ajaxTransport(function(a){var b;return k.cors||Eb&&!a.crossDomain?{send:function(c,d){var e,f=a.xhr(),g=++Bb;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c[\"X-Requested-With\"]||(c[\"X-Requested-With\"]=\"XMLHttpRequest\");for(e in c)f.setRequestHeader(e,c[e]);b=function(a){return function(){b&&(delete Cb[g],b=f.onload=f.onerror=null,\"abort\"===a?f.abort():\"error\"===a?d(f.status,f.statusText):d(Db[f.status]||f.status,f.statusText,\"string\"==typeof f.responseText?{text:f.responseText}:void 0,f.getAllResponseHeaders()))}},f.onload=b(),f.onerror=b(\"error\"),b=Cb[g]=b(\"abort\");try{f.send(a.hasContent&&a.data||null)}catch(h){if(b)throw h}},abort:function(){b&&b()}}:void 0}),n.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/(?:java|ecma)script/},converters:{\"text script\":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter(\"script\",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type=\"GET\")}),n.ajaxTransport(\"script\",function(a){if(a.crossDomain){var b,c;return{send:function(d,e){b=n(\"<script>\").prop({async:!0,charset:a.scriptCharset,src:a.url}).on(\"load error\",c=function(a){b.remove(),c=null,a&&e(\"error\"===a.type?404:200,a.type)}),l.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Fb=[],Gb=/(=)\\?(?=&|$)|\\?\\?/;n.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var a=Fb.pop()||n.expando+\"_\"+cb++;return this[a]=!0,a}}),n.ajaxPrefilter(\"json jsonp\",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Gb.test(b.url)?\"url\":\"string\"==typeof b.data&&!(b.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Gb.test(b.data)&&\"data\");return h||\"jsonp\"===b.dataTypes[0]?(e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Gb,\"$1\"+e):b.jsonp!==!1&&(b.url+=(db.test(b.url)?\"&\":\"?\")+b.jsonp+\"=\"+e),b.converters[\"script json\"]=function(){return g||n.error(e+\" was not called\"),g[0]},b.dataTypes[0]=\"json\",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Fb.push(e)),g&&n.isFunction(f)&&f(g[0]),g=f=void 0}),\"script\"):void 0}),n.parseHTML=function(a,b,c){if(!a||\"string\"!=typeof a)return null;\"boolean\"==typeof b&&(c=b,b=!1),b=b||l;var d=v.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=n.buildFragment([a],b,e),e&&e.length&&n(e).remove(),n.merge([],d.childNodes))};var Hb=n.fn.load;n.fn.load=function(a,b,c){if(\"string\"!=typeof a&&Hb)return Hb.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(\" \");return h>=0&&(d=n.trim(a.slice(h)),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&&\"object\"==typeof b&&(e=\"POST\"),g.length>0&&n.ajax({url:a,type:e,dataType:\"html\",data:b}).done(function(a){f=arguments,g.html(d?n(\"<div>\").append(n.parseHTML(a)).find(d):a)}).complete(c&&function(a,b){g.each(c,f||[a.responseText,b,a])}),this},n.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(a,b){n.fn[b]=function(a){return this.on(b,a)}}),n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};var Ib=a.document.documentElement;function Jb(a){return n.isWindow(a)?a:9===a.nodeType&&a.defaultView}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,\"position\"),l=n(a),m={};\"static\"===k&&(a.style.position=\"relative\"),h=l.offset(),f=n.css(a,\"top\"),i=n.css(a,\"left\"),j=(\"absolute\"===k||\"fixed\"===k)&&(f+i).indexOf(\"auto\")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),\"using\"in b?b.using.call(a,m):l.css(m)}},n.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b)});var b,c,d=this[0],e={top:0,left:0},f=d&&d.ownerDocument;if(f)return b=f.documentElement,n.contains(b,d)?(typeof d.getBoundingClientRect!==U&&(e=d.getBoundingClientRect()),c=Jb(f),{top:e.top+c.pageYOffset-b.clientTop,left:e.left+c.pageXOffset-b.clientLeft}):e},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return\"fixed\"===n.css(c,\"position\")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],\"html\")||(d=a.offset()),d.top+=n.css(a[0],\"borderTopWidth\",!0),d.left+=n.css(a[0],\"borderLeftWidth\",!0)),{top:b.top-d.top-n.css(c,\"marginTop\",!0),left:b.left-d.left-n.css(c,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||Ib;while(a&&!n.nodeName(a,\"html\")&&\"static\"===n.css(a,\"position\"))a=a.offsetParent;return a||Ib})}}),n.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(b,c){var d=\"pageYOffset\"===c;n.fn[b]=function(e){return J(this,function(b,e,f){var g=Jb(b);return void 0===f?g?g[c]:b[e]:void(g?g.scrollTo(d?a.pageXOffset:f,d?f:a.pageYOffset):b[e]=f)},b,e,arguments.length,null)}}),n.each([\"top\",\"left\"],function(a,b){n.cssHooks[b]=ya(k.pixelPosition,function(a,c){return c?(c=xa(a,b),va.test(c)?n(a).position()[b]+\"px\":c):void 0})}),n.each({Height:\"height\",Width:\"width\"},function(a,b){n.each({padding:\"inner\"+a,content:b,\"\":\"outer\"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&&(c||\"boolean\"!=typeof d),g=c||(d===!0||e===!0?\"margin\":\"border\");return J(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement[\"client\"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body[\"scroll\"+a],e[\"scroll\"+a],b.body[\"offset\"+a],e[\"offset\"+a],e[\"client\"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),n.fn.size=function(){return this.length},n.fn.andSelf=n.fn.addBack,\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return n});var Kb=a.jQuery,Lb=a.$;return n.noConflict=function(b){return a.$===n&&(a.$=Lb),b&&a.jQuery===n&&(a.jQuery=Kb),n},typeof b===U&&(a.jQuery=a.$=n),n});\r\n",
    "static": true,
    "longname": "src/lib/jquery-2.1.4.min.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 310,
    "kind": "file",
    "name": "src/lib/kdtree.js",
    "content": "/**\r\n * k-d Tree JavaScript - V 1.01\r\n *\r\n * https://github.com/ubilabs/kd-tree-javascript\r\n *\r\n * @author Mircea Pricop <pricop@ubilabs.net>, 2012\r\n * @author Martin Kleppe <kleppe@ubilabs.net>, 2012\r\n * @author Ubilabs http://ubilabs.net, 2012\r\n * @license MIT License <http://www.opensource.org/licenses/mit-license.php>\r\n */\r\n\r\n (function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define(['exports'], factory);\r\n    } else if (typeof exports === 'object') {\r\n        factory(exports);\r\n    } else {\r\n        factory((root.commonJsStrict = {}));\r\n    }\r\n}(this, function (exports) {\r\n  function Node(obj, dimension, parent) {\r\n    this.obj = obj;\r\n    this.left = null;\r\n    this.right = null;\r\n    this.parent = parent;\r\n    this.dimension = dimension;\r\n  }\r\n\r\n  function kdTree(points, metric, dimensions) {\r\n\r\n    var self = this;\r\n    \r\n    function buildTree(points, depth, parent) {\r\n      var dim = depth % dimensions.length,\r\n        median,\r\n        node;\r\n\r\n      if (points.length === 0) {\r\n        return null;\r\n      }\r\n      if (points.length === 1) {\r\n        return new Node(points[0], dim, parent);\r\n      }\r\n\r\n      points.sort(function (a, b) {\r\n        return a[dimensions[dim]] - b[dimensions[dim]];\r\n      });\r\n\r\n      median = Math.floor(points.length / 2);\r\n      node = new Node(points[median], dim, parent);\r\n      node.left = buildTree(points.slice(0, median), depth + 1, node);\r\n      node.right = buildTree(points.slice(median + 1), depth + 1, node);\r\n\r\n      return node;\r\n    }\r\n\r\n    // Reloads a serialied tree\r\n    function loadTree (data) {\r\n      // Just need to restore the `parent` parameter\r\n      self.root = data;\r\n\r\n      function restoreParent (root) {\r\n        if (root.left) {\r\n          root.left.parent = root;\r\n          restoreParent(root.left);\r\n        }\r\n\r\n        if (root.right) {\r\n          root.right.parent = root;\r\n          restoreParent(root.right);\r\n        }\r\n      }\r\n\r\n      restoreParent(self.root);\r\n    }\r\n    \r\n    // If points is not an array, assume we're loading a pre-built tree\r\n    if (!Array.isArray(points)) loadTree(points, metric, dimensions);\r\n    else this.root = buildTree(points, 0, null);\r\n\r\n    // Convert to a JSON serializable structure; this just requires removing \r\n    // the `parent` property\r\n    this.toJSON = function (src) {\r\n      if (!src) src = this.root;\r\n      var dest = new Node(src.obj, src.dimension, null);\r\n      if (src.left) dest.left = self.toJSON(src.left);\r\n      if (src.right) dest.right = self.toJSON(src.right);\r\n      return dest;\r\n    };\r\n\r\n    this.insert = function (point) {\r\n      function innerSearch(node, parent) {\r\n\r\n        if (node === null) {\r\n          return parent;\r\n        }\r\n\r\n        var dimension = dimensions[node.dimension];\r\n        if (point[dimension] < node.obj[dimension]) {\r\n          return innerSearch(node.left, node);\r\n        } else {\r\n          return innerSearch(node.right, node);\r\n        }\r\n      }\r\n\r\n      var insertPosition = innerSearch(this.root, null),\r\n        newNode,\r\n        dimension;\r\n\r\n      if (insertPosition === null) {\r\n        this.root = new Node(point, 0, null);\r\n        return;\r\n      }\r\n\r\n      newNode = new Node(point, (insertPosition.dimension + 1) % dimensions.length, insertPosition);\r\n      dimension = dimensions[insertPosition.dimension];\r\n\r\n      if (point[dimension] < insertPosition.obj[dimension]) {\r\n        insertPosition.left = newNode;\r\n      } else {\r\n        insertPosition.right = newNode;\r\n      }\r\n    };\r\n\r\n    this.remove = function (point) {\r\n      var node;\r\n\r\n      function nodeSearch(node) {\r\n        if (node === null) {\r\n          return null;\r\n        }\r\n\r\n        if (node.obj === point) {\r\n          return node;\r\n        }\r\n\r\n        var dimension = dimensions[node.dimension];\r\n\r\n        if (point[dimension] < node.obj[dimension]) {\r\n          return nodeSearch(node.left, node);\r\n        } else {\r\n          return nodeSearch(node.right, node);\r\n        }\r\n      }\r\n\r\n      function removeNode(node) {\r\n        var nextNode,\r\n          nextObj,\r\n          pDimension;\r\n\r\n        function findMin(node, dim) {\r\n          var dimension,\r\n            own,\r\n            left,\r\n            right,\r\n            min;\r\n\r\n          if (node === null) {\r\n            return null;\r\n          }\r\n\r\n          dimension = dimensions[dim];\r\n\r\n          if (node.dimension === dim) {\r\n            if (node.left !== null) {\r\n              return findMin(node.left, dim);\r\n            }\r\n            return node;\r\n          }\r\n\r\n          own = node.obj[dimension];\r\n          left = findMin(node.left, dim);\r\n          right = findMin(node.right, dim);\r\n          min = node;\r\n\r\n          if (left !== null && left.obj[dimension] < own) {\r\n            min = left;\r\n          }\r\n          if (right !== null && right.obj[dimension] < min.obj[dimension]) {\r\n            min = right;\r\n          }\r\n          return min;\r\n        }\r\n\r\n        if (node.left === null && node.right === null) {\r\n          if (node.parent === null) {\r\n            self.root = null;\r\n            return;\r\n          }\r\n\r\n          pDimension = dimensions[node.parent.dimension];\r\n\r\n          if (node.obj[pDimension] < node.parent.obj[pDimension]) {\r\n            node.parent.left = null;\r\n          } else {\r\n            node.parent.right = null;\r\n          }\r\n          return;\r\n        }\r\n\r\n        // If the right subtree is not empty, swap with the minimum element on the\r\n        // node's dimension. If it is empty, we swap the left and right subtrees and\r\n        // do the same.\r\n        if (node.right !== null) {\r\n          nextNode = findMin(node.right, node.dimension);\r\n          nextObj = nextNode.obj;\r\n          removeNode(nextNode);          \r\n          node.obj = nextObj;\r\n        } else {\r\n          nextNode = findMin(node.left, node.dimension);\r\n          nextObj = nextNode.obj;\r\n          removeNode(nextNode);\r\n          node.right = node.left;\r\n          node.left = null;\r\n          node.obj = nextObj;\r\n        }\r\n\r\n      }\r\n\r\n      node = nodeSearch(self.root);\r\n\r\n      if (node === null) { return; }\r\n\r\n      removeNode(node);\r\n    };\r\n\r\n    this.nearest = function (point, maxNodes, maxDistance) {\r\n      var i,\r\n        result,\r\n        bestNodes;\r\n\r\n      bestNodes = new BinaryHeap(\r\n        function (e) { return -e[1]; }\r\n      );\r\n\r\n      function nearestSearch(node) {\r\n        var bestChild,\r\n          dimension = dimensions[node.dimension],\r\n          ownDistance = metric(point, node.obj),\r\n          linearPoint = {},\r\n          linearDistance,\r\n          otherChild,\r\n          i;\r\n\r\n        function saveNode(node, distance) {\r\n          bestNodes.push([node, distance]);\r\n          if (bestNodes.size() > maxNodes) {\r\n            bestNodes.pop();\r\n          }\r\n        }\r\n\r\n        for (i = 0; i < dimensions.length; i += 1) {\r\n          if (i === node.dimension) {\r\n            linearPoint[dimensions[i]] = point[dimensions[i]];\r\n          } else {\r\n            linearPoint[dimensions[i]] = node.obj[dimensions[i]];\r\n          }\r\n        }\r\n\r\n        linearDistance = metric(linearPoint, node.obj);\r\n\r\n        if (node.right === null && node.left === null) {\r\n          if (bestNodes.size() < maxNodes || ownDistance < bestNodes.peek()[1]) {\r\n            saveNode(node, ownDistance);\r\n          }\r\n          return;\r\n        }\r\n\r\n        if (node.right === null) {\r\n          bestChild = node.left;\r\n        } else if (node.left === null) {\r\n          bestChild = node.right;\r\n        } else {\r\n          if (point[dimension] < node.obj[dimension]) {\r\n            bestChild = node.left;\r\n          } else {\r\n            bestChild = node.right;\r\n          }\r\n        }\r\n\r\n        nearestSearch(bestChild);\r\n\r\n        if (bestNodes.size() < maxNodes || ownDistance < bestNodes.peek()[1]) {\r\n          saveNode(node, ownDistance);\r\n        }\r\n\r\n        if (bestNodes.size() < maxNodes || Math.abs(linearDistance) < bestNodes.peek()[1]) {\r\n          if (bestChild === node.left) {\r\n            otherChild = node.right;\r\n          } else {\r\n            otherChild = node.left;\r\n          }\r\n          if (otherChild !== null) {\r\n            nearestSearch(otherChild);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (maxDistance) {\r\n        for (i = 0; i < maxNodes; i += 1) {\r\n          bestNodes.push([null, maxDistance]);\r\n        }\r\n      }\r\n\r\n      if(self.root)\r\n        nearestSearch(self.root);\r\n\r\n      result = [];\r\n\r\n      for (i = 0; i < Math.min(maxNodes, bestNodes.content.length); i += 1) {\r\n        if (bestNodes.content[i][0]) {\r\n          result.push([bestNodes.content[i][0].obj, bestNodes.content[i][1]]);\r\n        }\r\n      }\r\n      return result;\r\n    };\r\n\r\n    this.balanceFactor = function () {\r\n      function height(node) {\r\n        if (node === null) {\r\n          return 0;\r\n        }\r\n        return Math.max(height(node.left), height(node.right)) + 1;\r\n      }\r\n\r\n      function count(node) {\r\n        if (node === null) {\r\n          return 0;\r\n        }\r\n        return count(node.left) + count(node.right) + 1;\r\n      }\r\n\r\n      return height(self.root) / (Math.log(count(self.root)) / Math.log(2));\r\n    };\r\n  }\r\n\r\n  // Binary heap implementation from:\r\n  // http://eloquentjavascript.net/appendix2.html\r\n\r\n  function BinaryHeap(scoreFunction){\r\n    this.content = [];\r\n    this.scoreFunction = scoreFunction;\r\n  }\r\n\r\n  BinaryHeap.prototype = {\r\n    push: function(element) {\r\n      // Add the new element to the end of the array.\r\n      this.content.push(element);\r\n      // Allow it to bubble up.\r\n      this.bubbleUp(this.content.length - 1);\r\n    },\r\n\r\n    pop: function() {\r\n      // Store the first element so we can return it later.\r\n      var result = this.content[0];\r\n      // Get the element at the end of the array.\r\n      var end = this.content.pop();\r\n      // If there are any elements left, put the end element at the\r\n      // start, and let it sink down.\r\n      if (this.content.length > 0) {\r\n        this.content[0] = end;\r\n        this.sinkDown(0);\r\n      }\r\n      return result;\r\n    },\r\n\r\n    peek: function() {\r\n      return this.content[0];\r\n    },\r\n\r\n    remove: function(node) {\r\n      var len = this.content.length;\r\n      // To remove a value, we must search through the array to find\r\n      // it.\r\n      for (var i = 0; i < len; i++) {\r\n        if (this.content[i] == node) {\r\n          // When it is found, the process seen in 'pop' is repeated\r\n          // to fill up the hole.\r\n          var end = this.content.pop();\r\n          if (i != len - 1) {\r\n            this.content[i] = end;\r\n            if (this.scoreFunction(end) < this.scoreFunction(node))\r\n              this.bubbleUp(i);\r\n            else\r\n              this.sinkDown(i);\r\n          }\r\n          return;\r\n        }\r\n      }\r\n      throw new Error(\"Node not found.\");\r\n    },\r\n\r\n    size: function() {\r\n      return this.content.length;\r\n    },\r\n\r\n    bubbleUp: function(n) {\r\n      // Fetch the element that has to be moved.\r\n      var element = this.content[n];\r\n      // When at 0, an element can not go up any further.\r\n      while (n > 0) {\r\n        // Compute the parent element's index, and fetch it.\r\n        var parentN = Math.floor((n + 1) / 2) - 1,\r\n            parent = this.content[parentN];\r\n        // Swap the elements if the parent is greater.\r\n        if (this.scoreFunction(element) < this.scoreFunction(parent)) {\r\n          this.content[parentN] = element;\r\n          this.content[n] = parent;\r\n          // Update 'n' to continue at the new position.\r\n          n = parentN;\r\n        }\r\n        // Found a parent that is less, no need to move it further.\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n    },\r\n\r\n    sinkDown: function(n) {\r\n      // Look up the target element and its score.\r\n      var length = this.content.length,\r\n          element = this.content[n],\r\n          elemScore = this.scoreFunction(element);\r\n\r\n      while(true) {\r\n        // Compute the indices of the child elements.\r\n        var child2N = (n + 1) * 2, child1N = child2N - 1;\r\n        // This is used to store the new position of the element,\r\n        // if any.\r\n        var swap = null;\r\n        // If the first child exists (is inside the array)...\r\n        if (child1N < length) {\r\n          // Look it up and compute its score.\r\n          var child1 = this.content[child1N],\r\n              child1Score = this.scoreFunction(child1);\r\n          // If the score is less than our element's, we need to swap.\r\n          if (child1Score < elemScore)\r\n            swap = child1N;\r\n        }\r\n        // Do the same checks for the other child.\r\n        if (child2N < length) {\r\n          var child2 = this.content[child2N],\r\n              child2Score = this.scoreFunction(child2);\r\n          if (child2Score < (swap == null ? elemScore : child1Score)){\r\n            swap = child2N;\r\n          }\r\n        }\r\n\r\n        // If the element needs to be moved, swap it, and continue.\r\n        if (swap != null) {\r\n          this.content[n] = this.content[swap];\r\n          this.content[swap] = element;\r\n          n = swap;\r\n        }\r\n        // Otherwise, we are done.\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.kdTree = kdTree;\r\n  \r\n  exports.kdTree = kdTree;\r\n  exports.BinaryHeap = BinaryHeap;\r\n}));",
    "static": true,
    "longname": "src/lib/kdtree.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 311,
    "kind": "file",
    "name": "src/lib/rtree.js",
    "content": "/**\r\n * Exports a `PolygonLookup` constructor, which constructs a data-structure for\r\n * quickly finding the polygon that a point intersects in a (potentially very\r\n * large) set.\r\n */\r\n\r\nvar pointInPolygon = function (point, vs) {\r\n    // ray-casting algorithm based on\r\n    // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\r\n\r\n    var x = point[0], y = point[1];\r\n\r\n    var inside = false;\r\n    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\r\n        var xi = vs[i][0], yi = vs[i][1];\r\n        var xj = vs[j][0], yj = vs[j][1];\r\n\r\n        var intersect = ((yi > y) != (yj > y))\r\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\r\n        if (intersect) inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n};\r\n\r\n/**\r\n * @property {rbush} rtree A spatial index for `this.polygons`.\r\n * @property {object} polgons A GeoJSON feature collection.\r\n *\r\n * @param {object} [featureCollection] An optional GeoJSON feature collection\r\n *    to pass to `loadFeatureCollection()`.\r\n */\r\nfunction PolygonLookup(featureCollection) {\r\n    this.search = function search(x, y) {\r\n        var bboxes = this.rtree.search([x, y, x, y]);\r\n        var pt = [x, y];\r\n        for (var ind = 0; ind < bboxes.length; ind++) {\r\n            var polyObj = this.polygons[bboxes[ind].polyId];\r\n            var polyCoords = polyObj.geometry.coordinates[0];\r\n            if (pointInPolygon(pt, polyCoords)) {\r\n                var inHole = false;\r\n                for (var subPolyInd = 1; subPolyInd < polyObj.geometry.coordinates.length; subPolyInd++) {\r\n                    if (pointInPolygon(pt, polyObj.geometry.coordinates[subPolyInd])) {\r\n                        inHole = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!inHole) {\r\n                    return polyObj;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    this.loadFeatureCollection = function loadFeatureCollection(collection) {\r\n        var bboxes = [];\r\n        var polygons = [];\r\n        var polyId = 0;\r\n\r\n        function getBoundingBox(poly) {\r\n            var firstPt = poly[0];\r\n            var bbox = [\r\n                firstPt[0], firstPt[1],\r\n                firstPt[0], firstPt[1]\r\n            ];\r\n\r\n            for (var ind = 1; ind < poly.length; ind++) {\r\n                var pt = poly[ind];\r\n\r\n                var x = pt[0];\r\n                if (x < bbox[0]) {\r\n                    bbox[0] = x;\r\n                }\r\n                else if (x > bbox[2]) {\r\n                    bbox[2] = x;\r\n                }\r\n\r\n                var y = pt[1];\r\n                if (y < bbox[1]) {\r\n                    bbox[1] = y;\r\n                }\r\n                else if (y > bbox[3]) {\r\n                    bbox[3] = y;\r\n                }\r\n            }\r\n\r\n            return bbox;\r\n        }\r\n\r\n        function indexPolygon(poly) {\r\n            polygons.push(poly);\r\n            var bbox = getBoundingBox(poly.geometry.coordinates[0]);\r\n            bbox.polyId = polyId++;\r\n            bboxes.push(bbox);\r\n        }\r\n\r\n        function indexFeature(poly) {\r\n            if (poly.geometry.coordinates[0] !== undefined &&\r\n                poly.geometry.coordinates[0].length > 0) {\r\n                switch (poly.geometry.type) {\r\n                    case 'Polygon':\r\n                        indexPolygon(poly);\r\n                        break;\r\n\r\n                    case 'MultiPolygon':\r\n                        var childPolys = poly.geometry.coordinates;\r\n                        for (var ind = 0; ind < childPolys.length; ind++) {\r\n                            var childPoly = {\r\n                                type: 'Feature',\r\n                                properties: poly.properties,\r\n                                geometry: {\r\n                                    type: 'Polygon',\r\n                                    coordinates: childPolys[ind]\r\n                                }\r\n                            };\r\n                            indexPolygon(childPoly);\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        var rBush = (function rbush() {\r\n\r\n            this.RBush = function (maxEntries, format) {\r\n\r\n                // jshint newcap: false, validthis: true\r\n                if (!(this instanceof RBush)) return new RBush(maxEntries, format);\r\n\r\n                // max entries in a node is 9 by default; min node fill is 40% for best performance\r\n                this._maxEntries = Math.max(4, maxEntries || 9);\r\n                this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\r\n\r\n                if (format) {\r\n                    this._initFormat(format);\r\n                }\r\n\r\n                this.clear();\r\n            }\r\n\r\n            RBush.prototype = {\r\n\r\n                all: function () {\r\n                    return this._all(this.data, []);\r\n                },\r\n\r\n                search: function (bbox) {\r\n\r\n                    var node = this.data,\r\n                        result = [],\r\n                        toBBox = this.toBBox;\r\n\r\n                    if (!intersects(bbox, node.bbox)) return result;\r\n\r\n                    var nodesToSearch = [],\r\n                        i, len, child, childBBox;\r\n\r\n                    while (node) {\r\n                        for (i = 0, len = node.children.length; i < len; i++) {\r\n\r\n                            child = node.children[i];\r\n                            childBBox = node.leaf ? toBBox(child) : child.bbox;\r\n\r\n                            if (intersects(bbox, childBBox)) {\r\n                                if (node.leaf) result.push(child);\r\n                                else if (contains(bbox, childBBox)) this._all(child, result);\r\n                                else nodesToSearch.push(child);\r\n                            }\r\n                        }\r\n                        node = nodesToSearch.pop();\r\n                    }\r\n\r\n                    return result;\r\n                },\r\n\r\n                load: function (data) {\r\n                    if (!(data && data.length)) return this;\r\n\r\n                    if (data.length < this._minEntries) {\r\n                        for (var i = 0, len = data.length; i < len; i++) {\r\n                            this.insert(data[i]);\r\n                        }\r\n                        return this;\r\n                    }\r\n\r\n                    // recursively build the tree with the given data from stratch using OMT algorithm\r\n                    var node = this._build(data.slice(), 0, data.length - 1, 0);\r\n\r\n                    if (!this.data.children.length) {\r\n                        // save as is if tree is empty\r\n                        this.data = node;\r\n\r\n                    } else if (this.data.height === node.height) {\r\n                        // split root if trees have the same height\r\n                        this._splitRoot(this.data, node);\r\n\r\n                    } else {\r\n                        if (this.data.height < node.height) {\r\n                            // swap trees if inserted one is bigger\r\n                            var tmpNode = this.data;\r\n                            this.data = node;\r\n                            node = tmpNode;\r\n                        }\r\n\r\n                        // insert the small tree into the large tree at appropriate level\r\n                        this._insert(node, this.data.height - node.height - 1, true);\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                insert: function (item) {\r\n                    if (item) this._insert(item, this.data.height - 1);\r\n                    return this;\r\n                },\r\n\r\n                clear: function () {\r\n                    this.data = {\r\n                        children: [],\r\n                        height: 1,\r\n                        bbox: empty(),\r\n                        leaf: true\r\n                    };\r\n                    return this;\r\n                },\r\n\r\n                remove: function (item) {\r\n                    if (!item) return this;\r\n\r\n                    var node = this.data,\r\n                        bbox = this.toBBox(item),\r\n                        path = [],\r\n                        indexes = [],\r\n                        i, parent, index, goingUp;\r\n\r\n                    // depth-first iterative tree traversal\r\n                    while (node || path.length) {\r\n\r\n                        if (!node) { // go up\r\n                            node = path.pop();\r\n                            parent = path[path.length - 1];\r\n                            i = indexes.pop();\r\n                            goingUp = true;\r\n                        }\r\n\r\n                        if (node.leaf) { // check current node\r\n                            index = node.children.indexOf(item);\r\n\r\n                            if (index !== -1) {\r\n                                // item found, remove the item and condense tree upwards\r\n                                node.children.splice(index, 1);\r\n                                path.push(node);\r\n                                this._condense(path);\r\n                                return this;\r\n                            }\r\n                        }\r\n\r\n                        if (!goingUp && !node.leaf && contains(node.bbox, bbox)) { // go down\r\n                            path.push(node);\r\n                            indexes.push(i);\r\n                            i = 0;\r\n                            parent = node;\r\n                            node = node.children[0];\r\n\r\n                        } else if (parent) { // go right\r\n                            i++;\r\n                            node = parent.children[i];\r\n                            goingUp = false;\r\n\r\n                        } else node = null; // nothing found\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                toBBox: function (item) { return item; },\r\n\r\n                compareMinX: function (a, b) { return a[0] - b[0]; },\r\n                compareMinY: function (a, b) { return a[1] - b[1]; },\r\n\r\n                toJSON: function () { return this.data; },\r\n\r\n                fromJSON: function (data) {\r\n                    this.data = data;\r\n                    return this;\r\n                },\r\n\r\n                _all: function (node, result) {\r\n                    var nodesToSearch = [];\r\n                    while (node) {\r\n                        if (node.leaf) result.push.apply(result, node.children);\r\n                        else nodesToSearch.push.apply(nodesToSearch, node.children);\r\n\r\n                        node = nodesToSearch.pop();\r\n                    }\r\n                    return result;\r\n                },\r\n\r\n                _build: function (items, left, right, height) {\r\n\r\n                    var N = right - left + 1,\r\n                        M = this._maxEntries,\r\n                        node;\r\n\r\n                    if (N <= M) {\r\n                        // reached leaf level; return leaf\r\n                        node = {\r\n                            children: items.slice(left, right + 1),\r\n                            height: 1,\r\n                            bbox: null,\r\n                            leaf: true\r\n                        };\r\n                        calcBBox(node, this.toBBox);\r\n                        return node;\r\n                    }\r\n\r\n                    if (!height) {\r\n                        // target height of the bulk-loaded tree\r\n                        height = Math.ceil(Math.log(N) / Math.log(M));\r\n\r\n                        // target number of root entries to maximize storage utilization\r\n                        M = Math.ceil(N / Math.pow(M, height - 1));\r\n                    }\r\n\r\n                    // TODO eliminate recursion?\r\n\r\n                    node = {\r\n                        children: [],\r\n                        height: height,\r\n                        bbox: null\r\n                    };\r\n\r\n                    // split the items into M mostly square tiles\r\n\r\n                    var N2 = Math.ceil(N / M),\r\n                        N1 = N2 * Math.ceil(Math.sqrt(M)),\r\n                        i, j, right2, right3;\r\n\r\n                    multiSelect(items, left, right, N1, this.compareMinX);\r\n\r\n                    for (i = left; i <= right; i += N1) {\r\n\r\n                        right2 = Math.min(i + N1 - 1, right);\r\n\r\n                        multiSelect(items, i, right2, N2, this.compareMinY);\r\n\r\n                        for (j = i; j <= right2; j += N2) {\r\n\r\n                            right3 = Math.min(j + N2 - 1, right2);\r\n\r\n                            // pack each entry recursively\r\n                            node.children.push(this._build(items, j, right3, height - 1));\r\n                        }\r\n                    }\r\n\r\n                    calcBBox(node, this.toBBox);\r\n\r\n                    return node;\r\n                },\r\n\r\n                _chooseSubtree: function (bbox, node, level, path) {\r\n\r\n                    var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\r\n\r\n                    while (true) {\r\n                        path.push(node);\r\n\r\n                        if (node.leaf || path.length - 1 === level) break;\r\n\r\n                        minArea = minEnlargement = Infinity;\r\n\r\n                        for (i = 0, len = node.children.length; i < len; i++) {\r\n                            child = node.children[i];\r\n                            area = bboxArea(child.bbox);\r\n                            enlargement = enlargedArea(bbox, child.bbox) - area;\r\n\r\n                            // choose entry with the least area enlargement\r\n                            if (enlargement < minEnlargement) {\r\n                                minEnlargement = enlargement;\r\n                                minArea = area < minArea ? area : minArea;\r\n                                targetNode = child;\r\n\r\n                            } else if (enlargement === minEnlargement) {\r\n                                // otherwise choose one with the smallest area\r\n                                if (area < minArea) {\r\n                                    minArea = area;\r\n                                    targetNode = child;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        node = targetNode;\r\n                    }\r\n\r\n                    return node;\r\n                },\r\n\r\n                _insert: function (item, level, isNode) {\r\n\r\n                    var toBBox = this.toBBox,\r\n                        bbox = isNode ? item.bbox : toBBox(item),\r\n                        insertPath = [];\r\n\r\n                    // find the best node for accommodating the item, saving all nodes along the path too\r\n                    var node = this._chooseSubtree(bbox, this.data, level, insertPath);\r\n\r\n                    // put the item into the node\r\n                    node.children.push(item);\r\n                    extend(node.bbox, bbox);\r\n\r\n                    // split on node overflow; propagate upwards if necessary\r\n                    while (level >= 0) {\r\n                        if (insertPath[level].children.length > this._maxEntries) {\r\n                            this._split(insertPath, level);\r\n                            level--;\r\n                        } else break;\r\n                    }\r\n\r\n                    // adjust bboxes along the insertion path\r\n                    this._adjustParentBBoxes(bbox, insertPath, level);\r\n                },\r\n\r\n                // split overflowed node into two\r\n                _split: function (insertPath, level) {\r\n\r\n                    var node = insertPath[level],\r\n                        M = node.children.length,\r\n                        m = this._minEntries;\r\n\r\n                    this._chooseSplitAxis(node, m, M);\r\n\r\n                    var newNode = {\r\n                        children: node.children.splice(this._chooseSplitIndex(node, m, M)),\r\n                        height: node.height\r\n                    };\r\n\r\n                    if (node.leaf) newNode.leaf = true;\r\n\r\n                    calcBBox(node, this.toBBox);\r\n                    calcBBox(newNode, this.toBBox);\r\n\r\n                    if (level) insertPath[level - 1].children.push(newNode);\r\n                    else this._splitRoot(node, newNode);\r\n                },\r\n\r\n                _splitRoot: function (node, newNode) {\r\n                    // split root node\r\n                    this.data = {\r\n                        children: [node, newNode],\r\n                        height: node.height + 1\r\n                    };\r\n                    calcBBox(this.data, this.toBBox);\r\n                },\r\n\r\n                _chooseSplitIndex: function (node, m, M) {\r\n\r\n                    var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\r\n\r\n                    minOverlap = minArea = Infinity;\r\n\r\n                    for (i = m; i <= M - m; i++) {\r\n                        bbox1 = distBBox(node, 0, i, this.toBBox);\r\n                        bbox2 = distBBox(node, i, M, this.toBBox);\r\n\r\n                        overlap = intersectionArea(bbox1, bbox2);\r\n                        area = bboxArea(bbox1) + bboxArea(bbox2);\r\n\r\n                        // choose distribution with minimum overlap\r\n                        if (overlap < minOverlap) {\r\n                            minOverlap = overlap;\r\n                            index = i;\r\n\r\n                            minArea = area < minArea ? area : minArea;\r\n\r\n                        } else if (overlap === minOverlap) {\r\n                            // otherwise choose distribution with minimum area\r\n                            if (area < minArea) {\r\n                                minArea = area;\r\n                                index = i;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return index;\r\n                },\r\n\r\n                // sorts node children by the best axis for split\r\n                _chooseSplitAxis: function (node, m, M) {\r\n\r\n                    var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\r\n                        compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\r\n                        xMargin = this._allDistMargin(node, m, M, compareMinX),\r\n                        yMargin = this._allDistMargin(node, m, M, compareMinY);\r\n\r\n                    // if total distributions margin value is minimal for x, sort by minX,\r\n                    // otherwise it's already sorted by minY\r\n                    if (xMargin < yMargin) node.children.sort(compareMinX);\r\n                },\r\n\r\n                // total margin of all possible split distributions where each node is at least m full\r\n                _allDistMargin: function (node, m, M, compare) {\r\n\r\n                    node.children.sort(compare);\r\n\r\n                    var toBBox = this.toBBox,\r\n                        leftBBox = distBBox(node, 0, m, toBBox),\r\n                        rightBBox = distBBox(node, M - m, M, toBBox),\r\n                        margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\r\n                        i, child;\r\n\r\n                    for (i = m; i < M - m; i++) {\r\n                        child = node.children[i];\r\n                        extend(leftBBox, node.leaf ? toBBox(child) : child.bbox);\r\n                        margin += bboxMargin(leftBBox);\r\n                    }\r\n\r\n                    for (i = M - m - 1; i >= m; i--) {\r\n                        child = node.children[i];\r\n                        extend(rightBBox, node.leaf ? toBBox(child) : child.bbox);\r\n                        margin += bboxMargin(rightBBox);\r\n                    }\r\n\r\n                    return margin;\r\n                },\r\n\r\n                _adjustParentBBoxes: function (bbox, path, level) {\r\n                    // adjust bboxes along the given tree path\r\n                    for (var i = level; i >= 0; i--) {\r\n                        extend(path[i].bbox, bbox);\r\n                    }\r\n                },\r\n\r\n                _condense: function (path) {\r\n                    // go through the path, removing empty nodes and updating bboxes\r\n                    for (var i = path.length - 1, siblings; i >= 0; i--) {\r\n                        if (path[i].children.length === 0) {\r\n                            if (i > 0) {\r\n                                siblings = path[i - 1].children;\r\n                                siblings.splice(siblings.indexOf(path[i]), 1);\r\n\r\n                            } else this.clear();\r\n\r\n                        } else calcBBox(path[i], this.toBBox);\r\n                    }\r\n                },\r\n\r\n                _initFormat: function (format) {\r\n                    // data format (minX, minY, maxX, maxY accessors)\r\n\r\n                    // uses eval-type function compilation instead of just accepting a toBBox function\r\n                    // because the algorithms are very sensitive to sorting functions performance,\r\n                    // so they should be dead simple and without inner calls\r\n\r\n                    // jshint evil: true\r\n\r\n                    var compareArr = ['return a', ' - b', ';'];\r\n\r\n                    this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\r\n                    this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\r\n\r\n                    this.toBBox = new Function('a', 'return [a' + format.join(', a') + '];');\r\n                }\r\n            };\r\n\r\n\r\n            // calculate node's bbox from bboxes of its children\r\n            function calcBBox(node, toBBox) {\r\n                node.bbox = distBBox(node, 0, node.children.length, toBBox);\r\n            }\r\n\r\n            // min bounding rectangle of node children from k to p-1\r\n            function distBBox(node, k, p, toBBox) {\r\n                var bbox = empty();\r\n\r\n                for (var i = k, child; i < p; i++) {\r\n                    child = node.children[i];\r\n                    extend(bbox, node.leaf ? toBBox(child) : child.bbox);\r\n                }\r\n\r\n                return bbox;\r\n            }\r\n\r\n            function empty() { return [Infinity, Infinity, -Infinity, -Infinity]; }\r\n\r\n            function extend(a, b) {\r\n                a[0] = Math.min(a[0], b[0]);\r\n                a[1] = Math.min(a[1], b[1]);\r\n                a[2] = Math.max(a[2], b[2]);\r\n                a[3] = Math.max(a[3], b[3]);\r\n                return a;\r\n            }\r\n\r\n            function compareNodeMinX(a, b) { return a.bbox[0] - b.bbox[0]; }\r\n            function compareNodeMinY(a, b) { return a.bbox[1] - b.bbox[1]; }\r\n\r\n            function bboxArea(a) { return (a[2] - a[0]) * (a[3] - a[1]); }\r\n            function bboxMargin(a) { return (a[2] - a[0]) + (a[3] - a[1]); }\r\n\r\n            function enlargedArea(a, b) {\r\n                return (Math.max(b[2], a[2]) - Math.min(b[0], a[0])) *\r\n                    (Math.max(b[3], a[3]) - Math.min(b[1], a[1]));\r\n            }\r\n\r\n            function intersectionArea(a, b) {\r\n                var minX = Math.max(a[0], b[0]),\r\n                    minY = Math.max(a[1], b[1]),\r\n                    maxX = Math.min(a[2], b[2]),\r\n                    maxY = Math.min(a[3], b[3]);\r\n\r\n                return Math.max(0, maxX - minX) *\r\n                    Math.max(0, maxY - minY);\r\n            }\r\n\r\n            function contains(a, b) {\r\n                return a[0] <= b[0] &&\r\n                    a[1] <= b[1] &&\r\n                    b[2] <= a[2] &&\r\n                    b[3] <= a[3];\r\n            }\r\n\r\n            function intersects(a, b) {\r\n                return b[0] <= a[2] &&\r\n                    b[1] <= a[3] &&\r\n                    b[2] >= a[0] &&\r\n                    b[3] >= a[1];\r\n            }\r\n\r\n            // sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\r\n            // combines selection algorithm with binary divide & conquer approach\r\n\r\n            function multiSelect(arr, left, right, n, compare) {\r\n                var stack = [left, right],\r\n                    mid;\r\n\r\n                while (stack.length) {\r\n                    right = stack.pop();\r\n                    left = stack.pop();\r\n\r\n                    if (right - left <= n) continue;\r\n\r\n                    mid = left + Math.ceil((right - left) / n / 2) * n;\r\n                    select(arr, left, right, mid, compare);\r\n\r\n                    stack.push(left, mid, mid, right);\r\n                }\r\n            }\r\n\r\n            // sort array between left and right (inclusive) so that the smallest k elements come first (unordered)\r\n            function select(arr, left, right, k, compare) {\r\n                var n, i, z, s, sd, newLeft, newRight, t, j;\r\n\r\n                while (right > left) {\r\n                    if (right - left > 600) {\r\n                        n = right - left + 1;\r\n                        i = k - left + 1;\r\n                        z = Math.log(n);\r\n                        s = 0.5 * Math.exp(2 * z / 3);\r\n                        sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (i - n / 2 < 0 ? -1 : 1);\r\n                        newLeft = Math.max(left, Math.floor(k - i * s / n + sd));\r\n                        newRight = Math.min(right, Math.floor(k + (n - i) * s / n + sd));\r\n                        select(arr, newLeft, newRight, k, compare);\r\n                    }\r\n\r\n                    t = arr[k];\r\n                    i = left;\r\n                    j = right;\r\n\r\n                    swap(arr, left, k);\r\n                    if (compare(arr[right], t) > 0) swap(arr, left, right);\r\n\r\n                    while (i < j) {\r\n                        swap(arr, i, j);\r\n                        i++;\r\n                        j--;\r\n                        while (compare(arr[i], t) < 0) i++;\r\n                        while (compare(arr[j], t) > 0) j--;\r\n                    }\r\n\r\n                    if (compare(arr[left], t) === 0) swap(arr, left, j);\r\n                    else {\r\n                        j++;\r\n                        swap(arr, j, right);\r\n                    }\r\n\r\n                    if (j <= k) left = j + 1;\r\n                    if (k <= j) right = j - 1;\r\n                }\r\n            }\r\n\r\n            function swap(arr, i, j) {\r\n                var tmp = arr[i];\r\n                arr[i] = arr[j];\r\n                arr[j] = tmp;\r\n            }\r\n\r\n\r\n            // export as AMD/CommonJS module or global variable\r\n            if (typeof define === 'function' && define.amd) define(function () { return rbush; });\r\n            else if (typeof module !== 'undefined') module.exports = rbush;\r\n            else if (typeof self !== 'undefined') self.rbush = rbush;\r\n            else window.rbush = rbush;\r\n\r\n        })();\r\n\r\n        collection.features.forEach(indexFeature);\r\n        this.rtree = (new rbush()).RBush().load(bboxes);\r\n        this.polygons = polygons;\r\n    };\r\n\r\n\r\n\r\n\r\n    if (featureCollection !== undefined) {\r\n        this.loadFeatureCollection(featureCollection);\r\n    }\r\n}\r\n\r\n/**\r\n * Find the polygon that a point intersects. Execute a bounding-box search to\r\n * narrow down the candidate polygons to a small subset, and then perform\r\n * additional point-in-polygon intersections to resolve any ambiguities.\r\n *\r\n * @param {number} x The x-coordinate of the point.\r\n * @param {number} y The y-coordinate of the point.\r\n * @return {undefined|object} If one or more bounding box intersections are\r\n *    found, return the first polygon that intersects (`x`, `y`); otherwise,\r\n *    `undefined`.\r\n *\r\nPolygonLookup.prototype.search = function search( x, y ){\r\n  var bboxes = this.rtree.search( [ x, y, x, y ] );\r\n  var pt = [ x, y ];\r\n  for( var ind = 0; ind < bboxes.length; ind++ ){\r\n    var polyObj = this.polygons[ bboxes[ ind ].polyId ];\r\n    var polyCoords = polyObj.geometry.coordinates[ 0 ];\r\n    if( pointInPolygon( pt, polyCoords ) ){\r\n      var inHole = false;\r\n      for( var subPolyInd = 1; subPolyInd < polyObj.geometry.coordinates.length; subPolyInd++ ){\r\n        if( pointInPolygon( pt, polyObj.geometry.coordinates[ subPolyInd ] ) ){\r\n          inHole = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if( !inHole ){\r\n        return polyObj;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n*/\r\n/**\r\n * Build a spatial index for a set of polygons, and store both the polygons and\r\n * the index in this `PolygonLookup`.\r\n *\r\n * @param {object} collection A GeoJSON-formatted FeatureCollection.\r\n *\r\nPolygonLookup.prototype.loadFeatureCollection = function loadFeatureCollection( collection ){\r\n  var bboxes = [];\r\n  var polygons = [];\r\n  var polyId = 0;\r\n\r\n  function indexPolygon( poly ){\r\n    polygons.push(poly);\r\n    var bbox = getBoundingBox( poly.geometry.coordinates[ 0 ] );\r\n    bbox.polyId = polyId++;\r\n    bboxes.push(bbox);\r\n  }\r\n\r\n  function indexFeature( poly ){\r\n    if( poly.geometry.coordinates[ 0 ] !== undefined &&\r\n        poly.geometry.coordinates[ 0 ].length > 0){\r\n      switch( poly.geometry.type ){\r\n        case 'Polygon':\r\n          indexPolygon( poly );\r\n          break;\r\n\r\n        case 'MultiPolygon':\r\n          var childPolys = poly.geometry.coordinates;\r\n          for( var ind = 0; ind < childPolys.length; ind++ ){\r\n            var childPoly = {\r\n              type: 'Feature',\r\n              properties: poly.properties,\r\n              geometry: {\r\n                type: 'Polygon',\r\n                coordinates: childPolys[ ind ]\r\n              }\r\n            };\r\n            indexPolygon( childPoly );\r\n          }\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  collection.features.forEach( indexFeature );\r\n  this.rtree = new RBush().load( bboxes );\r\n  this.polygons = polygons;\r\n};\r\n\r\n*/\r\n\r\n",
    "static": true,
    "longname": "src/lib/rtree.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 312,
    "kind": "function",
    "name": "pointInPolygon",
    "memberof": "src/lib/rtree.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/rtree.js~pointInPolygon",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/rtree.js",
    "importStyle": null,
    "description": "Exports a `PolygonLookup` constructor, which constructs a data-structure for\nquickly finding the polygon that a point intersects in a (potentially very\nlarge) set.",
    "lineNumber": 7,
    "params": [
      {
        "name": "point",
        "types": [
          "*"
        ]
      },
      {
        "name": "vs",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 313,
    "kind": "function",
    "name": "PolygonLookup",
    "memberof": "src/lib/rtree.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/rtree.js~PolygonLookup",
    "access": null,
    "export": false,
    "importPath": "gisplay-es6-webpack/src/lib/rtree.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "featureCollection",
        "description": "An optional GeoJSON feature collection\n   to pass to `loadFeatureCollection()`."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "rbush"
        ],
        "spread": false,
        "optional": false,
        "name": "rtree",
        "description": "A spatial index for `this.polygons`."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "polgons",
        "description": "A GeoJSON feature collection."
      }
    ]
  },
  {
    "__docId__": 315,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 316,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 317,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 318,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 319,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 320,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 321,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 322,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 323,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 324,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 325,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 326,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 327,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 328,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 329,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 330,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 331,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 332,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 333,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 334,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 335,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 336,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 337,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 338,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 339,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 340,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 341,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 342,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 343,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 344,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 345,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 346,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 347,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 348,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 349,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 350,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 351,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 352,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 353,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 354,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 355,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 356,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 357,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 358,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 359,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 360,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 361,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "lineNumber": 193,
    "builtinExternal": true
  },
  {
    "__docId__": 363,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 364,
    "kind": "external",
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 365,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 366,
    "kind": "external",
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 367,
    "kind": "external",
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 368,
    "kind": "external",
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 369,
    "kind": "external",
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 370,
    "kind": "external",
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "builtinExternal": true
  },
  {
    "__docId__": 371,
    "kind": "testFile",
    "name": "test/test.js",
    "content": "import { GisplayOptions } from '../src/Gisplay/GisplayOptions';\r\nvar expect = require('chai').expect;\r\n\r\n/** @test {GisplayOptions} */\r\ndescribe('Test GisplayOptions. User options are empty so all defaults should be used.', function () {\r\n    let gisplayOptions = new GisplayOptions({});\r\n\r\n    /**@test {GisplayOptions#attr} */\r\n    it('Attr value is undefined', function () {\r\n        expect(gisplayOptions.attr).to.equal(undefined);\r\n    });\r\n\r\n    /**@test {GisplayOptions#colorScheme} */\r\n    it('Color Shceme is undefined', function () {\r\n        expect(gisplayOptions.colorScheme).to.equal(undefined);\r\n    });\r\n\r\n    /**@test {GisplayOptions#numberOfClasses} */\r\n    it('numberOfClasses is undefined', function () {\r\n        expect(gisplayOptions.numberOfClasses).to.equal(undefined);\r\n    });\r\n\r\n    /**@test {GisplayOptions#classBreaksMethod} */\r\n    it('classBreaksMethod is quantile', function () {\r\n        expect(gisplayOptions.classBreaksMethod).to.equal('quantile');\r\n    });\r\n\r\n    /**@test {GisplayOptions#classBreaks} */\r\n    it('classBreaks are undefined', function () {\r\n        expect(gisplayOptions.classBreaks).to.equal(undefined);\r\n    });\r\n\r\n    /**@test {GisplayOptions#interactive} */\r\n    it('interactive is true ', function () {\r\n        expect(gisplayOptions.interactive).to.equal(true);\r\n    });\r\n\r\n    /**@test {GisplayOptions#showPropertiesOnClick} */\r\n    it('showPropertiesOnClick is null ', function () {\r\n        expect(gisplayOptions.showPropertiesOnClick).to.equal(null);\r\n    });\r\n\r\n    /**@test {GisplayOptions#showLegend} */\r\n    it('showLegend is true', function () {\r\n        expect(gisplayOptions.showLegend).to.equal(true);\r\n    });\r\n\r\n    /**@test {GisplayOptions#minuend} */\r\n    it('minuend is undefined ', function () {\r\n        expect(gisplayOptions.minuend).to.equal(undefined);\r\n    });\r\n\r\n    /**@test {GisplayOptions#subtrahend} */\r\n    it('subtrahend is undefined ', function () {\r\n        expect(gisplayOptions.subtrahend).to.equal(undefined);\r\n    });\r\n\r\n    /**@test {GisplayOptions#legendTitle} */\r\n    it('legendTitle is undefined - undefined', function () {\r\n        expect(gisplayOptions.legendTitle).to.equal('undefined - undefined');\r\n    });\r\n\r\n    /**@test {GisplayOptions#showLoader} */\r\n    it('showLoader is true', function () {\r\n        expect(gisplayOptions.showLoader).to.equal(true);\r\n    });\r\n\r\n    /**@test {GisplayOptions#useCustomMapService} */\r\n    it('useCustomMapService is false ', function () {\r\n        expect(gisplayOptions.useCustomMapService).to.equal(false);\r\n    });\r\n\r\n    /**@test {GisplayOptions#minPointSize} */\r\n    it('minPointSize is 1.0', function () {\r\n        expect(gisplayOptions.minPointSize).to.equal(1.0);\r\n    });\r\n\r\n    /**@test {GisplayOptions#maxPointSize} */\r\n    it('maxPointSize is 10.0', function () {\r\n        expect(gisplayOptions.maxPointSize).to.equal(10.0);\r\n    });\r\n\r\n    /**@test {GisplayOptions#sizeByClass} */\r\n    it('sizeByClass is false', function () {\r\n        expect(gisplayOptions.sizeByClass).to.equal(false);\r\n    });\r\n\r\n    /**@test {GisplayOptions#memorySaver} */\r\n    it('memorySaver is true', function () {\r\n        expect(gisplayOptions.memorySaver).to.equal(true);\r\n    });\r\n\r\n    /**@test {GisplayOptions#colorSchemeId} */\r\n    it('colorSchemeId is 1', function () {\r\n        expect(gisplayOptions.colorSchemeId).to.equal(1);\r\n    });\r\n\r\n    /**@test {GisplayOptions#legendOnClickFunction} */\r\n    it('legendOnClickFunction is undefined', function () {\r\n        expect(gisplayOptions.legendOnClickFunction).to.equal(undefined);\r\n    });\r\n\r\n    /**@test {GisplayOptions#mapOnClickFunction} */\r\n    it('mapOnClickFunction  is undefined', function () {\r\n        expect(gisplayOptions.mapOnClickFunction).to.equal(undefined);\r\n    });\r\n\r\n    //OTHER OPTIONS\r\n    /**@test {GisplayOptions#alpha} */\r\n    it('alpha is 0.8', function () {\r\n        expect(gisplayOptions.alpha).to.equal(0.8);\r\n    });\r\n\r\n    /**@test {GisplayOptions#maxFeatures} */\r\n    it('maxFeatures is equal to Number.MAX_VALUE', function () {\r\n        expect(gisplayOptions.maxFeatures).to.equal(Number.MAX_VALUE);\r\n    });\r\n\r\n    /**@test {GisplayOptions#numberOfLegendItems} */\r\n    it('numberOfLegendItems is 2', function () {\r\n        expect(gisplayOptions.numberOfLegendItems).to.equal(2);\r\n    });\r\n\r\n    //NON-USER OPTIONS\r\n    /**@test {GisplayOptions#isDynamic} */\r\n    it('isDynamic is !memorySaver(true)', function () {\r\n        expect(gisplayOptions.isDynamic).to.equal(!gisplayOptions.memorySaver);\r\n    });\r\n\r\n    /**@test {GisplayOptions#legendToggle} */\r\n    it('legendToggle is true', function () {\r\n        expect(gisplayOptions.legendToggle).to.equal(true);\r\n    });\r\n\r\n    //DEPRECATED OPTIONS\r\n    /**@test {GisplayOptions#intensity} */\r\n    it('intensity(deprecated) is 1.0', function () {\r\n        expect(gisplayOptions.intensity).to.equal(1.0);\r\n    });\r\n\r\n    /**@test {GisplayOptions#} */\r\n    it('legendPosition(deprecated) is equal to br', function () {\r\n        expect(gisplayOptions.legendPosition).to.equal('br');\r\n    });\r\n\r\n    /**@test {GisplayOptions#legendNumberFormat} */\r\n    it('legendNumberFormat(deprecated) is 0', function () {\r\n        expect(gisplayOptions.legendNumberFormat).to.equal(0);\r\n    });\r\n\r\n    /**@test {GisplayOptions#} */\r\n    it('profiling is true', function () {\r\n        expect(gisplayOptions.profiling).to.equal(true);\r\n    });\r\n});\r\n\r\n/** @test {GisplayOptions} */\r\ndescribe('Test GisplayOptions. Some user options are defined. TODO: More testing', function () {\r\n    let gisplayOptions = new GisplayOptions({\r\n        attr: 'f3',\r\n        numberOfClasses: 50\r\n    });\r\n\r\n    /**@test {GisplayOptions#attr} */\r\n    it('Attr value is undefined', function () {\r\n        expect(gisplayOptions.attr).to.equal('f3');\r\n    });\r\n\r\n    /**@test {GisplayOptions#colorScheme} */\r\n    it('Color Shceme is undefined', function () {\r\n        expect(gisplayOptions.colorScheme).to.equal(undefined);\r\n    });\r\n\r\n    /**@test {GisplayOptions#numberOfClasses} */\r\n    it('numberOfClasses is undefined', function () {\r\n        expect(gisplayOptions.numberOfClasses).to.equal(50);\r\n    });\r\n\r\n    /**@test {GisplayOptions#classBreaksMethod} */\r\n    it('classBreaksMethod is quantile', function () {\r\n        expect(gisplayOptions.classBreaksMethod).to.equal('quantile');\r\n    });\r\n\r\n    /**@test {GisplayOptions#classBreaks} */\r\n    it('classBreaks are undefined', function () {\r\n        expect(gisplayOptions.classBreaks).to.equal(undefined);\r\n    });\r\n\r\n    /**@test {GisplayOptions#interactive} */\r\n    it('interactive is true ', function () {\r\n        expect(gisplayOptions.interactive).to.equal(true);\r\n    });\r\n\r\n    /**@test {GisplayOptions#showPropertiesOnClick} */\r\n    it('showPropertiesOnClick is null ', function () {\r\n        expect(gisplayOptions.showPropertiesOnClick).to.equal(null);\r\n    });\r\n\r\n    /**@test {GisplayOptions#showLegend} */\r\n    it('showLegend is true', function () {\r\n        expect(gisplayOptions.showLegend).to.equal(true);\r\n    });\r\n\r\n    /**@test {GisplayOptions#minuend} */\r\n    it('minuend is undefined ', function () {\r\n        expect(gisplayOptions.minuend).to.equal(undefined);\r\n    });\r\n\r\n    /**@test {GisplayOptions#subtrahend} */\r\n    it('subtrahend is undefined ', function () {\r\n        expect(gisplayOptions.subtrahend).to.equal(undefined);\r\n    });\r\n\r\n    /**@test {GisplayOptions#legendTitle} */\r\n    it('legendTitle is undefined - undefined', function () {\r\n        expect(gisplayOptions.legendTitle).to.equal('f3');\r\n    });\r\n\r\n    /**@test {GisplayOptions#showLoader} */\r\n    it('showLoader is true', function () {\r\n        expect(gisplayOptions.showLoader).to.equal(true);\r\n    });\r\n\r\n    /**@test {GisplayOptions#useCustomMapService} */\r\n    it('useCustomMapService is false ', function () {\r\n        expect(gisplayOptions.useCustomMapService).to.equal(false);\r\n    });\r\n\r\n    /**@test {GisplayOptions#minPointSize} */\r\n    it('minPointSize is 1.0', function () {\r\n        expect(gisplayOptions.minPointSize).to.equal(1.0);\r\n    });\r\n\r\n    /**@test {GisplayOptions#maxPointSize} */\r\n    it('maxPointSize is 10.0', function () {\r\n        expect(gisplayOptions.maxPointSize).to.equal(10.0);\r\n    });\r\n\r\n    /**@test {GisplayOptions#sizeByClass} */\r\n    it('sizeByClass is false', function () {\r\n        expect(gisplayOptions.sizeByClass).to.equal(false);\r\n    });\r\n\r\n    /**@test {GisplayOptions#memorySaver} */\r\n    it('memorySaver is true', function () {\r\n        expect(gisplayOptions.memorySaver).to.equal(true);\r\n    });\r\n\r\n    /**@test {GisplayOptions#colorSchemeId} */\r\n    it('colorSchemeId is 1', function () {\r\n        expect(gisplayOptions.colorSchemeId).to.equal(1);\r\n    });\r\n\r\n    /**@test {GisplayOptions#legendOnClickFunction} */\r\n    it('legendOnClickFunction is undefined', function () {\r\n        expect(gisplayOptions.legendOnClickFunction).to.equal(undefined);\r\n    });\r\n\r\n    /**@test {GisplayOptions#mapOnClickFunction} */\r\n    it('mapOnClickFunction  is undefined', function () {\r\n        expect(gisplayOptions.mapOnClickFunction).to.equal(undefined);\r\n    });\r\n\r\n    //OTHER OPTIONS\r\n    /**@test {GisplayOptions#alpha} */\r\n    it('alpha is 0.8', function () {\r\n        expect(gisplayOptions.alpha).to.equal(0.8);\r\n    });\r\n\r\n    /**@test {GisplayOptions#maxFeatures} */\r\n    it('maxFeatures is equal to Number.MAX_VALUE', function () {\r\n        expect(gisplayOptions.maxFeatures).to.equal(Number.MAX_VALUE);\r\n    });\r\n\r\n    /**@test {GisplayOptions#numberOfLegendItems} */\r\n    it('numberOfLegendItems is 2', function () {\r\n        expect(gisplayOptions.numberOfLegendItems).to.equal(2);\r\n    });\r\n\r\n    //NON-USER OPTIONS\r\n    /**@test {GisplayOptions#isDynamic} */\r\n    it('isDynamic is !memorySaver(true)', function () {\r\n        expect(gisplayOptions.isDynamic).to.equal(!gisplayOptions.memorySaver);\r\n    });\r\n\r\n    /**@test {GisplayOptions#legendToggle} */\r\n    it('legendToggle is true', function () {\r\n        expect(gisplayOptions.legendToggle).to.equal(true);\r\n    });\r\n});\r\n",
    "static": true,
    "longname": "test/test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 372,
    "kind": "testDescribe",
    "name": "describe0",
    "testId": 0,
    "memberof": "test/test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/test.js~describe0",
    "access": null,
    "description": "Test GisplayOptions. User options are empty so all defaults should be used.",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions}"
      }
    ],
    "testTargets": [
      "GisplayOptions"
    ]
  },
  {
    "__docId__": 373,
    "kind": "testIt",
    "name": "it1",
    "testId": 1,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it1",
    "access": null,
    "description": "Attr value is undefined",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#attr}"
      }
    ],
    "testTargets": [
      "GisplayOptions#attr"
    ]
  },
  {
    "__docId__": 374,
    "kind": "testIt",
    "name": "it2",
    "testId": 2,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it2",
    "access": null,
    "description": "Color Shceme is undefined",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#colorScheme}"
      }
    ],
    "testTargets": [
      "GisplayOptions#colorScheme"
    ]
  },
  {
    "__docId__": 375,
    "kind": "testIt",
    "name": "it3",
    "testId": 3,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it3",
    "access": null,
    "description": "numberOfClasses is undefined",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#numberOfClasses}"
      }
    ],
    "testTargets": [
      "GisplayOptions#numberOfClasses"
    ]
  },
  {
    "__docId__": 376,
    "kind": "testIt",
    "name": "it4",
    "testId": 4,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it4",
    "access": null,
    "description": "classBreaksMethod is quantile",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#classBreaksMethod}"
      }
    ],
    "testTargets": [
      "GisplayOptions#classBreaksMethod"
    ]
  },
  {
    "__docId__": 377,
    "kind": "testIt",
    "name": "it5",
    "testId": 5,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it5",
    "access": null,
    "description": "classBreaks are undefined",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#classBreaks}"
      }
    ],
    "testTargets": [
      "GisplayOptions#classBreaks"
    ]
  },
  {
    "__docId__": 378,
    "kind": "testIt",
    "name": "it6",
    "testId": 6,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it6",
    "access": null,
    "description": "interactive is true ",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#interactive}"
      }
    ],
    "testTargets": [
      "GisplayOptions#interactive"
    ]
  },
  {
    "__docId__": 379,
    "kind": "testIt",
    "name": "it7",
    "testId": 7,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it7",
    "access": null,
    "description": "showPropertiesOnClick is null ",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#showPropertiesOnClick}"
      }
    ],
    "testTargets": [
      "GisplayOptions#showPropertiesOnClick"
    ]
  },
  {
    "__docId__": 380,
    "kind": "testIt",
    "name": "it8",
    "testId": 8,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it8",
    "access": null,
    "description": "showLegend is true",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#showLegend}"
      }
    ],
    "testTargets": [
      "GisplayOptions#showLegend"
    ]
  },
  {
    "__docId__": 381,
    "kind": "testIt",
    "name": "it9",
    "testId": 9,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it9",
    "access": null,
    "description": "minuend is undefined ",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#minuend}"
      }
    ],
    "testTargets": [
      "GisplayOptions#minuend"
    ]
  },
  {
    "__docId__": 382,
    "kind": "testIt",
    "name": "it10",
    "testId": 10,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it10",
    "access": null,
    "description": "subtrahend is undefined ",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#subtrahend}"
      }
    ],
    "testTargets": [
      "GisplayOptions#subtrahend"
    ]
  },
  {
    "__docId__": 383,
    "kind": "testIt",
    "name": "it11",
    "testId": 11,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it11",
    "access": null,
    "description": "legendTitle is undefined - undefined",
    "lineNumber": 59,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#legendTitle}"
      }
    ],
    "testTargets": [
      "GisplayOptions#legendTitle"
    ]
  },
  {
    "__docId__": 384,
    "kind": "testIt",
    "name": "it12",
    "testId": 12,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it12",
    "access": null,
    "description": "showLoader is true",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#showLoader}"
      }
    ],
    "testTargets": [
      "GisplayOptions#showLoader"
    ]
  },
  {
    "__docId__": 385,
    "kind": "testIt",
    "name": "it13",
    "testId": 13,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it13",
    "access": null,
    "description": "useCustomMapService is false ",
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#useCustomMapService}"
      }
    ],
    "testTargets": [
      "GisplayOptions#useCustomMapService"
    ]
  },
  {
    "__docId__": 386,
    "kind": "testIt",
    "name": "it14",
    "testId": 14,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it14",
    "access": null,
    "description": "minPointSize is 1.0",
    "lineNumber": 74,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#minPointSize}"
      }
    ],
    "testTargets": [
      "GisplayOptions#minPointSize"
    ]
  },
  {
    "__docId__": 387,
    "kind": "testIt",
    "name": "it15",
    "testId": 15,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it15",
    "access": null,
    "description": "maxPointSize is 10.0",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#maxPointSize}"
      }
    ],
    "testTargets": [
      "GisplayOptions#maxPointSize"
    ]
  },
  {
    "__docId__": 388,
    "kind": "testIt",
    "name": "it16",
    "testId": 16,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it16",
    "access": null,
    "description": "sizeByClass is false",
    "lineNumber": 84,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#sizeByClass}"
      }
    ],
    "testTargets": [
      "GisplayOptions#sizeByClass"
    ]
  },
  {
    "__docId__": 389,
    "kind": "testIt",
    "name": "it17",
    "testId": 17,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it17",
    "access": null,
    "description": "memorySaver is true",
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#memorySaver}"
      }
    ],
    "testTargets": [
      "GisplayOptions#memorySaver"
    ]
  },
  {
    "__docId__": 390,
    "kind": "testIt",
    "name": "it18",
    "testId": 18,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it18",
    "access": null,
    "description": "colorSchemeId is 1",
    "lineNumber": 94,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#colorSchemeId}"
      }
    ],
    "testTargets": [
      "GisplayOptions#colorSchemeId"
    ]
  },
  {
    "__docId__": 391,
    "kind": "testIt",
    "name": "it19",
    "testId": 19,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it19",
    "access": null,
    "description": "legendOnClickFunction is undefined",
    "lineNumber": 99,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#legendOnClickFunction}"
      }
    ],
    "testTargets": [
      "GisplayOptions#legendOnClickFunction"
    ]
  },
  {
    "__docId__": 392,
    "kind": "testIt",
    "name": "it20",
    "testId": 20,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it20",
    "access": null,
    "description": "mapOnClickFunction  is undefined",
    "lineNumber": 104,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#mapOnClickFunction}"
      }
    ],
    "testTargets": [
      "GisplayOptions#mapOnClickFunction"
    ]
  },
  {
    "__docId__": 393,
    "kind": "testIt",
    "name": "it21",
    "testId": 21,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it21",
    "access": null,
    "description": "alpha is 0.8",
    "lineNumber": 110,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#alpha}"
      }
    ],
    "testTargets": [
      "GisplayOptions#alpha"
    ]
  },
  {
    "__docId__": 394,
    "kind": "testIt",
    "name": "it22",
    "testId": 22,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it22",
    "access": null,
    "description": "maxFeatures is equal to Number.MAX_VALUE",
    "lineNumber": 115,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#maxFeatures}"
      }
    ],
    "testTargets": [
      "GisplayOptions#maxFeatures"
    ]
  },
  {
    "__docId__": 395,
    "kind": "testIt",
    "name": "it23",
    "testId": 23,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it23",
    "access": null,
    "description": "numberOfLegendItems is 2",
    "lineNumber": 120,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#numberOfLegendItems}"
      }
    ],
    "testTargets": [
      "GisplayOptions#numberOfLegendItems"
    ]
  },
  {
    "__docId__": 396,
    "kind": "testIt",
    "name": "it24",
    "testId": 24,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it24",
    "access": null,
    "description": "isDynamic is !memorySaver(true)",
    "lineNumber": 126,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#isDynamic}"
      }
    ],
    "testTargets": [
      "GisplayOptions#isDynamic"
    ]
  },
  {
    "__docId__": 397,
    "kind": "testIt",
    "name": "it25",
    "testId": 25,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it25",
    "access": null,
    "description": "legendToggle is true",
    "lineNumber": 131,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#legendToggle}"
      }
    ],
    "testTargets": [
      "GisplayOptions#legendToggle"
    ]
  },
  {
    "__docId__": 398,
    "kind": "testIt",
    "name": "it26",
    "testId": 26,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it26",
    "access": null,
    "description": "intensity(deprecated) is 1.0",
    "lineNumber": 137,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#intensity}"
      }
    ],
    "testTargets": [
      "GisplayOptions#intensity"
    ]
  },
  {
    "__docId__": 399,
    "kind": "testIt",
    "name": "it27",
    "testId": 27,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it27",
    "access": null,
    "description": "legendPosition(deprecated) is equal to br",
    "lineNumber": 142,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#}"
      }
    ],
    "testTargets": [
      "GisplayOptions#"
    ]
  },
  {
    "__docId__": 400,
    "kind": "testIt",
    "name": "it28",
    "testId": 28,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it28",
    "access": null,
    "description": "legendNumberFormat(deprecated) is 0",
    "lineNumber": 147,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#legendNumberFormat}"
      }
    ],
    "testTargets": [
      "GisplayOptions#legendNumberFormat"
    ]
  },
  {
    "__docId__": 401,
    "kind": "testIt",
    "name": "it29",
    "testId": 29,
    "memberof": "test/test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe0.it29",
    "access": null,
    "description": "profiling is true",
    "lineNumber": 152,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#}"
      }
    ],
    "testTargets": [
      "GisplayOptions#"
    ]
  },
  {
    "__docId__": 402,
    "kind": "testDescribe",
    "name": "describe30",
    "testId": 30,
    "memberof": "test/test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/test.js~describe30",
    "access": null,
    "description": "Test GisplayOptions. Some user options are defined. TODO: More testing",
    "lineNumber": 158,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions}"
      }
    ],
    "testTargets": [
      "GisplayOptions"
    ]
  },
  {
    "__docId__": 403,
    "kind": "testIt",
    "name": "it31",
    "testId": 31,
    "memberof": "test/test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe30.it31",
    "access": null,
    "description": "Attr value is undefined",
    "lineNumber": 165,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#attr}"
      }
    ],
    "testTargets": [
      "GisplayOptions#attr"
    ]
  },
  {
    "__docId__": 404,
    "kind": "testIt",
    "name": "it32",
    "testId": 32,
    "memberof": "test/test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe30.it32",
    "access": null,
    "description": "Color Shceme is undefined",
    "lineNumber": 170,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#colorScheme}"
      }
    ],
    "testTargets": [
      "GisplayOptions#colorScheme"
    ]
  },
  {
    "__docId__": 405,
    "kind": "testIt",
    "name": "it33",
    "testId": 33,
    "memberof": "test/test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe30.it33",
    "access": null,
    "description": "numberOfClasses is undefined",
    "lineNumber": 175,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#numberOfClasses}"
      }
    ],
    "testTargets": [
      "GisplayOptions#numberOfClasses"
    ]
  },
  {
    "__docId__": 406,
    "kind": "testIt",
    "name": "it34",
    "testId": 34,
    "memberof": "test/test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe30.it34",
    "access": null,
    "description": "classBreaksMethod is quantile",
    "lineNumber": 180,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#classBreaksMethod}"
      }
    ],
    "testTargets": [
      "GisplayOptions#classBreaksMethod"
    ]
  },
  {
    "__docId__": 407,
    "kind": "testIt",
    "name": "it35",
    "testId": 35,
    "memberof": "test/test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe30.it35",
    "access": null,
    "description": "classBreaks are undefined",
    "lineNumber": 185,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#classBreaks}"
      }
    ],
    "testTargets": [
      "GisplayOptions#classBreaks"
    ]
  },
  {
    "__docId__": 408,
    "kind": "testIt",
    "name": "it36",
    "testId": 36,
    "memberof": "test/test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe30.it36",
    "access": null,
    "description": "interactive is true ",
    "lineNumber": 190,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#interactive}"
      }
    ],
    "testTargets": [
      "GisplayOptions#interactive"
    ]
  },
  {
    "__docId__": 409,
    "kind": "testIt",
    "name": "it37",
    "testId": 37,
    "memberof": "test/test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe30.it37",
    "access": null,
    "description": "showPropertiesOnClick is null ",
    "lineNumber": 195,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#showPropertiesOnClick}"
      }
    ],
    "testTargets": [
      "GisplayOptions#showPropertiesOnClick"
    ]
  },
  {
    "__docId__": 410,
    "kind": "testIt",
    "name": "it38",
    "testId": 38,
    "memberof": "test/test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe30.it38",
    "access": null,
    "description": "showLegend is true",
    "lineNumber": 200,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#showLegend}"
      }
    ],
    "testTargets": [
      "GisplayOptions#showLegend"
    ]
  },
  {
    "__docId__": 411,
    "kind": "testIt",
    "name": "it39",
    "testId": 39,
    "memberof": "test/test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe30.it39",
    "access": null,
    "description": "minuend is undefined ",
    "lineNumber": 205,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#minuend}"
      }
    ],
    "testTargets": [
      "GisplayOptions#minuend"
    ]
  },
  {
    "__docId__": 412,
    "kind": "testIt",
    "name": "it40",
    "testId": 40,
    "memberof": "test/test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe30.it40",
    "access": null,
    "description": "subtrahend is undefined ",
    "lineNumber": 210,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#subtrahend}"
      }
    ],
    "testTargets": [
      "GisplayOptions#subtrahend"
    ]
  },
  {
    "__docId__": 413,
    "kind": "testIt",
    "name": "it41",
    "testId": 41,
    "memberof": "test/test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe30.it41",
    "access": null,
    "description": "legendTitle is undefined - undefined",
    "lineNumber": 215,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#legendTitle}"
      }
    ],
    "testTargets": [
      "GisplayOptions#legendTitle"
    ]
  },
  {
    "__docId__": 414,
    "kind": "testIt",
    "name": "it42",
    "testId": 42,
    "memberof": "test/test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe30.it42",
    "access": null,
    "description": "showLoader is true",
    "lineNumber": 220,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#showLoader}"
      }
    ],
    "testTargets": [
      "GisplayOptions#showLoader"
    ]
  },
  {
    "__docId__": 415,
    "kind": "testIt",
    "name": "it43",
    "testId": 43,
    "memberof": "test/test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe30.it43",
    "access": null,
    "description": "useCustomMapService is false ",
    "lineNumber": 225,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#useCustomMapService}"
      }
    ],
    "testTargets": [
      "GisplayOptions#useCustomMapService"
    ]
  },
  {
    "__docId__": 416,
    "kind": "testIt",
    "name": "it44",
    "testId": 44,
    "memberof": "test/test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe30.it44",
    "access": null,
    "description": "minPointSize is 1.0",
    "lineNumber": 230,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#minPointSize}"
      }
    ],
    "testTargets": [
      "GisplayOptions#minPointSize"
    ]
  },
  {
    "__docId__": 417,
    "kind": "testIt",
    "name": "it45",
    "testId": 45,
    "memberof": "test/test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe30.it45",
    "access": null,
    "description": "maxPointSize is 10.0",
    "lineNumber": 235,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#maxPointSize}"
      }
    ],
    "testTargets": [
      "GisplayOptions#maxPointSize"
    ]
  },
  {
    "__docId__": 418,
    "kind": "testIt",
    "name": "it46",
    "testId": 46,
    "memberof": "test/test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe30.it46",
    "access": null,
    "description": "sizeByClass is false",
    "lineNumber": 240,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#sizeByClass}"
      }
    ],
    "testTargets": [
      "GisplayOptions#sizeByClass"
    ]
  },
  {
    "__docId__": 419,
    "kind": "testIt",
    "name": "it47",
    "testId": 47,
    "memberof": "test/test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe30.it47",
    "access": null,
    "description": "memorySaver is true",
    "lineNumber": 245,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#memorySaver}"
      }
    ],
    "testTargets": [
      "GisplayOptions#memorySaver"
    ]
  },
  {
    "__docId__": 420,
    "kind": "testIt",
    "name": "it48",
    "testId": 48,
    "memberof": "test/test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe30.it48",
    "access": null,
    "description": "colorSchemeId is 1",
    "lineNumber": 250,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#colorSchemeId}"
      }
    ],
    "testTargets": [
      "GisplayOptions#colorSchemeId"
    ]
  },
  {
    "__docId__": 421,
    "kind": "testIt",
    "name": "it49",
    "testId": 49,
    "memberof": "test/test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe30.it49",
    "access": null,
    "description": "legendOnClickFunction is undefined",
    "lineNumber": 255,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#legendOnClickFunction}"
      }
    ],
    "testTargets": [
      "GisplayOptions#legendOnClickFunction"
    ]
  },
  {
    "__docId__": 422,
    "kind": "testIt",
    "name": "it50",
    "testId": 50,
    "memberof": "test/test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe30.it50",
    "access": null,
    "description": "mapOnClickFunction  is undefined",
    "lineNumber": 260,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#mapOnClickFunction}"
      }
    ],
    "testTargets": [
      "GisplayOptions#mapOnClickFunction"
    ]
  },
  {
    "__docId__": 423,
    "kind": "testIt",
    "name": "it51",
    "testId": 51,
    "memberof": "test/test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe30.it51",
    "access": null,
    "description": "alpha is 0.8",
    "lineNumber": 266,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#alpha}"
      }
    ],
    "testTargets": [
      "GisplayOptions#alpha"
    ]
  },
  {
    "__docId__": 424,
    "kind": "testIt",
    "name": "it52",
    "testId": 52,
    "memberof": "test/test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe30.it52",
    "access": null,
    "description": "maxFeatures is equal to Number.MAX_VALUE",
    "lineNumber": 271,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#maxFeatures}"
      }
    ],
    "testTargets": [
      "GisplayOptions#maxFeatures"
    ]
  },
  {
    "__docId__": 425,
    "kind": "testIt",
    "name": "it53",
    "testId": 53,
    "memberof": "test/test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe30.it53",
    "access": null,
    "description": "numberOfLegendItems is 2",
    "lineNumber": 276,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#numberOfLegendItems}"
      }
    ],
    "testTargets": [
      "GisplayOptions#numberOfLegendItems"
    ]
  },
  {
    "__docId__": 426,
    "kind": "testIt",
    "name": "it54",
    "testId": 54,
    "memberof": "test/test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe30.it54",
    "access": null,
    "description": "isDynamic is !memorySaver(true)",
    "lineNumber": 282,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#isDynamic}"
      }
    ],
    "testTargets": [
      "GisplayOptions#isDynamic"
    ]
  },
  {
    "__docId__": 427,
    "kind": "testIt",
    "name": "it55",
    "testId": 55,
    "memberof": "test/test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "test/test.js~describe30.it55",
    "access": null,
    "description": "legendToggle is true",
    "lineNumber": 287,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{GisplayOptions#legendToggle}"
      }
    ],
    "testTargets": [
      "GisplayOptions#legendToggle"
    ]
  }
]